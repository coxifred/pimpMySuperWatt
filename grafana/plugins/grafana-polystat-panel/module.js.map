{"version":3,"file":"module.js","mappings":"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","sources":["webpack://grafana-polystat-panel/../node_modules/semver/classes/comparator.js","webpack://grafana-polystat-panel/../node_modules/semver/classes/range.js","webpack://grafana-polystat-panel/../node_modules/semver/classes/semver.js","webpack://grafana-polystat-panel/../node_modules/semver/functions/clean.js","webpack://grafana-polystat-panel/../node_modules/semver/functions/cmp.js","webpack://grafana-polystat-panel/../node_modules/semver/functions/coerce.js","webpack://grafana-polystat-panel/../node_modules/semver/functions/compare-build.js","webpack://grafana-polystat-panel/../node_modules/semver/functions/compare-loose.js","webpack://grafana-polystat-panel/../node_modules/semver/functions/compare.js","webpack://grafana-polystat-panel/../node_modules/semver/functions/diff.js","webpack://grafana-polystat-panel/../node_modules/semver/functions/eq.js","webpack://grafana-polystat-panel/../node_modules/semver/functions/gt.js","webpack://grafana-polystat-panel/../node_modules/semver/functions/gte.js","webpack://grafana-polystat-panel/../node_modules/semver/functions/inc.js","webpack://grafana-polystat-panel/../node_modules/semver/functions/lt.js","webpack://grafana-polystat-panel/../node_modules/semver/functions/lte.js","webpack://grafana-polystat-panel/../node_modules/semver/functions/major.js","webpack://grafana-polystat-panel/../node_modules/semver/functions/minor.js","webpack://grafana-polystat-panel/../node_modules/semver/functions/neq.js","webpack://grafana-polystat-panel/../node_modules/semver/functions/parse.js","webpack://grafana-polystat-panel/../node_modules/semver/functions/patch.js","webpack://grafana-polystat-panel/../node_modules/semver/functions/prerelease.js","webpack://grafana-polystat-panel/../node_modules/semver/functions/rcompare.js","webpack://grafana-polystat-panel/../node_modules/semver/functions/rsort.js","webpack://grafana-polystat-panel/../node_modules/semver/functions/satisfies.js","webpack://grafana-polystat-panel/../node_modules/semver/functions/sort.js","webpack://grafana-polystat-panel/../node_modules/semver/functions/valid.js","webpack://grafana-polystat-panel/../node_modules/semver/index.js","webpack://grafana-polystat-panel/../node_modules/semver/internal/constants.js","webpack://grafana-polystat-panel/../node_modules/semver/internal/debug.js","webpack://grafana-polystat-panel/../node_modules/semver/internal/identifiers.js","webpack://grafana-polystat-panel/../node_modules/semver/internal/lrucache.js","webpack://grafana-polystat-panel/../node_modules/semver/internal/parse-options.js","webpack://grafana-polystat-panel/../node_modules/semver/internal/re.js","webpack://grafana-polystat-panel/../node_modules/semver/ranges/gtr.js","webpack://grafana-polystat-panel/../node_modules/semver/ranges/intersects.js","webpack://grafana-polystat-panel/../node_modules/semver/ranges/ltr.js","webpack://grafana-polystat-panel/../node_modules/semver/ranges/max-satisfying.js","webpack://grafana-polystat-panel/../node_modules/semver/ranges/min-satisfying.js","webpack://grafana-polystat-panel/../node_modules/semver/ranges/min-version.js","webpack://grafana-polystat-panel/../node_modules/semver/ranges/outside.js","webpack://grafana-polystat-panel/../node_modules/semver/ranges/simplify.js","webpack://grafana-polystat-panel/../node_modules/semver/ranges/subset.js","webpack://grafana-polystat-panel/../node_modules/semver/ranges/to-comparators.js","webpack://grafana-polystat-panel/../node_modules/semver/ranges/valid.js","webpack://grafana-polystat-panel/external amd \"@emotion/css\"","webpack://grafana-polystat-panel/external amd \"@grafana/data\"","webpack://grafana-polystat-panel/external amd \"@grafana/runtime\"","webpack://grafana-polystat-panel/external amd \"@grafana/ui\"","webpack://grafana-polystat-panel/external amd \"d3\"","webpack://grafana-polystat-panel/external amd \"lodash\"","webpack://grafana-polystat-panel/external amd \"react\"","webpack://grafana-polystat-panel/../node_modules/classnames/index.js","webpack://grafana-polystat-panel/webpack/bootstrap","webpack://grafana-polystat-panel/webpack/runtime/compat get default export","webpack://grafana-polystat-panel/webpack/runtime/define property getters","webpack://grafana-polystat-panel/webpack/runtime/hasOwnProperty shorthand","webpack://grafana-polystat-panel/webpack/runtime/make namespace object","webpack://grafana-polystat-panel/./components/types.ts","webpack://grafana-polystat-panel/../node_modules/uuid/dist/esm-browser/rng.js","webpack://grafana-polystat-panel/../node_modules/uuid/dist/esm-browser/regex.js","webpack://grafana-polystat-panel/../node_modules/uuid/dist/esm-browser/stringify.js","webpack://grafana-polystat-panel/../node_modules/uuid/dist/esm-browser/validate.js","webpack://grafana-polystat-panel/../node_modules/uuid/dist/esm-browser/v4.js","webpack://grafana-polystat-panel/./components/thresholds/types.ts","webpack://grafana-polystat-panel/./components/thresholds/ThresholdItem.tsx","webpack://grafana-polystat-panel/./components/gradients/color.ts","webpack://grafana-polystat-panel/./components/defaults.ts","webpack://grafana-polystat-panel/./components/thresholds/ThresholdsEditor.tsx","webpack://grafana-polystat-panel/./components/metric_hints.ts","webpack://grafana-polystat-panel/./components/overrides/OverrideItem.tsx","webpack://grafana-polystat-panel/./components/overrides/OverrideEditor.tsx","webpack://grafana-polystat-panel/../node_modules/d3-hexbin/src/hexbin.js","webpack://grafana-polystat-panel/../node_modules/@floating-ui/utils/dist/floating-ui.utils.mjs","webpack://grafana-polystat-panel/../node_modules/@floating-ui/core/dist/floating-ui.core.mjs","webpack://grafana-polystat-panel/../node_modules/@floating-ui/utils/dist/floating-ui.utils.dom.mjs","webpack://grafana-polystat-panel/../node_modules/@floating-ui/dom/dist/floating-ui.dom.mjs","webpack://grafana-polystat-panel/../node_modules/react-tooltip/dist/react-tooltip.min.mjs","webpack://grafana-polystat-panel/./components/gradients/Gradients.tsx","webpack://grafana-polystat-panel/./components/layout/layoutManager.ts","webpack://grafana-polystat-panel/./components/styles.ts","webpack://grafana-polystat-panel/./components/tooltips/Tooltip.tsx","webpack://grafana-polystat-panel/./utils.ts","webpack://grafana-polystat-panel/./components/auto_font_scaler.ts","webpack://grafana-polystat-panel/./components/Polystat.tsx","webpack://grafana-polystat-panel/./components/alignment.ts","webpack://grafana-polystat-panel/./data/deframer.ts","webpack://grafana-polystat-panel/./data/threshold_processor.ts","webpack://grafana-polystat-panel/./data/clickThroughTransformer.ts","webpack://grafana-polystat-panel/./data/types.ts","webpack://grafana-polystat-panel/./data/time_formatter.ts","webpack://grafana-polystat-panel/./data/composite_processor.ts","webpack://grafana-polystat-panel/./data/stats.ts","webpack://grafana-polystat-panel/./data/valueMappingsWrapper/v7/valueMappings.ts","webpack://grafana-polystat-panel/./data/valueMappingsWrapper/v8/types/fieldColor.ts","webpack://grafana-polystat-panel/./data/valueMappingsWrapper/v8/types/thresholds.ts","webpack://grafana-polystat-panel/./data/valueMappingsWrapper/v8/types/valueMappings.ts","webpack://grafana-polystat-panel/./data/valueMappingsWrapper/v8/valueMappings.ts","webpack://grafana-polystat-panel/./data/valueMappingsWrapper/index.ts","webpack://grafana-polystat-panel/./data/override_processor.ts","webpack://grafana-polystat-panel/./data/processor.ts","webpack://grafana-polystat-panel/./components/PolystatPanel.tsx","webpack://grafana-polystat-panel/./components/composites/types.ts","webpack://grafana-polystat-panel/./components/composites/CompositeMetricItem.tsx","webpack://grafana-polystat-panel/./components/composites/CompositeItem.tsx","webpack://grafana-polystat-panel/./components/composites/CompositeEditor.tsx","webpack://grafana-polystat-panel/./components/thresholds/GlobalThresholdEditor.tsx","webpack://grafana-polystat-panel/./migrations.ts","webpack://grafana-polystat-panel/./module.ts","webpack://grafana-polystat-panel/./components/suggestions.ts"],"sourcesContent":["const ANY = Symbol('SemVer ANY')\n// hoisted class for cyclic dependency\nclass Comparator {\n  static get ANY () {\n    return ANY\n  }\n\n  constructor (comp, options) {\n    options = parseOptions(options)\n\n    if (comp instanceof Comparator) {\n      if (comp.loose === !!options.loose) {\n        return comp\n      } else {\n        comp = comp.value\n      }\n    }\n\n    comp = comp.trim().split(/\\s+/).join(' ')\n    debug('comparator', comp, options)\n    this.options = options\n    this.loose = !!options.loose\n    this.parse(comp)\n\n    if (this.semver === ANY) {\n      this.value = ''\n    } else {\n      this.value = this.operator + this.semver.version\n    }\n\n    debug('comp', this)\n  }\n\n  parse (comp) {\n    const r = this.options.loose ? re[t.COMPARATORLOOSE] : re[t.COMPARATOR]\n    const m = comp.match(r)\n\n    if (!m) {\n      throw new TypeError(`Invalid comparator: ${comp}`)\n    }\n\n    this.operator = m[1] !== undefined ? m[1] : ''\n    if (this.operator === '=') {\n      this.operator = ''\n    }\n\n    // if it literally is just '>' or '' then allow anything.\n    if (!m[2]) {\n      this.semver = ANY\n    } else {\n      this.semver = new SemVer(m[2], this.options.loose)\n    }\n  }\n\n  toString () {\n    return this.value\n  }\n\n  test (version) {\n    debug('Comparator.test', version, this.options.loose)\n\n    if (this.semver === ANY || version === ANY) {\n      return true\n    }\n\n    if (typeof version === 'string') {\n      try {\n        version = new SemVer(version, this.options)\n      } catch (er) {\n        return false\n      }\n    }\n\n    return cmp(version, this.operator, this.semver, this.options)\n  }\n\n  intersects (comp, options) {\n    if (!(comp instanceof Comparator)) {\n      throw new TypeError('a Comparator is required')\n    }\n\n    if (this.operator === '') {\n      if (this.value === '') {\n        return true\n      }\n      return new Range(comp.value, options).test(this.value)\n    } else if (comp.operator === '') {\n      if (comp.value === '') {\n        return true\n      }\n      return new Range(this.value, options).test(comp.semver)\n    }\n\n    options = parseOptions(options)\n\n    // Special cases where nothing can possibly be lower\n    if (options.includePrerelease &&\n      (this.value === '<0.0.0-0' || comp.value === '<0.0.0-0')) {\n      return false\n    }\n    if (!options.includePrerelease &&\n      (this.value.startsWith('<0.0.0') || comp.value.startsWith('<0.0.0'))) {\n      return false\n    }\n\n    // Same direction increasing (> or >=)\n    if (this.operator.startsWith('>') && comp.operator.startsWith('>')) {\n      return true\n    }\n    // Same direction decreasing (< or <=)\n    if (this.operator.startsWith('<') && comp.operator.startsWith('<')) {\n      return true\n    }\n    // same SemVer and both sides are inclusive (<= or >=)\n    if (\n      (this.semver.version === comp.semver.version) &&\n      this.operator.includes('=') && comp.operator.includes('=')) {\n      return true\n    }\n    // opposite directions less than\n    if (cmp(this.semver, '<', comp.semver, options) &&\n      this.operator.startsWith('>') && comp.operator.startsWith('<')) {\n      return true\n    }\n    // opposite directions greater than\n    if (cmp(this.semver, '>', comp.semver, options) &&\n      this.operator.startsWith('<') && comp.operator.startsWith('>')) {\n      return true\n    }\n    return false\n  }\n}\n\nmodule.exports = Comparator\n\nconst parseOptions = require('../internal/parse-options')\nconst { safeRe: re, t } = require('../internal/re')\nconst cmp = require('../functions/cmp')\nconst debug = require('../internal/debug')\nconst SemVer = require('./semver')\nconst Range = require('./range')\n","// hoisted class for cyclic dependency\nclass Range {\n  constructor (range, options) {\n    options = parseOptions(options)\n\n    if (range instanceof Range) {\n      if (\n        range.loose === !!options.loose &&\n        range.includePrerelease === !!options.includePrerelease\n      ) {\n        return range\n      } else {\n        return new Range(range.raw, options)\n      }\n    }\n\n    if (range instanceof Comparator) {\n      // just put it in the set and return\n      this.raw = range.value\n      this.set = [[range]]\n      this.format()\n      return this\n    }\n\n    this.options = options\n    this.loose = !!options.loose\n    this.includePrerelease = !!options.includePrerelease\n\n    // First reduce all whitespace as much as possible so we do not have to rely\n    // on potentially slow regexes like \\s*. This is then stored and used for\n    // future error messages as well.\n    this.raw = range\n      .trim()\n      .split(/\\s+/)\n      .join(' ')\n\n    // First, split on ||\n    this.set = this.raw\n      .split('||')\n      // map the range to a 2d array of comparators\n      .map(r => this.parseRange(r.trim()))\n      // throw out any comparator lists that are empty\n      // this generally means that it was not a valid range, which is allowed\n      // in loose mode, but will still throw if the WHOLE range is invalid.\n      .filter(c => c.length)\n\n    if (!this.set.length) {\n      throw new TypeError(`Invalid SemVer Range: ${this.raw}`)\n    }\n\n    // if we have any that are not the null set, throw out null sets.\n    if (this.set.length > 1) {\n      // keep the first one, in case they're all null sets\n      const first = this.set[0]\n      this.set = this.set.filter(c => !isNullSet(c[0]))\n      if (this.set.length === 0) {\n        this.set = [first]\n      } else if (this.set.length > 1) {\n        // if we have any that are *, then the range is just *\n        for (const c of this.set) {\n          if (c.length === 1 && isAny(c[0])) {\n            this.set = [c]\n            break\n          }\n        }\n      }\n    }\n\n    this.format()\n  }\n\n  format () {\n    this.range = this.set\n      .map((comps) => comps.join(' ').trim())\n      .join('||')\n      .trim()\n    return this.range\n  }\n\n  toString () {\n    return this.range\n  }\n\n  parseRange (range) {\n    // memoize range parsing for performance.\n    // this is a very hot path, and fully deterministic.\n    const memoOpts =\n      (this.options.includePrerelease && FLAG_INCLUDE_PRERELEASE) |\n      (this.options.loose && FLAG_LOOSE)\n    const memoKey = memoOpts + ':' + range\n    const cached = cache.get(memoKey)\n    if (cached) {\n      return cached\n    }\n\n    const loose = this.options.loose\n    // `1.2.3 - 1.2.4` => `>=1.2.3 <=1.2.4`\n    const hr = loose ? re[t.HYPHENRANGELOOSE] : re[t.HYPHENRANGE]\n    range = range.replace(hr, hyphenReplace(this.options.includePrerelease))\n    debug('hyphen replace', range)\n\n    // `> 1.2.3 < 1.2.5` => `>1.2.3 <1.2.5`\n    range = range.replace(re[t.COMPARATORTRIM], comparatorTrimReplace)\n    debug('comparator trim', range)\n\n    // `~ 1.2.3` => `~1.2.3`\n    range = range.replace(re[t.TILDETRIM], tildeTrimReplace)\n    debug('tilde trim', range)\n\n    // `^ 1.2.3` => `^1.2.3`\n    range = range.replace(re[t.CARETTRIM], caretTrimReplace)\n    debug('caret trim', range)\n\n    // At this point, the range is completely trimmed and\n    // ready to be split into comparators.\n\n    let rangeList = range\n      .split(' ')\n      .map(comp => parseComparator(comp, this.options))\n      .join(' ')\n      .split(/\\s+/)\n      // >=0.0.0 is equivalent to *\n      .map(comp => replaceGTE0(comp, this.options))\n\n    if (loose) {\n      // in loose mode, throw out any that are not valid comparators\n      rangeList = rangeList.filter(comp => {\n        debug('loose invalid filter', comp, this.options)\n        return !!comp.match(re[t.COMPARATORLOOSE])\n      })\n    }\n    debug('range list', rangeList)\n\n    // if any comparators are the null set, then replace with JUST null set\n    // if more than one comparator, remove any * comparators\n    // also, don't include the same comparator more than once\n    const rangeMap = new Map()\n    const comparators = rangeList.map(comp => new Comparator(comp, this.options))\n    for (const comp of comparators) {\n      if (isNullSet(comp)) {\n        return [comp]\n      }\n      rangeMap.set(comp.value, comp)\n    }\n    if (rangeMap.size > 1 && rangeMap.has('')) {\n      rangeMap.delete('')\n    }\n\n    const result = [...rangeMap.values()]\n    cache.set(memoKey, result)\n    return result\n  }\n\n  intersects (range, options) {\n    if (!(range instanceof Range)) {\n      throw new TypeError('a Range is required')\n    }\n\n    return this.set.some((thisComparators) => {\n      return (\n        isSatisfiable(thisComparators, options) &&\n        range.set.some((rangeComparators) => {\n          return (\n            isSatisfiable(rangeComparators, options) &&\n            thisComparators.every((thisComparator) => {\n              return rangeComparators.every((rangeComparator) => {\n                return thisComparator.intersects(rangeComparator, options)\n              })\n            })\n          )\n        })\n      )\n    })\n  }\n\n  // if ANY of the sets match ALL of its comparators, then pass\n  test (version) {\n    if (!version) {\n      return false\n    }\n\n    if (typeof version === 'string') {\n      try {\n        version = new SemVer(version, this.options)\n      } catch (er) {\n        return false\n      }\n    }\n\n    for (let i = 0; i < this.set.length; i++) {\n      if (testSet(this.set[i], version, this.options)) {\n        return true\n      }\n    }\n    return false\n  }\n}\n\nmodule.exports = Range\n\nconst LRU = require('../internal/lrucache')\nconst cache = new LRU()\n\nconst parseOptions = require('../internal/parse-options')\nconst Comparator = require('./comparator')\nconst debug = require('../internal/debug')\nconst SemVer = require('./semver')\nconst {\n  safeRe: re,\n  t,\n  comparatorTrimReplace,\n  tildeTrimReplace,\n  caretTrimReplace,\n} = require('../internal/re')\nconst { FLAG_INCLUDE_PRERELEASE, FLAG_LOOSE } = require('../internal/constants')\n\nconst isNullSet = c => c.value === '<0.0.0-0'\nconst isAny = c => c.value === ''\n\n// take a set of comparators and determine whether there\n// exists a version which can satisfy it\nconst isSatisfiable = (comparators, options) => {\n  let result = true\n  const remainingComparators = comparators.slice()\n  let testComparator = remainingComparators.pop()\n\n  while (result && remainingComparators.length) {\n    result = remainingComparators.every((otherComparator) => {\n      return testComparator.intersects(otherComparator, options)\n    })\n\n    testComparator = remainingComparators.pop()\n  }\n\n  return result\n}\n\n// comprised of xranges, tildes, stars, and gtlt's at this point.\n// already replaced the hyphen ranges\n// turn into a set of JUST comparators.\nconst parseComparator = (comp, options) => {\n  debug('comp', comp, options)\n  comp = replaceCarets(comp, options)\n  debug('caret', comp)\n  comp = replaceTildes(comp, options)\n  debug('tildes', comp)\n  comp = replaceXRanges(comp, options)\n  debug('xrange', comp)\n  comp = replaceStars(comp, options)\n  debug('stars', comp)\n  return comp\n}\n\nconst isX = id => !id || id.toLowerCase() === 'x' || id === '*'\n\n// ~, ~> --> * (any, kinda silly)\n// ~2, ~2.x, ~2.x.x, ~>2, ~>2.x ~>2.x.x --> >=2.0.0 <3.0.0-0\n// ~2.0, ~2.0.x, ~>2.0, ~>2.0.x --> >=2.0.0 <2.1.0-0\n// ~1.2, ~1.2.x, ~>1.2, ~>1.2.x --> >=1.2.0 <1.3.0-0\n// ~1.2.3, ~>1.2.3 --> >=1.2.3 <1.3.0-0\n// ~1.2.0, ~>1.2.0 --> >=1.2.0 <1.3.0-0\n// ~0.0.1 --> >=0.0.1 <0.1.0-0\nconst replaceTildes = (comp, options) => {\n  return comp\n    .trim()\n    .split(/\\s+/)\n    .map((c) => replaceTilde(c, options))\n    .join(' ')\n}\n\nconst replaceTilde = (comp, options) => {\n  const r = options.loose ? re[t.TILDELOOSE] : re[t.TILDE]\n  return comp.replace(r, (_, M, m, p, pr) => {\n    debug('tilde', comp, _, M, m, p, pr)\n    let ret\n\n    if (isX(M)) {\n      ret = ''\n    } else if (isX(m)) {\n      ret = `>=${M}.0.0 <${+M + 1}.0.0-0`\n    } else if (isX(p)) {\n      // ~1.2 == >=1.2.0 <1.3.0-0\n      ret = `>=${M}.${m}.0 <${M}.${+m + 1}.0-0`\n    } else if (pr) {\n      debug('replaceTilde pr', pr)\n      ret = `>=${M}.${m}.${p}-${pr\n      } <${M}.${+m + 1}.0-0`\n    } else {\n      // ~1.2.3 == >=1.2.3 <1.3.0-0\n      ret = `>=${M}.${m}.${p\n      } <${M}.${+m + 1}.0-0`\n    }\n\n    debug('tilde return', ret)\n    return ret\n  })\n}\n\n// ^ --> * (any, kinda silly)\n// ^2, ^2.x, ^2.x.x --> >=2.0.0 <3.0.0-0\n// ^2.0, ^2.0.x --> >=2.0.0 <3.0.0-0\n// ^1.2, ^1.2.x --> >=1.2.0 <2.0.0-0\n// ^1.2.3 --> >=1.2.3 <2.0.0-0\n// ^1.2.0 --> >=1.2.0 <2.0.0-0\n// ^0.0.1 --> >=0.0.1 <0.0.2-0\n// ^0.1.0 --> >=0.1.0 <0.2.0-0\nconst replaceCarets = (comp, options) => {\n  return comp\n    .trim()\n    .split(/\\s+/)\n    .map((c) => replaceCaret(c, options))\n    .join(' ')\n}\n\nconst replaceCaret = (comp, options) => {\n  debug('caret', comp, options)\n  const r = options.loose ? re[t.CARETLOOSE] : re[t.CARET]\n  const z = options.includePrerelease ? '-0' : ''\n  return comp.replace(r, (_, M, m, p, pr) => {\n    debug('caret', comp, _, M, m, p, pr)\n    let ret\n\n    if (isX(M)) {\n      ret = ''\n    } else if (isX(m)) {\n      ret = `>=${M}.0.0${z} <${+M + 1}.0.0-0`\n    } else if (isX(p)) {\n      if (M === '0') {\n        ret = `>=${M}.${m}.0${z} <${M}.${+m + 1}.0-0`\n      } else {\n        ret = `>=${M}.${m}.0${z} <${+M + 1}.0.0-0`\n      }\n    } else if (pr) {\n      debug('replaceCaret pr', pr)\n      if (M === '0') {\n        if (m === '0') {\n          ret = `>=${M}.${m}.${p}-${pr\n          } <${M}.${m}.${+p + 1}-0`\n        } else {\n          ret = `>=${M}.${m}.${p}-${pr\n          } <${M}.${+m + 1}.0-0`\n        }\n      } else {\n        ret = `>=${M}.${m}.${p}-${pr\n        } <${+M + 1}.0.0-0`\n      }\n    } else {\n      debug('no pr')\n      if (M === '0') {\n        if (m === '0') {\n          ret = `>=${M}.${m}.${p\n          }${z} <${M}.${m}.${+p + 1}-0`\n        } else {\n          ret = `>=${M}.${m}.${p\n          }${z} <${M}.${+m + 1}.0-0`\n        }\n      } else {\n        ret = `>=${M}.${m}.${p\n        } <${+M + 1}.0.0-0`\n      }\n    }\n\n    debug('caret return', ret)\n    return ret\n  })\n}\n\nconst replaceXRanges = (comp, options) => {\n  debug('replaceXRanges', comp, options)\n  return comp\n    .split(/\\s+/)\n    .map((c) => replaceXRange(c, options))\n    .join(' ')\n}\n\nconst replaceXRange = (comp, options) => {\n  comp = comp.trim()\n  const r = options.loose ? re[t.XRANGELOOSE] : re[t.XRANGE]\n  return comp.replace(r, (ret, gtlt, M, m, p, pr) => {\n    debug('xRange', comp, ret, gtlt, M, m, p, pr)\n    const xM = isX(M)\n    const xm = xM || isX(m)\n    const xp = xm || isX(p)\n    const anyX = xp\n\n    if (gtlt === '=' && anyX) {\n      gtlt = ''\n    }\n\n    // if we're including prereleases in the match, then we need\n    // to fix this to -0, the lowest possible prerelease value\n    pr = options.includePrerelease ? '-0' : ''\n\n    if (xM) {\n      if (gtlt === '>' || gtlt === '<') {\n        // nothing is allowed\n        ret = '<0.0.0-0'\n      } else {\n        // nothing is forbidden\n        ret = '*'\n      }\n    } else if (gtlt && anyX) {\n      // we know patch is an x, because we have any x at all.\n      // replace X with 0\n      if (xm) {\n        m = 0\n      }\n      p = 0\n\n      if (gtlt === '>') {\n        // >1 => >=2.0.0\n        // >1.2 => >=1.3.0\n        gtlt = '>='\n        if (xm) {\n          M = +M + 1\n          m = 0\n          p = 0\n        } else {\n          m = +m + 1\n          p = 0\n        }\n      } else if (gtlt === '<=') {\n        // <=0.7.x is actually <0.8.0, since any 0.7.x should\n        // pass.  Similarly, <=7.x is actually <8.0.0, etc.\n        gtlt = '<'\n        if (xm) {\n          M = +M + 1\n        } else {\n          m = +m + 1\n        }\n      }\n\n      if (gtlt === '<') {\n        pr = '-0'\n      }\n\n      ret = `${gtlt + M}.${m}.${p}${pr}`\n    } else if (xm) {\n      ret = `>=${M}.0.0${pr} <${+M + 1}.0.0-0`\n    } else if (xp) {\n      ret = `>=${M}.${m}.0${pr\n      } <${M}.${+m + 1}.0-0`\n    }\n\n    debug('xRange return', ret)\n\n    return ret\n  })\n}\n\n// Because * is AND-ed with everything else in the comparator,\n// and '' means \"any version\", just remove the *s entirely.\nconst replaceStars = (comp, options) => {\n  debug('replaceStars', comp, options)\n  // Looseness is ignored here.  star is always as loose as it gets!\n  return comp\n    .trim()\n    .replace(re[t.STAR], '')\n}\n\nconst replaceGTE0 = (comp, options) => {\n  debug('replaceGTE0', comp, options)\n  return comp\n    .trim()\n    .replace(re[options.includePrerelease ? t.GTE0PRE : t.GTE0], '')\n}\n\n// This function is passed to string.replace(re[t.HYPHENRANGE])\n// M, m, patch, prerelease, build\n// 1.2 - 3.4.5 => >=1.2.0 <=3.4.5\n// 1.2.3 - 3.4 => >=1.2.0 <3.5.0-0 Any 3.4.x will do\n// 1.2 - 3.4 => >=1.2.0 <3.5.0-0\n// TODO build?\nconst hyphenReplace = incPr => ($0,\n  from, fM, fm, fp, fpr, fb,\n  to, tM, tm, tp, tpr) => {\n  if (isX(fM)) {\n    from = ''\n  } else if (isX(fm)) {\n    from = `>=${fM}.0.0${incPr ? '-0' : ''}`\n  } else if (isX(fp)) {\n    from = `>=${fM}.${fm}.0${incPr ? '-0' : ''}`\n  } else if (fpr) {\n    from = `>=${from}`\n  } else {\n    from = `>=${from}${incPr ? '-0' : ''}`\n  }\n\n  if (isX(tM)) {\n    to = ''\n  } else if (isX(tm)) {\n    to = `<${+tM + 1}.0.0-0`\n  } else if (isX(tp)) {\n    to = `<${tM}.${+tm + 1}.0-0`\n  } else if (tpr) {\n    to = `<=${tM}.${tm}.${tp}-${tpr}`\n  } else if (incPr) {\n    to = `<${tM}.${tm}.${+tp + 1}-0`\n  } else {\n    to = `<=${to}`\n  }\n\n  return `${from} ${to}`.trim()\n}\n\nconst testSet = (set, version, options) => {\n  for (let i = 0; i < set.length; i++) {\n    if (!set[i].test(version)) {\n      return false\n    }\n  }\n\n  if (version.prerelease.length && !options.includePrerelease) {\n    // Find the set of versions that are allowed to have prereleases\n    // For example, ^1.2.3-pr.1 desugars to >=1.2.3-pr.1 <2.0.0\n    // That should allow `1.2.3-pr.2` to pass.\n    // However, `1.2.4-alpha.notready` should NOT be allowed,\n    // even though it's within the range set by the comparators.\n    for (let i = 0; i < set.length; i++) {\n      debug(set[i].semver)\n      if (set[i].semver === Comparator.ANY) {\n        continue\n      }\n\n      if (set[i].semver.prerelease.length > 0) {\n        const allowed = set[i].semver\n        if (allowed.major === version.major &&\n            allowed.minor === version.minor &&\n            allowed.patch === version.patch) {\n          return true\n        }\n      }\n    }\n\n    // Version has a -pre, but it's not one of the ones we like.\n    return false\n  }\n\n  return true\n}\n","const debug = require('../internal/debug')\nconst { MAX_LENGTH, MAX_SAFE_INTEGER } = require('../internal/constants')\nconst { safeRe: re, t } = require('../internal/re')\n\nconst parseOptions = require('../internal/parse-options')\nconst { compareIdentifiers } = require('../internal/identifiers')\nclass SemVer {\n  constructor (version, options) {\n    options = parseOptions(options)\n\n    if (version instanceof SemVer) {\n      if (version.loose === !!options.loose &&\n          version.includePrerelease === !!options.includePrerelease) {\n        return version\n      } else {\n        version = version.version\n      }\n    } else if (typeof version !== 'string') {\n      throw new TypeError(`Invalid version. Must be a string. Got type \"${typeof version}\".`)\n    }\n\n    if (version.length > MAX_LENGTH) {\n      throw new TypeError(\n        `version is longer than ${MAX_LENGTH} characters`\n      )\n    }\n\n    debug('SemVer', version, options)\n    this.options = options\n    this.loose = !!options.loose\n    // this isn't actually relevant for versions, but keep it so that we\n    // don't run into trouble passing this.options around.\n    this.includePrerelease = !!options.includePrerelease\n\n    const m = version.trim().match(options.loose ? re[t.LOOSE] : re[t.FULL])\n\n    if (!m) {\n      throw new TypeError(`Invalid Version: ${version}`)\n    }\n\n    this.raw = version\n\n    // these are actually numbers\n    this.major = +m[1]\n    this.minor = +m[2]\n    this.patch = +m[3]\n\n    if (this.major > MAX_SAFE_INTEGER || this.major < 0) {\n      throw new TypeError('Invalid major version')\n    }\n\n    if (this.minor > MAX_SAFE_INTEGER || this.minor < 0) {\n      throw new TypeError('Invalid minor version')\n    }\n\n    if (this.patch > MAX_SAFE_INTEGER || this.patch < 0) {\n      throw new TypeError('Invalid patch version')\n    }\n\n    // numberify any prerelease numeric ids\n    if (!m[4]) {\n      this.prerelease = []\n    } else {\n      this.prerelease = m[4].split('.').map((id) => {\n        if (/^[0-9]+$/.test(id)) {\n          const num = +id\n          if (num >= 0 && num < MAX_SAFE_INTEGER) {\n            return num\n          }\n        }\n        return id\n      })\n    }\n\n    this.build = m[5] ? m[5].split('.') : []\n    this.format()\n  }\n\n  format () {\n    this.version = `${this.major}.${this.minor}.${this.patch}`\n    if (this.prerelease.length) {\n      this.version += `-${this.prerelease.join('.')}`\n    }\n    return this.version\n  }\n\n  toString () {\n    return this.version\n  }\n\n  compare (other) {\n    debug('SemVer.compare', this.version, this.options, other)\n    if (!(other instanceof SemVer)) {\n      if (typeof other === 'string' && other === this.version) {\n        return 0\n      }\n      other = new SemVer(other, this.options)\n    }\n\n    if (other.version === this.version) {\n      return 0\n    }\n\n    return this.compareMain(other) || this.comparePre(other)\n  }\n\n  compareMain (other) {\n    if (!(other instanceof SemVer)) {\n      other = new SemVer(other, this.options)\n    }\n\n    return (\n      compareIdentifiers(this.major, other.major) ||\n      compareIdentifiers(this.minor, other.minor) ||\n      compareIdentifiers(this.patch, other.patch)\n    )\n  }\n\n  comparePre (other) {\n    if (!(other instanceof SemVer)) {\n      other = new SemVer(other, this.options)\n    }\n\n    // NOT having a prerelease is > having one\n    if (this.prerelease.length && !other.prerelease.length) {\n      return -1\n    } else if (!this.prerelease.length && other.prerelease.length) {\n      return 1\n    } else if (!this.prerelease.length && !other.prerelease.length) {\n      return 0\n    }\n\n    let i = 0\n    do {\n      const a = this.prerelease[i]\n      const b = other.prerelease[i]\n      debug('prerelease compare', i, a, b)\n      if (a === undefined && b === undefined) {\n        return 0\n      } else if (b === undefined) {\n        return 1\n      } else if (a === undefined) {\n        return -1\n      } else if (a === b) {\n        continue\n      } else {\n        return compareIdentifiers(a, b)\n      }\n    } while (++i)\n  }\n\n  compareBuild (other) {\n    if (!(other instanceof SemVer)) {\n      other = new SemVer(other, this.options)\n    }\n\n    let i = 0\n    do {\n      const a = this.build[i]\n      const b = other.build[i]\n      debug('build compare', i, a, b)\n      if (a === undefined && b === undefined) {\n        return 0\n      } else if (b === undefined) {\n        return 1\n      } else if (a === undefined) {\n        return -1\n      } else if (a === b) {\n        continue\n      } else {\n        return compareIdentifiers(a, b)\n      }\n    } while (++i)\n  }\n\n  // preminor will bump the version up to the next minor release, and immediately\n  // down to pre-release. premajor and prepatch work the same way.\n  inc (release, identifier, identifierBase) {\n    switch (release) {\n      case 'premajor':\n        this.prerelease.length = 0\n        this.patch = 0\n        this.minor = 0\n        this.major++\n        this.inc('pre', identifier, identifierBase)\n        break\n      case 'preminor':\n        this.prerelease.length = 0\n        this.patch = 0\n        this.minor++\n        this.inc('pre', identifier, identifierBase)\n        break\n      case 'prepatch':\n        // If this is already a prerelease, it will bump to the next version\n        // drop any prereleases that might already exist, since they are not\n        // relevant at this point.\n        this.prerelease.length = 0\n        this.inc('patch', identifier, identifierBase)\n        this.inc('pre', identifier, identifierBase)\n        break\n      // If the input is a non-prerelease version, this acts the same as\n      // prepatch.\n      case 'prerelease':\n        if (this.prerelease.length === 0) {\n          this.inc('patch', identifier, identifierBase)\n        }\n        this.inc('pre', identifier, identifierBase)\n        break\n\n      case 'major':\n        // If this is a pre-major version, bump up to the same major version.\n        // Otherwise increment major.\n        // 1.0.0-5 bumps to 1.0.0\n        // 1.1.0 bumps to 2.0.0\n        if (\n          this.minor !== 0 ||\n          this.patch !== 0 ||\n          this.prerelease.length === 0\n        ) {\n          this.major++\n        }\n        this.minor = 0\n        this.patch = 0\n        this.prerelease = []\n        break\n      case 'minor':\n        // If this is a pre-minor version, bump up to the same minor version.\n        // Otherwise increment minor.\n        // 1.2.0-5 bumps to 1.2.0\n        // 1.2.1 bumps to 1.3.0\n        if (this.patch !== 0 || this.prerelease.length === 0) {\n          this.minor++\n        }\n        this.patch = 0\n        this.prerelease = []\n        break\n      case 'patch':\n        // If this is not a pre-release version, it will increment the patch.\n        // If it is a pre-release it will bump up to the same patch version.\n        // 1.2.0-5 patches to 1.2.0\n        // 1.2.0 patches to 1.2.1\n        if (this.prerelease.length === 0) {\n          this.patch++\n        }\n        this.prerelease = []\n        break\n      // This probably shouldn't be used publicly.\n      // 1.0.0 'pre' would become 1.0.0-0 which is the wrong direction.\n      case 'pre': {\n        const base = Number(identifierBase) ? 1 : 0\n\n        if (!identifier && identifierBase === false) {\n          throw new Error('invalid increment argument: identifier is empty')\n        }\n\n        if (this.prerelease.length === 0) {\n          this.prerelease = [base]\n        } else {\n          let i = this.prerelease.length\n          while (--i >= 0) {\n            if (typeof this.prerelease[i] === 'number') {\n              this.prerelease[i]++\n              i = -2\n            }\n          }\n          if (i === -1) {\n            // didn't increment anything\n            if (identifier === this.prerelease.join('.') && identifierBase === false) {\n              throw new Error('invalid increment argument: identifier already exists')\n            }\n            this.prerelease.push(base)\n          }\n        }\n        if (identifier) {\n          // 1.2.0-beta.1 bumps to 1.2.0-beta.2,\n          // 1.2.0-beta.fooblz or 1.2.0-beta bumps to 1.2.0-beta.0\n          let prerelease = [identifier, base]\n          if (identifierBase === false) {\n            prerelease = [identifier]\n          }\n          if (compareIdentifiers(this.prerelease[0], identifier) === 0) {\n            if (isNaN(this.prerelease[1])) {\n              this.prerelease = prerelease\n            }\n          } else {\n            this.prerelease = prerelease\n          }\n        }\n        break\n      }\n      default:\n        throw new Error(`invalid increment argument: ${release}`)\n    }\n    this.raw = this.format()\n    if (this.build.length) {\n      this.raw += `+${this.build.join('.')}`\n    }\n    return this\n  }\n}\n\nmodule.exports = SemVer\n","const parse = require('./parse')\nconst clean = (version, options) => {\n  const s = parse(version.trim().replace(/^[=v]+/, ''), options)\n  return s ? s.version : null\n}\nmodule.exports = clean\n","const eq = require('./eq')\nconst neq = require('./neq')\nconst gt = require('./gt')\nconst gte = require('./gte')\nconst lt = require('./lt')\nconst lte = require('./lte')\n\nconst cmp = (a, op, b, loose) => {\n  switch (op) {\n    case '===':\n      if (typeof a === 'object') {\n        a = a.version\n      }\n      if (typeof b === 'object') {\n        b = b.version\n      }\n      return a === b\n\n    case '!==':\n      if (typeof a === 'object') {\n        a = a.version\n      }\n      if (typeof b === 'object') {\n        b = b.version\n      }\n      return a !== b\n\n    case '':\n    case '=':\n    case '==':\n      return eq(a, b, loose)\n\n    case '!=':\n      return neq(a, b, loose)\n\n    case '>':\n      return gt(a, b, loose)\n\n    case '>=':\n      return gte(a, b, loose)\n\n    case '<':\n      return lt(a, b, loose)\n\n    case '<=':\n      return lte(a, b, loose)\n\n    default:\n      throw new TypeError(`Invalid operator: ${op}`)\n  }\n}\nmodule.exports = cmp\n","const SemVer = require('../classes/semver')\nconst parse = require('./parse')\nconst { safeRe: re, t } = require('../internal/re')\n\nconst coerce = (version, options) => {\n  if (version instanceof SemVer) {\n    return version\n  }\n\n  if (typeof version === 'number') {\n    version = String(version)\n  }\n\n  if (typeof version !== 'string') {\n    return null\n  }\n\n  options = options || {}\n\n  let match = null\n  if (!options.rtl) {\n    match = version.match(options.includePrerelease ? re[t.COERCEFULL] : re[t.COERCE])\n  } else {\n    // Find the right-most coercible string that does not share\n    // a terminus with a more left-ward coercible string.\n    // Eg, '1.2.3.4' wants to coerce '2.3.4', not '3.4' or '4'\n    // With includePrerelease option set, '1.2.3.4-rc' wants to coerce '2.3.4-rc', not '2.3.4'\n    //\n    // Walk through the string checking with a /g regexp\n    // Manually set the index so as to pick up overlapping matches.\n    // Stop when we get a match that ends at the string end, since no\n    // coercible string can be more right-ward without the same terminus.\n    const coerceRtlRegex = options.includePrerelease ? re[t.COERCERTLFULL] : re[t.COERCERTL]\n    let next\n    while ((next = coerceRtlRegex.exec(version)) &&\n        (!match || match.index + match[0].length !== version.length)\n    ) {\n      if (!match ||\n            next.index + next[0].length !== match.index + match[0].length) {\n        match = next\n      }\n      coerceRtlRegex.lastIndex = next.index + next[1].length + next[2].length\n    }\n    // leave it in a clean state\n    coerceRtlRegex.lastIndex = -1\n  }\n\n  if (match === null) {\n    return null\n  }\n\n  const major = match[2]\n  const minor = match[3] || '0'\n  const patch = match[4] || '0'\n  const prerelease = options.includePrerelease && match[5] ? `-${match[5]}` : ''\n  const build = options.includePrerelease && match[6] ? `+${match[6]}` : ''\n\n  return parse(`${major}.${minor}.${patch}${prerelease}${build}`, options)\n}\nmodule.exports = coerce\n","const SemVer = require('../classes/semver')\nconst compareBuild = (a, b, loose) => {\n  const versionA = new SemVer(a, loose)\n  const versionB = new SemVer(b, loose)\n  return versionA.compare(versionB) || versionA.compareBuild(versionB)\n}\nmodule.exports = compareBuild\n","const compare = require('./compare')\nconst compareLoose = (a, b) => compare(a, b, true)\nmodule.exports = compareLoose\n","const SemVer = require('../classes/semver')\nconst compare = (a, b, loose) =>\n  new SemVer(a, loose).compare(new SemVer(b, loose))\n\nmodule.exports = compare\n","const parse = require('./parse.js')\n\nconst diff = (version1, version2) => {\n  const v1 = parse(version1, null, true)\n  const v2 = parse(version2, null, true)\n  const comparison = v1.compare(v2)\n\n  if (comparison === 0) {\n    return null\n  }\n\n  const v1Higher = comparison > 0\n  const highVersion = v1Higher ? v1 : v2\n  const lowVersion = v1Higher ? v2 : v1\n  const highHasPre = !!highVersion.prerelease.length\n  const lowHasPre = !!lowVersion.prerelease.length\n\n  if (lowHasPre && !highHasPre) {\n    // Going from prerelease -> no prerelease requires some special casing\n\n    // If the low version has only a major, then it will always be a major\n    // Some examples:\n    // 1.0.0-1 -> 1.0.0\n    // 1.0.0-1 -> 1.1.1\n    // 1.0.0-1 -> 2.0.0\n    if (!lowVersion.patch && !lowVersion.minor) {\n      return 'major'\n    }\n\n    // Otherwise it can be determined by checking the high version\n\n    if (highVersion.patch) {\n      // anything higher than a patch bump would result in the wrong version\n      return 'patch'\n    }\n\n    if (highVersion.minor) {\n      // anything higher than a minor bump would result in the wrong version\n      return 'minor'\n    }\n\n    // bumping major/minor/patch all have same result\n    return 'major'\n  }\n\n  // add the `pre` prefix if we are going to a prerelease version\n  const prefix = highHasPre ? 'pre' : ''\n\n  if (v1.major !== v2.major) {\n    return prefix + 'major'\n  }\n\n  if (v1.minor !== v2.minor) {\n    return prefix + 'minor'\n  }\n\n  if (v1.patch !== v2.patch) {\n    return prefix + 'patch'\n  }\n\n  // high and low are preleases\n  return 'prerelease'\n}\n\nmodule.exports = diff\n","const compare = require('./compare')\nconst eq = (a, b, loose) => compare(a, b, loose) === 0\nmodule.exports = eq\n","const compare = require('./compare')\nconst gt = (a, b, loose) => compare(a, b, loose) > 0\nmodule.exports = gt\n","const compare = require('./compare')\nconst gte = (a, b, loose) => compare(a, b, loose) >= 0\nmodule.exports = gte\n","const SemVer = require('../classes/semver')\n\nconst inc = (version, release, options, identifier, identifierBase) => {\n  if (typeof (options) === 'string') {\n    identifierBase = identifier\n    identifier = options\n    options = undefined\n  }\n\n  try {\n    return new SemVer(\n      version instanceof SemVer ? version.version : version,\n      options\n    ).inc(release, identifier, identifierBase).version\n  } catch (er) {\n    return null\n  }\n}\nmodule.exports = inc\n","const compare = require('./compare')\nconst lt = (a, b, loose) => compare(a, b, loose) < 0\nmodule.exports = lt\n","const compare = require('./compare')\nconst lte = (a, b, loose) => compare(a, b, loose) <= 0\nmodule.exports = lte\n","const SemVer = require('../classes/semver')\nconst major = (a, loose) => new SemVer(a, loose).major\nmodule.exports = major\n","const SemVer = require('../classes/semver')\nconst minor = (a, loose) => new SemVer(a, loose).minor\nmodule.exports = minor\n","const compare = require('./compare')\nconst neq = (a, b, loose) => compare(a, b, loose) !== 0\nmodule.exports = neq\n","const SemVer = require('../classes/semver')\nconst parse = (version, options, throwErrors = false) => {\n  if (version instanceof SemVer) {\n    return version\n  }\n  try {\n    return new SemVer(version, options)\n  } catch (er) {\n    if (!throwErrors) {\n      return null\n    }\n    throw er\n  }\n}\n\nmodule.exports = parse\n","const SemVer = require('../classes/semver')\nconst patch = (a, loose) => new SemVer(a, loose).patch\nmodule.exports = patch\n","const parse = require('./parse')\nconst prerelease = (version, options) => {\n  const parsed = parse(version, options)\n  return (parsed && parsed.prerelease.length) ? parsed.prerelease : null\n}\nmodule.exports = prerelease\n","const compare = require('./compare')\nconst rcompare = (a, b, loose) => compare(b, a, loose)\nmodule.exports = rcompare\n","const compareBuild = require('./compare-build')\nconst rsort = (list, loose) => list.sort((a, b) => compareBuild(b, a, loose))\nmodule.exports = rsort\n","const Range = require('../classes/range')\nconst satisfies = (version, range, options) => {\n  try {\n    range = new Range(range, options)\n  } catch (er) {\n    return false\n  }\n  return range.test(version)\n}\nmodule.exports = satisfies\n","const compareBuild = require('./compare-build')\nconst sort = (list, loose) => list.sort((a, b) => compareBuild(a, b, loose))\nmodule.exports = sort\n","const parse = require('./parse')\nconst valid = (version, options) => {\n  const v = parse(version, options)\n  return v ? v.version : null\n}\nmodule.exports = valid\n","// just pre-load all the stuff that index.js lazily exports\nconst internalRe = require('./internal/re')\nconst constants = require('./internal/constants')\nconst SemVer = require('./classes/semver')\nconst identifiers = require('./internal/identifiers')\nconst parse = require('./functions/parse')\nconst valid = require('./functions/valid')\nconst clean = require('./functions/clean')\nconst inc = require('./functions/inc')\nconst diff = require('./functions/diff')\nconst major = require('./functions/major')\nconst minor = require('./functions/minor')\nconst patch = require('./functions/patch')\nconst prerelease = require('./functions/prerelease')\nconst compare = require('./functions/compare')\nconst rcompare = require('./functions/rcompare')\nconst compareLoose = require('./functions/compare-loose')\nconst compareBuild = require('./functions/compare-build')\nconst sort = require('./functions/sort')\nconst rsort = require('./functions/rsort')\nconst gt = require('./functions/gt')\nconst lt = require('./functions/lt')\nconst eq = require('./functions/eq')\nconst neq = require('./functions/neq')\nconst gte = require('./functions/gte')\nconst lte = require('./functions/lte')\nconst cmp = require('./functions/cmp')\nconst coerce = require('./functions/coerce')\nconst Comparator = require('./classes/comparator')\nconst Range = require('./classes/range')\nconst satisfies = require('./functions/satisfies')\nconst toComparators = require('./ranges/to-comparators')\nconst maxSatisfying = require('./ranges/max-satisfying')\nconst minSatisfying = require('./ranges/min-satisfying')\nconst minVersion = require('./ranges/min-version')\nconst validRange = require('./ranges/valid')\nconst outside = require('./ranges/outside')\nconst gtr = require('./ranges/gtr')\nconst ltr = require('./ranges/ltr')\nconst intersects = require('./ranges/intersects')\nconst simplifyRange = require('./ranges/simplify')\nconst subset = require('./ranges/subset')\nmodule.exports = {\n  parse,\n  valid,\n  clean,\n  inc,\n  diff,\n  major,\n  minor,\n  patch,\n  prerelease,\n  compare,\n  rcompare,\n  compareLoose,\n  compareBuild,\n  sort,\n  rsort,\n  gt,\n  lt,\n  eq,\n  neq,\n  gte,\n  lte,\n  cmp,\n  coerce,\n  Comparator,\n  Range,\n  satisfies,\n  toComparators,\n  maxSatisfying,\n  minSatisfying,\n  minVersion,\n  validRange,\n  outside,\n  gtr,\n  ltr,\n  intersects,\n  simplifyRange,\n  subset,\n  SemVer,\n  re: internalRe.re,\n  src: internalRe.src,\n  tokens: internalRe.t,\n  SEMVER_SPEC_VERSION: constants.SEMVER_SPEC_VERSION,\n  RELEASE_TYPES: constants.RELEASE_TYPES,\n  compareIdentifiers: identifiers.compareIdentifiers,\n  rcompareIdentifiers: identifiers.rcompareIdentifiers,\n}\n","// Note: this is the semver.org version of the spec that it implements\n// Not necessarily the package version of this code.\nconst SEMVER_SPEC_VERSION = '2.0.0'\n\nconst MAX_LENGTH = 256\nconst MAX_SAFE_INTEGER = Number.MAX_SAFE_INTEGER ||\n/* istanbul ignore next */ 9007199254740991\n\n// Max safe segment length for coercion.\nconst MAX_SAFE_COMPONENT_LENGTH = 16\n\n// Max safe length for a build identifier. The max length minus 6 characters for\n// the shortest version with a build 0.0.0+BUILD.\nconst MAX_SAFE_BUILD_LENGTH = MAX_LENGTH - 6\n\nconst RELEASE_TYPES = [\n  'major',\n  'premajor',\n  'minor',\n  'preminor',\n  'patch',\n  'prepatch',\n  'prerelease',\n]\n\nmodule.exports = {\n  MAX_LENGTH,\n  MAX_SAFE_COMPONENT_LENGTH,\n  MAX_SAFE_BUILD_LENGTH,\n  MAX_SAFE_INTEGER,\n  RELEASE_TYPES,\n  SEMVER_SPEC_VERSION,\n  FLAG_INCLUDE_PRERELEASE: 0b001,\n  FLAG_LOOSE: 0b010,\n}\n","const debug = (\n  typeof process === 'object' &&\n  process.env &&\n  process.env.NODE_DEBUG &&\n  /\\bsemver\\b/i.test(process.env.NODE_DEBUG)\n) ? (...args) => console.error('SEMVER', ...args)\n  : () => {}\n\nmodule.exports = debug\n","const numeric = /^[0-9]+$/\nconst compareIdentifiers = (a, b) => {\n  const anum = numeric.test(a)\n  const bnum = numeric.test(b)\n\n  if (anum && bnum) {\n    a = +a\n    b = +b\n  }\n\n  return a === b ? 0\n    : (anum && !bnum) ? -1\n    : (bnum && !anum) ? 1\n    : a < b ? -1\n    : 1\n}\n\nconst rcompareIdentifiers = (a, b) => compareIdentifiers(b, a)\n\nmodule.exports = {\n  compareIdentifiers,\n  rcompareIdentifiers,\n}\n","class LRUCache {\n  constructor () {\n    this.max = 1000\n    this.map = new Map()\n  }\n\n  get (key) {\n    const value = this.map.get(key)\n    if (value === undefined) {\n      return undefined\n    } else {\n      // Remove the key from the map and add it to the end\n      this.map.delete(key)\n      this.map.set(key, value)\n      return value\n    }\n  }\n\n  delete (key) {\n    return this.map.delete(key)\n  }\n\n  set (key, value) {\n    const deleted = this.delete(key)\n\n    if (!deleted && value !== undefined) {\n      // If cache is full, delete the least recently used item\n      if (this.map.size >= this.max) {\n        const firstKey = this.map.keys().next().value\n        this.delete(firstKey)\n      }\n\n      this.map.set(key, value)\n    }\n\n    return this\n  }\n}\n\nmodule.exports = LRUCache\n","// parse out just the options we care about\nconst looseOption = Object.freeze({ loose: true })\nconst emptyOpts = Object.freeze({ })\nconst parseOptions = options => {\n  if (!options) {\n    return emptyOpts\n  }\n\n  if (typeof options !== 'object') {\n    return looseOption\n  }\n\n  return options\n}\nmodule.exports = parseOptions\n","const {\n  MAX_SAFE_COMPONENT_LENGTH,\n  MAX_SAFE_BUILD_LENGTH,\n  MAX_LENGTH,\n} = require('./constants')\nconst debug = require('./debug')\nexports = module.exports = {}\n\n// The actual regexps go on exports.re\nconst re = exports.re = []\nconst safeRe = exports.safeRe = []\nconst src = exports.src = []\nconst t = exports.t = {}\nlet R = 0\n\nconst LETTERDASHNUMBER = '[a-zA-Z0-9-]'\n\n// Replace some greedy regex tokens to prevent regex dos issues. These regex are\n// used internally via the safeRe object since all inputs in this library get\n// normalized first to trim and collapse all extra whitespace. The original\n// regexes are exported for userland consumption and lower level usage. A\n// future breaking change could export the safer regex only with a note that\n// all input should have extra whitespace removed.\nconst safeRegexReplacements = [\n  ['\\\\s', 1],\n  ['\\\\d', MAX_LENGTH],\n  [LETTERDASHNUMBER, MAX_SAFE_BUILD_LENGTH],\n]\n\nconst makeSafeRegex = (value) => {\n  for (const [token, max] of safeRegexReplacements) {\n    value = value\n      .split(`${token}*`).join(`${token}{0,${max}}`)\n      .split(`${token}+`).join(`${token}{1,${max}}`)\n  }\n  return value\n}\n\nconst createToken = (name, value, isGlobal) => {\n  const safe = makeSafeRegex(value)\n  const index = R++\n  debug(name, index, value)\n  t[name] = index\n  src[index] = value\n  re[index] = new RegExp(value, isGlobal ? 'g' : undefined)\n  safeRe[index] = new RegExp(safe, isGlobal ? 'g' : undefined)\n}\n\n// The following Regular Expressions can be used for tokenizing,\n// validating, and parsing SemVer version strings.\n\n// ## Numeric Identifier\n// A single `0`, or a non-zero digit followed by zero or more digits.\n\ncreateToken('NUMERICIDENTIFIER', '0|[1-9]\\\\d*')\ncreateToken('NUMERICIDENTIFIERLOOSE', '\\\\d+')\n\n// ## Non-numeric Identifier\n// Zero or more digits, followed by a letter or hyphen, and then zero or\n// more letters, digits, or hyphens.\n\ncreateToken('NONNUMERICIDENTIFIER', `\\\\d*[a-zA-Z-]${LETTERDASHNUMBER}*`)\n\n// ## Main Version\n// Three dot-separated numeric identifiers.\n\ncreateToken('MAINVERSION', `(${src[t.NUMERICIDENTIFIER]})\\\\.` +\n                   `(${src[t.NUMERICIDENTIFIER]})\\\\.` +\n                   `(${src[t.NUMERICIDENTIFIER]})`)\n\ncreateToken('MAINVERSIONLOOSE', `(${src[t.NUMERICIDENTIFIERLOOSE]})\\\\.` +\n                        `(${src[t.NUMERICIDENTIFIERLOOSE]})\\\\.` +\n                        `(${src[t.NUMERICIDENTIFIERLOOSE]})`)\n\n// ## Pre-release Version Identifier\n// A numeric identifier, or a non-numeric identifier.\n\ncreateToken('PRERELEASEIDENTIFIER', `(?:${src[t.NUMERICIDENTIFIER]\n}|${src[t.NONNUMERICIDENTIFIER]})`)\n\ncreateToken('PRERELEASEIDENTIFIERLOOSE', `(?:${src[t.NUMERICIDENTIFIERLOOSE]\n}|${src[t.NONNUMERICIDENTIFIER]})`)\n\n// ## Pre-release Version\n// Hyphen, followed by one or more dot-separated pre-release version\n// identifiers.\n\ncreateToken('PRERELEASE', `(?:-(${src[t.PRERELEASEIDENTIFIER]\n}(?:\\\\.${src[t.PRERELEASEIDENTIFIER]})*))`)\n\ncreateToken('PRERELEASELOOSE', `(?:-?(${src[t.PRERELEASEIDENTIFIERLOOSE]\n}(?:\\\\.${src[t.PRERELEASEIDENTIFIERLOOSE]})*))`)\n\n// ## Build Metadata Identifier\n// Any combination of digits, letters, or hyphens.\n\ncreateToken('BUILDIDENTIFIER', `${LETTERDASHNUMBER}+`)\n\n// ## Build Metadata\n// Plus sign, followed by one or more period-separated build metadata\n// identifiers.\n\ncreateToken('BUILD', `(?:\\\\+(${src[t.BUILDIDENTIFIER]\n}(?:\\\\.${src[t.BUILDIDENTIFIER]})*))`)\n\n// ## Full Version String\n// A main version, followed optionally by a pre-release version and\n// build metadata.\n\n// Note that the only major, minor, patch, and pre-release sections of\n// the version string are capturing groups.  The build metadata is not a\n// capturing group, because it should not ever be used in version\n// comparison.\n\ncreateToken('FULLPLAIN', `v?${src[t.MAINVERSION]\n}${src[t.PRERELEASE]}?${\n  src[t.BUILD]}?`)\n\ncreateToken('FULL', `^${src[t.FULLPLAIN]}$`)\n\n// like full, but allows v1.2.3 and =1.2.3, which people do sometimes.\n// also, 1.0.0alpha1 (prerelease without the hyphen) which is pretty\n// common in the npm registry.\ncreateToken('LOOSEPLAIN', `[v=\\\\s]*${src[t.MAINVERSIONLOOSE]\n}${src[t.PRERELEASELOOSE]}?${\n  src[t.BUILD]}?`)\n\ncreateToken('LOOSE', `^${src[t.LOOSEPLAIN]}$`)\n\ncreateToken('GTLT', '((?:<|>)?=?)')\n\n// Something like \"2.*\" or \"1.2.x\".\n// Note that \"x.x\" is a valid xRange identifer, meaning \"any version\"\n// Only the first item is strictly required.\ncreateToken('XRANGEIDENTIFIERLOOSE', `${src[t.NUMERICIDENTIFIERLOOSE]}|x|X|\\\\*`)\ncreateToken('XRANGEIDENTIFIER', `${src[t.NUMERICIDENTIFIER]}|x|X|\\\\*`)\n\ncreateToken('XRANGEPLAIN', `[v=\\\\s]*(${src[t.XRANGEIDENTIFIER]})` +\n                   `(?:\\\\.(${src[t.XRANGEIDENTIFIER]})` +\n                   `(?:\\\\.(${src[t.XRANGEIDENTIFIER]})` +\n                   `(?:${src[t.PRERELEASE]})?${\n                     src[t.BUILD]}?` +\n                   `)?)?`)\n\ncreateToken('XRANGEPLAINLOOSE', `[v=\\\\s]*(${src[t.XRANGEIDENTIFIERLOOSE]})` +\n                        `(?:\\\\.(${src[t.XRANGEIDENTIFIERLOOSE]})` +\n                        `(?:\\\\.(${src[t.XRANGEIDENTIFIERLOOSE]})` +\n                        `(?:${src[t.PRERELEASELOOSE]})?${\n                          src[t.BUILD]}?` +\n                        `)?)?`)\n\ncreateToken('XRANGE', `^${src[t.GTLT]}\\\\s*${src[t.XRANGEPLAIN]}$`)\ncreateToken('XRANGELOOSE', `^${src[t.GTLT]}\\\\s*${src[t.XRANGEPLAINLOOSE]}$`)\n\n// Coercion.\n// Extract anything that could conceivably be a part of a valid semver\ncreateToken('COERCEPLAIN', `${'(^|[^\\\\d])' +\n              '(\\\\d{1,'}${MAX_SAFE_COMPONENT_LENGTH}})` +\n              `(?:\\\\.(\\\\d{1,${MAX_SAFE_COMPONENT_LENGTH}}))?` +\n              `(?:\\\\.(\\\\d{1,${MAX_SAFE_COMPONENT_LENGTH}}))?`)\ncreateToken('COERCE', `${src[t.COERCEPLAIN]}(?:$|[^\\\\d])`)\ncreateToken('COERCEFULL', src[t.COERCEPLAIN] +\n              `(?:${src[t.PRERELEASE]})?` +\n              `(?:${src[t.BUILD]})?` +\n              `(?:$|[^\\\\d])`)\ncreateToken('COERCERTL', src[t.COERCE], true)\ncreateToken('COERCERTLFULL', src[t.COERCEFULL], true)\n\n// Tilde ranges.\n// Meaning is \"reasonably at or greater than\"\ncreateToken('LONETILDE', '(?:~>?)')\n\ncreateToken('TILDETRIM', `(\\\\s*)${src[t.LONETILDE]}\\\\s+`, true)\nexports.tildeTrimReplace = '$1~'\n\ncreateToken('TILDE', `^${src[t.LONETILDE]}${src[t.XRANGEPLAIN]}$`)\ncreateToken('TILDELOOSE', `^${src[t.LONETILDE]}${src[t.XRANGEPLAINLOOSE]}$`)\n\n// Caret ranges.\n// Meaning is \"at least and backwards compatible with\"\ncreateToken('LONECARET', '(?:\\\\^)')\n\ncreateToken('CARETTRIM', `(\\\\s*)${src[t.LONECARET]}\\\\s+`, true)\nexports.caretTrimReplace = '$1^'\n\ncreateToken('CARET', `^${src[t.LONECARET]}${src[t.XRANGEPLAIN]}$`)\ncreateToken('CARETLOOSE', `^${src[t.LONECARET]}${src[t.XRANGEPLAINLOOSE]}$`)\n\n// A simple gt/lt/eq thing, or just \"\" to indicate \"any version\"\ncreateToken('COMPARATORLOOSE', `^${src[t.GTLT]}\\\\s*(${src[t.LOOSEPLAIN]})$|^$`)\ncreateToken('COMPARATOR', `^${src[t.GTLT]}\\\\s*(${src[t.FULLPLAIN]})$|^$`)\n\n// An expression to strip any whitespace between the gtlt and the thing\n// it modifies, so that `> 1.2.3` ==> `>1.2.3`\ncreateToken('COMPARATORTRIM', `(\\\\s*)${src[t.GTLT]\n}\\\\s*(${src[t.LOOSEPLAIN]}|${src[t.XRANGEPLAIN]})`, true)\nexports.comparatorTrimReplace = '$1$2$3'\n\n// Something like `1.2.3 - 1.2.4`\n// Note that these all use the loose form, because they'll be\n// checked against either the strict or loose comparator form\n// later.\ncreateToken('HYPHENRANGE', `^\\\\s*(${src[t.XRANGEPLAIN]})` +\n                   `\\\\s+-\\\\s+` +\n                   `(${src[t.XRANGEPLAIN]})` +\n                   `\\\\s*$`)\n\ncreateToken('HYPHENRANGELOOSE', `^\\\\s*(${src[t.XRANGEPLAINLOOSE]})` +\n                        `\\\\s+-\\\\s+` +\n                        `(${src[t.XRANGEPLAINLOOSE]})` +\n                        `\\\\s*$`)\n\n// Star ranges basically just allow anything at all.\ncreateToken('STAR', '(<|>)?=?\\\\s*\\\\*')\n// >=0.0.0 is like a star\ncreateToken('GTE0', '^\\\\s*>=\\\\s*0\\\\.0\\\\.0\\\\s*$')\ncreateToken('GTE0PRE', '^\\\\s*>=\\\\s*0\\\\.0\\\\.0-0\\\\s*$')\n","// Determine if version is greater than all the versions possible in the range.\nconst outside = require('./outside')\nconst gtr = (version, range, options) => outside(version, range, '>', options)\nmodule.exports = gtr\n","const Range = require('../classes/range')\nconst intersects = (r1, r2, options) => {\n  r1 = new Range(r1, options)\n  r2 = new Range(r2, options)\n  return r1.intersects(r2, options)\n}\nmodule.exports = intersects\n","const outside = require('./outside')\n// Determine if version is less than all the versions possible in the range\nconst ltr = (version, range, options) => outside(version, range, '<', options)\nmodule.exports = ltr\n","const SemVer = require('../classes/semver')\nconst Range = require('../classes/range')\n\nconst maxSatisfying = (versions, range, options) => {\n  let max = null\n  let maxSV = null\n  let rangeObj = null\n  try {\n    rangeObj = new Range(range, options)\n  } catch (er) {\n    return null\n  }\n  versions.forEach((v) => {\n    if (rangeObj.test(v)) {\n      // satisfies(v, range, options)\n      if (!max || maxSV.compare(v) === -1) {\n        // compare(max, v, true)\n        max = v\n        maxSV = new SemVer(max, options)\n      }\n    }\n  })\n  return max\n}\nmodule.exports = maxSatisfying\n","const SemVer = require('../classes/semver')\nconst Range = require('../classes/range')\nconst minSatisfying = (versions, range, options) => {\n  let min = null\n  let minSV = null\n  let rangeObj = null\n  try {\n    rangeObj = new Range(range, options)\n  } catch (er) {\n    return null\n  }\n  versions.forEach((v) => {\n    if (rangeObj.test(v)) {\n      // satisfies(v, range, options)\n      if (!min || minSV.compare(v) === 1) {\n        // compare(min, v, true)\n        min = v\n        minSV = new SemVer(min, options)\n      }\n    }\n  })\n  return min\n}\nmodule.exports = minSatisfying\n","const SemVer = require('../classes/semver')\nconst Range = require('../classes/range')\nconst gt = require('../functions/gt')\n\nconst minVersion = (range, loose) => {\n  range = new Range(range, loose)\n\n  let minver = new SemVer('0.0.0')\n  if (range.test(minver)) {\n    return minver\n  }\n\n  minver = new SemVer('0.0.0-0')\n  if (range.test(minver)) {\n    return minver\n  }\n\n  minver = null\n  for (let i = 0; i < range.set.length; ++i) {\n    const comparators = range.set[i]\n\n    let setMin = null\n    comparators.forEach((comparator) => {\n      // Clone to avoid manipulating the comparator's semver object.\n      const compver = new SemVer(comparator.semver.version)\n      switch (comparator.operator) {\n        case '>':\n          if (compver.prerelease.length === 0) {\n            compver.patch++\n          } else {\n            compver.prerelease.push(0)\n          }\n          compver.raw = compver.format()\n          /* fallthrough */\n        case '':\n        case '>=':\n          if (!setMin || gt(compver, setMin)) {\n            setMin = compver\n          }\n          break\n        case '<':\n        case '<=':\n          /* Ignore maximum versions */\n          break\n        /* istanbul ignore next */\n        default:\n          throw new Error(`Unexpected operation: ${comparator.operator}`)\n      }\n    })\n    if (setMin && (!minver || gt(minver, setMin))) {\n      minver = setMin\n    }\n  }\n\n  if (minver && range.test(minver)) {\n    return minver\n  }\n\n  return null\n}\nmodule.exports = minVersion\n","const SemVer = require('../classes/semver')\nconst Comparator = require('../classes/comparator')\nconst { ANY } = Comparator\nconst Range = require('../classes/range')\nconst satisfies = require('../functions/satisfies')\nconst gt = require('../functions/gt')\nconst lt = require('../functions/lt')\nconst lte = require('../functions/lte')\nconst gte = require('../functions/gte')\n\nconst outside = (version, range, hilo, options) => {\n  version = new SemVer(version, options)\n  range = new Range(range, options)\n\n  let gtfn, ltefn, ltfn, comp, ecomp\n  switch (hilo) {\n    case '>':\n      gtfn = gt\n      ltefn = lte\n      ltfn = lt\n      comp = '>'\n      ecomp = '>='\n      break\n    case '<':\n      gtfn = lt\n      ltefn = gte\n      ltfn = gt\n      comp = '<'\n      ecomp = '<='\n      break\n    default:\n      throw new TypeError('Must provide a hilo val of \"<\" or \">\"')\n  }\n\n  // If it satisfies the range it is not outside\n  if (satisfies(version, range, options)) {\n    return false\n  }\n\n  // From now on, variable terms are as if we're in \"gtr\" mode.\n  // but note that everything is flipped for the \"ltr\" function.\n\n  for (let i = 0; i < range.set.length; ++i) {\n    const comparators = range.set[i]\n\n    let high = null\n    let low = null\n\n    comparators.forEach((comparator) => {\n      if (comparator.semver === ANY) {\n        comparator = new Comparator('>=0.0.0')\n      }\n      high = high || comparator\n      low = low || comparator\n      if (gtfn(comparator.semver, high.semver, options)) {\n        high = comparator\n      } else if (ltfn(comparator.semver, low.semver, options)) {\n        low = comparator\n      }\n    })\n\n    // If the edge version comparator has a operator then our version\n    // isn't outside it\n    if (high.operator === comp || high.operator === ecomp) {\n      return false\n    }\n\n    // If the lowest version comparator has an operator and our version\n    // is less than it then it isn't higher than the range\n    if ((!low.operator || low.operator === comp) &&\n        ltefn(version, low.semver)) {\n      return false\n    } else if (low.operator === ecomp && ltfn(version, low.semver)) {\n      return false\n    }\n  }\n  return true\n}\n\nmodule.exports = outside\n","// given a set of versions and a range, create a \"simplified\" range\n// that includes the same versions that the original range does\n// If the original range is shorter than the simplified one, return that.\nconst satisfies = require('../functions/satisfies.js')\nconst compare = require('../functions/compare.js')\nmodule.exports = (versions, range, options) => {\n  const set = []\n  let first = null\n  let prev = null\n  const v = versions.sort((a, b) => compare(a, b, options))\n  for (const version of v) {\n    const included = satisfies(version, range, options)\n    if (included) {\n      prev = version\n      if (!first) {\n        first = version\n      }\n    } else {\n      if (prev) {\n        set.push([first, prev])\n      }\n      prev = null\n      first = null\n    }\n  }\n  if (first) {\n    set.push([first, null])\n  }\n\n  const ranges = []\n  for (const [min, max] of set) {\n    if (min === max) {\n      ranges.push(min)\n    } else if (!max && min === v[0]) {\n      ranges.push('*')\n    } else if (!max) {\n      ranges.push(`>=${min}`)\n    } else if (min === v[0]) {\n      ranges.push(`<=${max}`)\n    } else {\n      ranges.push(`${min} - ${max}`)\n    }\n  }\n  const simplified = ranges.join(' || ')\n  const original = typeof range.raw === 'string' ? range.raw : String(range)\n  return simplified.length < original.length ? simplified : range\n}\n","const Range = require('../classes/range.js')\nconst Comparator = require('../classes/comparator.js')\nconst { ANY } = Comparator\nconst satisfies = require('../functions/satisfies.js')\nconst compare = require('../functions/compare.js')\n\n// Complex range `r1 || r2 || ...` is a subset of `R1 || R2 || ...` iff:\n// - Every simple range `r1, r2, ...` is a null set, OR\n// - Every simple range `r1, r2, ...` which is not a null set is a subset of\n//   some `R1, R2, ...`\n//\n// Simple range `c1 c2 ...` is a subset of simple range `C1 C2 ...` iff:\n// - If c is only the ANY comparator\n//   - If C is only the ANY comparator, return true\n//   - Else if in prerelease mode, return false\n//   - else replace c with `[>=0.0.0]`\n// - If C is only the ANY comparator\n//   - if in prerelease mode, return true\n//   - else replace C with `[>=0.0.0]`\n// - Let EQ be the set of = comparators in c\n// - If EQ is more than one, return true (null set)\n// - Let GT be the highest > or >= comparator in c\n// - Let LT be the lowest < or <= comparator in c\n// - If GT and LT, and GT.semver > LT.semver, return true (null set)\n// - If any C is a = range, and GT or LT are set, return false\n// - If EQ\n//   - If GT, and EQ does not satisfy GT, return true (null set)\n//   - If LT, and EQ does not satisfy LT, return true (null set)\n//   - If EQ satisfies every C, return true\n//   - Else return false\n// - If GT\n//   - If GT.semver is lower than any > or >= comp in C, return false\n//   - If GT is >=, and GT.semver does not satisfy every C, return false\n//   - If GT.semver has a prerelease, and not in prerelease mode\n//     - If no C has a prerelease and the GT.semver tuple, return false\n// - If LT\n//   - If LT.semver is greater than any < or <= comp in C, return false\n//   - If LT is <=, and LT.semver does not satisfy every C, return false\n//   - If GT.semver has a prerelease, and not in prerelease mode\n//     - If no C has a prerelease and the LT.semver tuple, return false\n// - Else return true\n\nconst subset = (sub, dom, options = {}) => {\n  if (sub === dom) {\n    return true\n  }\n\n  sub = new Range(sub, options)\n  dom = new Range(dom, options)\n  let sawNonNull = false\n\n  OUTER: for (const simpleSub of sub.set) {\n    for (const simpleDom of dom.set) {\n      const isSub = simpleSubset(simpleSub, simpleDom, options)\n      sawNonNull = sawNonNull || isSub !== null\n      if (isSub) {\n        continue OUTER\n      }\n    }\n    // the null set is a subset of everything, but null simple ranges in\n    // a complex range should be ignored.  so if we saw a non-null range,\n    // then we know this isn't a subset, but if EVERY simple range was null,\n    // then it is a subset.\n    if (sawNonNull) {\n      return false\n    }\n  }\n  return true\n}\n\nconst minimumVersionWithPreRelease = [new Comparator('>=0.0.0-0')]\nconst minimumVersion = [new Comparator('>=0.0.0')]\n\nconst simpleSubset = (sub, dom, options) => {\n  if (sub === dom) {\n    return true\n  }\n\n  if (sub.length === 1 && sub[0].semver === ANY) {\n    if (dom.length === 1 && dom[0].semver === ANY) {\n      return true\n    } else if (options.includePrerelease) {\n      sub = minimumVersionWithPreRelease\n    } else {\n      sub = minimumVersion\n    }\n  }\n\n  if (dom.length === 1 && dom[0].semver === ANY) {\n    if (options.includePrerelease) {\n      return true\n    } else {\n      dom = minimumVersion\n    }\n  }\n\n  const eqSet = new Set()\n  let gt, lt\n  for (const c of sub) {\n    if (c.operator === '>' || c.operator === '>=') {\n      gt = higherGT(gt, c, options)\n    } else if (c.operator === '<' || c.operator === '<=') {\n      lt = lowerLT(lt, c, options)\n    } else {\n      eqSet.add(c.semver)\n    }\n  }\n\n  if (eqSet.size > 1) {\n    return null\n  }\n\n  let gtltComp\n  if (gt && lt) {\n    gtltComp = compare(gt.semver, lt.semver, options)\n    if (gtltComp > 0) {\n      return null\n    } else if (gtltComp === 0 && (gt.operator !== '>=' || lt.operator !== '<=')) {\n      return null\n    }\n  }\n\n  // will iterate one or zero times\n  for (const eq of eqSet) {\n    if (gt && !satisfies(eq, String(gt), options)) {\n      return null\n    }\n\n    if (lt && !satisfies(eq, String(lt), options)) {\n      return null\n    }\n\n    for (const c of dom) {\n      if (!satisfies(eq, String(c), options)) {\n        return false\n      }\n    }\n\n    return true\n  }\n\n  let higher, lower\n  let hasDomLT, hasDomGT\n  // if the subset has a prerelease, we need a comparator in the superset\n  // with the same tuple and a prerelease, or it's not a subset\n  let needDomLTPre = lt &&\n    !options.includePrerelease &&\n    lt.semver.prerelease.length ? lt.semver : false\n  let needDomGTPre = gt &&\n    !options.includePrerelease &&\n    gt.semver.prerelease.length ? gt.semver : false\n  // exception: <1.2.3-0 is the same as <1.2.3\n  if (needDomLTPre && needDomLTPre.prerelease.length === 1 &&\n      lt.operator === '<' && needDomLTPre.prerelease[0] === 0) {\n    needDomLTPre = false\n  }\n\n  for (const c of dom) {\n    hasDomGT = hasDomGT || c.operator === '>' || c.operator === '>='\n    hasDomLT = hasDomLT || c.operator === '<' || c.operator === '<='\n    if (gt) {\n      if (needDomGTPre) {\n        if (c.semver.prerelease && c.semver.prerelease.length &&\n            c.semver.major === needDomGTPre.major &&\n            c.semver.minor === needDomGTPre.minor &&\n            c.semver.patch === needDomGTPre.patch) {\n          needDomGTPre = false\n        }\n      }\n      if (c.operator === '>' || c.operator === '>=') {\n        higher = higherGT(gt, c, options)\n        if (higher === c && higher !== gt) {\n          return false\n        }\n      } else if (gt.operator === '>=' && !satisfies(gt.semver, String(c), options)) {\n        return false\n      }\n    }\n    if (lt) {\n      if (needDomLTPre) {\n        if (c.semver.prerelease && c.semver.prerelease.length &&\n            c.semver.major === needDomLTPre.major &&\n            c.semver.minor === needDomLTPre.minor &&\n            c.semver.patch === needDomLTPre.patch) {\n          needDomLTPre = false\n        }\n      }\n      if (c.operator === '<' || c.operator === '<=') {\n        lower = lowerLT(lt, c, options)\n        if (lower === c && lower !== lt) {\n          return false\n        }\n      } else if (lt.operator === '<=' && !satisfies(lt.semver, String(c), options)) {\n        return false\n      }\n    }\n    if (!c.operator && (lt || gt) && gtltComp !== 0) {\n      return false\n    }\n  }\n\n  // if there was a < or >, and nothing in the dom, then must be false\n  // UNLESS it was limited by another range in the other direction.\n  // Eg, >1.0.0 <1.0.1 is still a subset of <2.0.0\n  if (gt && hasDomLT && !lt && gtltComp !== 0) {\n    return false\n  }\n\n  if (lt && hasDomGT && !gt && gtltComp !== 0) {\n    return false\n  }\n\n  // we needed a prerelease range in a specific tuple, but didn't get one\n  // then this isn't a subset.  eg >=1.2.3-pre is not a subset of >=1.0.0,\n  // because it includes prereleases in the 1.2.3 tuple\n  if (needDomGTPre || needDomLTPre) {\n    return false\n  }\n\n  return true\n}\n\n// >=1.2.3 is lower than >1.2.3\nconst higherGT = (a, b, options) => {\n  if (!a) {\n    return b\n  }\n  const comp = compare(a.semver, b.semver, options)\n  return comp > 0 ? a\n    : comp < 0 ? b\n    : b.operator === '>' && a.operator === '>=' ? b\n    : a\n}\n\n// <=1.2.3 is higher than <1.2.3\nconst lowerLT = (a, b, options) => {\n  if (!a) {\n    return b\n  }\n  const comp = compare(a.semver, b.semver, options)\n  return comp < 0 ? a\n    : comp > 0 ? b\n    : b.operator === '<' && a.operator === '<=' ? b\n    : a\n}\n\nmodule.exports = subset\n","const Range = require('../classes/range')\n\n// Mostly just for testing and legacy API reasons\nconst toComparators = (range, options) =>\n  new Range(range, options).set\n    .map(comp => comp.map(c => c.value).join(' ').trim().split(' '))\n\nmodule.exports = toComparators\n","const Range = require('../classes/range')\nconst validRange = (range, options) => {\n  try {\n    // Return '*' instead of '' so that truthiness works.\n    // This will throw if it's invalid anyway\n    return new Range(range, options).range || '*'\n  } catch (er) {\n    return null\n  }\n}\nmodule.exports = validRange\n","module.exports = __WEBPACK_EXTERNAL_MODULE__6089__;","module.exports = __WEBPACK_EXTERNAL_MODULE__7781__;","module.exports = __WEBPACK_EXTERNAL_MODULE__8531__;","module.exports = __WEBPACK_EXTERNAL_MODULE__2007__;","module.exports = __WEBPACK_EXTERNAL_MODULE__4201__;","module.exports = __WEBPACK_EXTERNAL_MODULE__3241__;","module.exports = __WEBPACK_EXTERNAL_MODULE__5959__;","/*!\n\tCopyright (c) 2018 Jed Watson.\n\tLicensed under the MIT License (MIT), see\n\thttp://jedwatson.github.io/classnames\n*/\n/* global define */\n\n(function () {\n\t'use strict';\n\n\tvar hasOwn = {}.hasOwnProperty;\n\n\tfunction classNames () {\n\t\tvar classes = '';\n\n\t\tfor (var i = 0; i < arguments.length; i++) {\n\t\t\tvar arg = arguments[i];\n\t\t\tif (arg) {\n\t\t\t\tclasses = appendClass(classes, parseValue(arg));\n\t\t\t}\n\t\t}\n\n\t\treturn classes;\n\t}\n\n\tfunction parseValue (arg) {\n\t\tif (typeof arg === 'string' || typeof arg === 'number') {\n\t\t\treturn arg;\n\t\t}\n\n\t\tif (typeof arg !== 'object') {\n\t\t\treturn '';\n\t\t}\n\n\t\tif (Array.isArray(arg)) {\n\t\t\treturn classNames.apply(null, arg);\n\t\t}\n\n\t\tif (arg.toString !== Object.prototype.toString && !arg.toString.toString().includes('[native code]')) {\n\t\t\treturn arg.toString();\n\t\t}\n\n\t\tvar classes = '';\n\n\t\tfor (var key in arg) {\n\t\t\tif (hasOwn.call(arg, key) && arg[key]) {\n\t\t\t\tclasses = appendClass(classes, key);\n\t\t\t}\n\t\t}\n\n\t\treturn classes;\n\t}\n\n\tfunction appendClass (value, newClass) {\n\t\tif (!newClass) {\n\t\t\treturn value;\n\t\t}\n\t\n\t\tif (value) {\n\t\t\treturn value + ' ' + newClass;\n\t\t}\n\t\n\t\treturn value + newClass;\n\t}\n\n\tif (typeof module !== 'undefined' && module.exports) {\n\t\tclassNames.default = classNames;\n\t\tmodule.exports = classNames;\n\t} else if (typeof define === 'function' && typeof define.amd === 'object' && define.amd) {\n\t\t// register as 'classnames', consistent with npm package name\n\t\tdefine('classnames', [], function () {\n\t\t\treturn classNames;\n\t\t});\n\t} else {\n\t\twindow.classNames = classNames;\n\t}\n}());\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import { SelectableValue } from '@grafana/data';\nimport { CompositeItemType } from 'components/composites/types';\nimport { OverrideItemType } from './overrides/types';\nimport { PolystatThreshold } from './thresholds/types';\n\nexport interface PolystatOptions {\n  autoSizeColumns: boolean;\n  autoSizeRows: boolean;\n  autoSizePolygons: boolean;\n  ellipseCharacters: number;\n  ellipseEnabled: boolean;\n  globalAutoScaleFonts: boolean;\n  globalClickthrough: string;\n  globalClickthroughNewTabEnabled: boolean;\n  globalClickthroughSanitizedEnabled: boolean;\n  globalClickthroughCustomTargetEnabled: boolean;\n  globalClickthroughCustomTarget: string;\n  globalDecimals: number;\n  globalDisplayMode: string;\n  globalDisplayTextTriggeredEmpty: string;\n  globalFillColor: string;\n  globalFontSize: number;\n  globalGradientsEnabled: boolean;\n  globalOperator: string;\n  globalPolygonBorderSize: number;\n  globalPolygonBorderColor: string;\n  globalPolygonSize: number;\n  globalRegexPattern: string;\n  globalShape: PolygonShapes;\n  globalShowValueEnabled: boolean;\n  globalShowTimestampEnabled: boolean;\n  globalShowTimestampFormat: string;\n  globalShowTimestampFontSize: number;\n  globalShowTimestampPosition: TimestampPositions;\n  globalShowTimestampYOffset: number;\n  globalShowTooltipColumnHeadersEnabled: boolean;\n  globalTextFontAutoColor: string;\n  globalTextFontAutoColorEnabled: boolean;\n  globalTextFontColor: string;\n  globalTextFontFamily: string;\n  globalThresholdsConfig: PolystatThreshold[];\n  globalTooltipsEnabled: boolean;\n  globalTooltipsShowTimestampEnabled: boolean;\n  globalTooltipsShowValueEnabled: boolean;\n  globalTooltipsFontFamily: string,\n  globalUnitFormat: string;\n  layoutDisplayLimit: number;\n  layoutNumColumns: number;\n  layoutNumRows: number;\n  processedData?: PolystatModel[] | null;\n  panelHeight: any;\n  panelWidth: any;\n  panelId: number;\n  radius: number | null;\n  renderTime?: Date;\n  sortByField: string;\n  sortByDirection: number;\n  overrideConfig: {\n    overrides: OverrideItemType[];\n  };\n  compositeGlobalAliasingEnabled: boolean;\n  compositeConfig: {\n    animationSpeed: string;\n    composites: CompositeItemType[];\n    enabled: boolean;\n  };\n  tooltipPrimarySortDirection: number;\n  tooltipPrimarySortByField: string;\n  tooltipSecondarySortDirection: number;\n  tooltipSecondarySortByField: string;\n  tooltipDisplayMode: string;\n  tooltipDisplayTextTriggeredEmpty: string;\n}\n\nexport interface PolystatModel {\n  displayMode?: string;\n  thresholdLevel?: number; // 0 = ok, 1 = warn, 2 = crit, 3 = unknown (same as sensu)\n  value: number;\n  valueFormatted: string;\n  valueRounded: number;\n  stats: any;\n  name: string;\n  displayName: string; // Used for composites\n  timestamp: number;\n  prefix: string;\n  suffix: string;\n  color: string;\n  clickThrough: string;\n  operatorName: string;\n  newTabEnabled: boolean;\n  customClickthroughTargetEnabled: boolean;\n  customClickthroughTarget: string;\n  sanitizedURL: string;\n  sanitizeURLEnabled: boolean;\n  showName: boolean;\n  showValue: boolean;\n  showTimestamp: boolean;\n  timestampFormatted: string;\n  isComposite: boolean;\n  members: PolystatModel[];\n  triggerCache?: any; // holds animation frame info\n}\n\nexport enum PolygonShapes {\n  HEXAGON_POINTED_TOP = 'hexagon_pointed_top',\n  CIRCLE = 'circle',\n  SQUARE = 'square',\n}\n\nexport const PolygonNamedShapes = [\n  { value: 'hexagon_pointed_top', label: 'Hexagon Pointed Top' },\n  { value: 'circle', label: 'Circle' },\n  { value: 'square', label: 'Square' },\n];\n\nexport interface PolystatDiameters {\n  diameterX: number;\n  diameterY: number;\n}\n\nexport const OperatorOptions: SelectableValue[] = [\n  { value: 'mean', label: 'Mean (avg)' },\n  { value: 'sum', label: 'Sum' },\n  { value: 'min', label: 'Min' },\n  { value: 'max', label: 'Max' },\n  { value: 'last', label: 'Last' },\n  { value: 'lastNotNull', label: 'Last Not Null' },\n  { value: 'first', label: 'First' },\n  { value: 'firstNotNull', label: 'First Not Null' },\n  { value: 'count', label: 'Count' },\n  { value: 'allIsNull', label: 'All Is Null (boolean)' },\n  { value: 'allIsZero', label: 'All Is Zero (boolean)' },\n  { value: 'delta', label: 'Delta' },\n  { value: 'diff', label: 'Difference' },\n  { value: 'diffperc', label: 'Difference (Percent)' },\n  { value: 'last_time', label: 'Time of Last Point' },\n  { value: 'logmin', label: 'Log Min' },\n  { value: 'name', label: 'Name' },\n  { value: 'nonNullCount', label: 'Non Null Count' },\n  { value: 'previousDeltaUp', label: 'Previous Delta Up' },\n  { value: 'range', label: 'Range' },\n  { value: 'step', label: 'Step' },\n];\n\nexport const SortOptions = [\n  { value: 0, label: 'Disabled' },\n  { value: 1, label: 'Alphabetical (asc)' },\n  { value: 2, label: 'Alphabetical (desc)' },\n  { value: 3, label: 'Numerical (asc)' },\n  { value: 4, label: 'Numerical (desc)' },\n  { value: 5, label: 'Alphabetical (case-insensitive, asc)' },\n  { value: 6, label: 'Alphabetical (case-insensitive, desc)' },\n  { value: 7, label: 'Natural sort (asc)' },\n  { value: 8, label: 'Natural sort (desc)' },\n];\n\nexport const SortOptionOperators = ['disabled', 'asc', 'desc', 'asc', 'desc', 'iasc', 'idesc'];\n\nexport const SortByFieldOptions = [\n  { value: 'name', label: 'Name' },\n  { value: 'thresholdLevel', label: 'Threshold Level' },\n  { value: 'value', label: 'Value' },\n];\n\nexport const DisplayModes = [\n  { value: 'all', label: 'Show All' },\n  { value: 'triggered', label: 'Show Triggered' },\n];\n\nexport const AnimationModes = [\n  { value: 'all', text: 'Show All' },\n  { value: 'triggered', text: 'Show Triggered' },\n];\n\nexport enum FontFamilies {\n  ARIAL = 'Arial',\n  HELVETICA = 'Helvetica',\n  HELVETICA_NEUE = 'Helvetica Neue',\n  INTER = 'Inter',\n  ROBOTO = 'Roboto',\n  ROBOTO_MONO = 'Roboto Mono',\n}\n\nexport const FontFamilyOptions = [\n  { value: FontFamilies.ARIAL, label: 'Arial' },\n  { value: FontFamilies.HELVETICA, label: 'Helvetica' },\n  { value: FontFamilies.HELVETICA_NEUE, label: 'Helvetica Neue' },\n  { value: FontFamilies.INTER, label: 'Inter' },\n  { value: FontFamilies.ROBOTO_MONO, label: 'Roboto Mono' },\n];\nexport const FontFamilyOptionsLegacy = [\n  { value: FontFamilies.ARIAL, label: 'Arial' },\n  { value: FontFamilies.HELVETICA, label: 'Helvetica' },\n  { value: FontFamilies.HELVETICA_NEUE, label: 'Helvetica Neue' },\n  { value: FontFamilies.ROBOTO, label: 'Roboto' },\n  { value: FontFamilies.ROBOTO_MONO, label: 'Roboto Mono' },\n];\n\nexport const ShowTimestampFormats = [\n  { value: 'HH:mm:ss', label: 'HH:mm:ss' },\n  { value: 'YYYY-MM-DD HH:mm', label: 'YYYY-MM-DD HH:mm' },\n  { value: 'YYYY-MM-DD HH:mm:ss', label: 'YYYY-MM-DD HH:mm:ss' },\n  { value: 'YYYY-MM-DD HH:mm:ss.SSS', label: 'YYYY-MM-DD HH:mm:ss.SSS' },\n  { value: 'MM/DD/YY h:mm:ss a', label: 'MM/DD/YY h:mm:ss a' },\n  { value: 'MMMM D, YYYY LT', label: 'MMMM D, YYYY LT' },\n  { value: 'YYYY-MM-DD', label: 'YYYY-MM-DD' },\n];\n\nexport enum TimestampPositions {\n  BELOW_VALUE = 'below_value',\n  ABOVE_VALUE = 'above_value',\n}\n\nexport const ShowTimestampPositions = [\n  { value: TimestampPositions.ABOVE_VALUE, label: 'Above Value' },\n  { value: TimestampPositions.BELOW_VALUE, label: 'Below Value' },\n];\n","// Unique ID creation requires a high quality random # generator. In the browser we therefore\n// require the crypto API and do not support built-in fallback to lower quality random number\n// generators (like Math.random()).\nvar getRandomValues;\nvar rnds8 = new Uint8Array(16);\nexport default function rng() {\n  // lazy load so that environments that need to polyfill have a chance to do so\n  if (!getRandomValues) {\n    // getRandomValues needs to be invoked in a context where \"this\" is a Crypto implementation. Also,\n    // find the complete implementation of crypto (msCrypto) on IE11.\n    getRandomValues = typeof crypto !== 'undefined' && crypto.getRandomValues && crypto.getRandomValues.bind(crypto) || typeof msCrypto !== 'undefined' && typeof msCrypto.getRandomValues === 'function' && msCrypto.getRandomValues.bind(msCrypto);\n\n    if (!getRandomValues) {\n      throw new Error('crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported');\n    }\n  }\n\n  return getRandomValues(rnds8);\n}","export default /^(?:[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}|00000000-0000-0000-0000-000000000000)$/i;","import validate from './validate.js';\n/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */\n\nvar byteToHex = [];\n\nfor (var i = 0; i < 256; ++i) {\n  byteToHex.push((i + 0x100).toString(16).substr(1));\n}\n\nfunction stringify(arr) {\n  var offset = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n  // Note: Be careful editing this code!  It's been tuned for performance\n  // and works in ways you may not expect. See https://github.com/uuidjs/uuid/pull/434\n  var uuid = (byteToHex[arr[offset + 0]] + byteToHex[arr[offset + 1]] + byteToHex[arr[offset + 2]] + byteToHex[arr[offset + 3]] + '-' + byteToHex[arr[offset + 4]] + byteToHex[arr[offset + 5]] + '-' + byteToHex[arr[offset + 6]] + byteToHex[arr[offset + 7]] + '-' + byteToHex[arr[offset + 8]] + byteToHex[arr[offset + 9]] + '-' + byteToHex[arr[offset + 10]] + byteToHex[arr[offset + 11]] + byteToHex[arr[offset + 12]] + byteToHex[arr[offset + 13]] + byteToHex[arr[offset + 14]] + byteToHex[arr[offset + 15]]).toLowerCase(); // Consistency check for valid UUID.  If this throws, it's likely due to one\n  // of the following:\n  // - One or more input array values don't map to a hex octet (leading to\n  // \"undefined\" in the uuid)\n  // - Invalid input values for the RFC `version` or `variant` fields\n\n  if (!validate(uuid)) {\n    throw TypeError('Stringified UUID is invalid');\n  }\n\n  return uuid;\n}\n\nexport default stringify;","import REGEX from './regex.js';\n\nfunction validate(uuid) {\n  return typeof uuid === 'string' && REGEX.test(uuid);\n}\n\nexport default validate;","import rng from './rng.js';\nimport stringify from './stringify.js';\n\nfunction v4(options, buf, offset) {\n  options = options || {};\n  var rnds = options.random || (options.rng || rng)(); // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n\n  rnds[6] = rnds[6] & 0x0f | 0x40;\n  rnds[8] = rnds[8] & 0x3f | 0x80; // Copy bytes to buffer, if provided\n\n  if (buf) {\n    offset = offset || 0;\n\n    for (var i = 0; i < 16; ++i) {\n      buf[offset + i] = rnds[i];\n    }\n\n    return buf;\n  }\n\n  return stringify(rnds);\n}\n\nexport default v4;","import { SelectableValue } from '@grafana/data';\n\nexport interface PolystatThreshold {\n  color: string;\n  state: number;\n  value: number;\n}\n\nexport interface ThresholdItemTracker {\n  threshold: PolystatThreshold;\n  order: number;\n  ID: string;\n}\n\nexport const ThresholdStates: SelectableValue[] = [\n  { value: 0, label: 'ok' },\n  { value: 1, label: 'warning' },\n  { value: 2, label: 'critical' },\n  { value: 3, label: 'custom' },\n];\n","import React, { useState } from 'react';\nimport { GrafanaTheme2, SelectableValue } from '@grafana/data';\nimport { Input, ColorPicker, IconButton, useStyles2, Select } from '@grafana/ui';\nimport { css } from '@emotion/css';\n\nimport { PolystatThreshold, ThresholdStates } from './types';\n\ninterface ThresholdItemProps {\n  threshold: PolystatThreshold;\n  key: string;\n  ID: string;\n  valueSetter: any;\n  colorSetter: any;\n  stateSetter: any;\n  remover: any;\n  index: number;\n  disabled: boolean;\n}\n\nexport const ThresholdItem: React.FC<ThresholdItemProps> = (options: ThresholdItemProps) => {\n  const styles = useStyles2(getThresholdStyles);\n  const getThreshold = (thresholdId: number) => {\n    const keys = ThresholdStates.keys();\n    for (const aKey of keys) {\n      if (ThresholdStates[aKey].value === thresholdId) {\n        return ThresholdStates[aKey];\n      }\n    }\n    // no match, return current by default\n    return ThresholdStates[0];\n  };\n\n  const [threshold, setThreshold] = useState<SelectableValue>(getThreshold(options.threshold.state));\n\n  return (\n    <Input\n      disabled={options.disabled}\n      type=\"number\"\n      step=\"1.0\"\n      key={options.ID}\n      onChange={(e) => options.valueSetter(options.index, Number(e.currentTarget.value))}\n      value={options.threshold.value}\n      prefix={\n        <div className={styles.inputPrefix}>\n          <div className={styles.colorPicker}>\n            <ColorPicker\n              color={options.threshold.color}\n              onChange={(color) => options.colorSetter(options.index, color)}\n              enableNamedColors={true}\n            />\n          </div>\n        </div>\n      }\n      suffix={\n        <>\n          <Select\n            disabled={options.disabled}\n            menuShouldPortal={true}\n            value={threshold}\n            onChange={(v) => {\n              setThreshold(v);\n              options.stateSetter(options.index, v.value);\n            }}\n            options={ThresholdStates}\n          />\n          <IconButton\n            disabled={options.disabled}\n            key=\"deleteThreshold\"\n            variant=\"destructive\"\n            name=\"trash-alt\"\n            tooltip=\"Delete Threshold\"\n            onClick={() => options.remover(options.index)}\n          />\n        </>\n      }\n    />\n  );\n};\n\nconst getThresholdStyles = (theme: GrafanaTheme2) => {\n  return {\n    inputPrefix: css`\n      display: flex;\n      align-items: center;\n    `,\n    colorPicker: css`\n      padding: 0 ${theme.spacing(1)};\n    `,\n  };\n};\n","/*\n  Generic class to provide gradient colors\n\n  Based on https://codepen.io/anon/pen/wWxGkr\n\n*/\nexport class Color {\n  r: number;\n  g: number;\n  b: number;\n\n  constructor(r: number, g: number, b: number) {\n    this.r = r;\n    this.g = g;\n    this.b = b;\n  }\n\n  asHex() {\n    return '#' + ((1 << 24) + (this.r << 16) + (this.g << 8) + this.b).toString(16).slice(1);\n  }\n\n  asRGB() {\n    return 'rgb(' + this.r + ',' + this.g + ',' + this.b + ')';\n  }\n\n  blendWith(col: Color, a: number) {\n    const r = Math.round(col.r * (1 - a) + this.r * a);\n    const g = Math.round(col.g * (1 - a) + this.g * a);\n    const b = Math.round(col.b * (1 - a) + this.b * a);\n    return new Color(r, g, b);\n  }\n\n  Mul(col: Color, a: number) {\n    const r = Math.round((col.r / 255) * this.r * a);\n    const g = Math.round((col.g / 255) * this.g * a);\n    const b = Math.round((col.b / 255) * this.b * a);\n    return new Color(r, g, b);\n  }\n\n  RGBToHex(rgb: any) {\n    let sep = rgb.indexOf(',') > -1 ? ',' : ' ';\n    rgb = rgb.substr(4).split(')')[0].split(sep);\n    // Convert %s to 0–255\n    for (let R in rgb) {\n      let r = rgb[R];\n      if (r.indexOf('%') > -1) {\n        rgb[R] = Math.round((r.substr(0, r.length - 1) / 100) * 255);\n      }\n    }\n  }\n\n  static RGBAToHex(orig: string) {\n    const rgb = orig.replace(/\\s/g, '').match(/^rgba?\\((\\d+),(\\d+),(\\d+),?([^,\\s)]+)?/i);\n    const alpha = ((rgb && rgb[4]) || '').trim();\n    let hex = rgb\n      ? (parseInt(rgb[1], 10) | (1 << 8)).toString(16).slice(1) +\n        (parseInt(rgb[2], 10) | (1 << 8)).toString(16).slice(1) +\n        (parseInt(rgb[3], 10) | (1 << 8)).toString(16).slice(1)\n      : orig;\n\n    let a = '1';\n    if (alpha !== '') {\n      const alphaVal = parseFloat(alpha);\n      // multiply before convert to HEX\n      a = ((alphaVal * 255) | (1 << 8)).toString(16).slice(1);\n    }\n    return '#' + hex + a;\n  }\n\n  fromHex(hex: string) {\n    // http://stackoverflow.com/questions/5623838/rgb-to-hex-and-hex-to-rgb\n    hex = hex.substring(1, 7);\n    const bigint = parseInt(hex, 16);\n    this.r = (bigint >> 16) & 255;\n    this.g = (bigint >> 8) & 255;\n    this.b = bigint & 255;\n  }\n}\n","import { Color } from './gradients/color';\nimport { FontFamilies } from './types';\n\n/**\n * Color to use when rendering without any thresholds/overrides\n */\nexport const GLOBAL_FILL_COLOR_RGBA = 'rgba(10, 85, 161, 1)'; // \"#0a55a1\"\nexport const GLOBAL_FILL_COLOR_HEX = '#0a55a1';\nexport const GLOBAL_FILL_COLOR = new Color(10, 85, 161);\n\nexport const GLOBAL_BORDER_COLOR_RGBA = 'rgba(0, 0, 0, 0)'; // \"#000000\"\n/**\n * Color for threshold OK state\n */\nexport const DEFAULT_OK_COLOR_RGBA = 'rgba(41, 156, 70, 1))'; // #299c46\nexport const DEFAULT_OK_COLOR_HEX = '#299c46';\nexport const DEFAULT_OK_COLOR = new Color(41, 156, 70);\n/**\n * Color for threshold Warning state\n */\nexport const DEFAULT_WARNING_COLOR_RGBA = 'rgba(237, 129, 40, 1)'; // alternates // #FFC837 // '#e5ac0e'\nexport const DEFAULT_WARNING_COLOR_HEX = '#ed8128'; // alternates // #FFC837 // '#e5ac0e'\nexport const DEFAULT_WARNING_COLOR = new Color(237, 129, 40);\n/**\n * Color for threshold Critical state\n */\nexport const DEFAULT_CRITICAL_COLOR_RGBA = 'rgba(245, 54, 54, 1)';\nexport const DEFAULT_CRITICAL_COLOR_HEX = '#f53636';\nexport const DEFAULT_CRITICAL_COLOR = new Color(245, 54, 54);\n\nexport const DEFAULT_NO_THRESHOLD_COLOR_RGBA = GLOBAL_FILL_COLOR_RGBA;\nexport const DEFAULT_NO_THRESHOLD_COLOR_HEX = GLOBAL_FILL_COLOR_HEX;\nexport const DEFAULT_NO_THRESHOLD_COLOR = new Color(64, 64, 160);\n\nexport const DEFAULT_NO_DATA_COLOR_HEX = '#808080'; // \"grey\"\n\n/**\n * Unit to apply to all metrics without overrides\n */\nexport const GLOBAL_UNIT_FORMAT = 'short';\n/**\n * Number of decimals to display in polygon\n */\nexport const GLOBAL_DISPLAY_DECIMALS = 2;\n/**\n * Show all metrics\n */\nexport const GLOBAL_DISPLAY_MODE = 'all';\n/**\n * Display OK when global mode is set to triggered and there are no triggers\n */\nexport const GLOBAL_DISPLAY_TEXT_TRIGGERED_EMPTY = 'OK';\n/**\n * Display average (mean) stat for metric\n */\nexport const GLOBAL_OPERATOR_NAME = 'mean'; // mean\n\nexport const GLOBAL_OVERRIDE_COLORS = [\n  DEFAULT_OK_COLOR_HEX,\n  DEFAULT_WARNING_COLOR_HEX,\n  DEFAULT_CRITICAL_COLOR_HEX,\n  DEFAULT_NO_THRESHOLD_COLOR_HEX,\n];\n\nexport const GLOBAL_TEXT_FONT_FAMILY = FontFamilies.INTER;\nexport const GLOBAL_TOOLTIP_FONT_FAMILY = FontFamilies.INTER;\nexport const GLOBAL_TEXT_FONT_FAMILY_LEGACY = FontFamilies.ROBOTO;\nexport const GLOBAL_TOOLTIP_FONT_FAMILY_LEGACY = FontFamilies.ROBOTO;\n","import React, { useState } from 'react';\nimport { orderBy } from 'lodash';\nimport { Button, useTheme, useTheme2 } from '@grafana/ui';\nimport { v4 as UUIdv4 } from 'uuid';\nimport { PolystatThreshold, ThresholdItemTracker } from './types';\nimport { ThresholdItem } from './ThresholdItem';\nimport { DEFAULT_OK_COLOR_HEX, DEFAULT_WARNING_COLOR_HEX, DEFAULT_CRITICAL_COLOR_HEX } from '../defaults';\nimport { getColorForTheme } from '@grafana/data';\ninterface Props {\n  thresholds: PolystatThreshold[];\n  setter: any;\n  disabled?: boolean;\n}\nexport const ThresholdsEditor: React.FC<Props> = (options) => {\n  const [tracker, _setTracker] = useState((): ThresholdItemTracker[] => {\n    if (!options.thresholds) {\n      return [] as ThresholdItemTracker[];\n    }\n    const items: ThresholdItemTracker[] = [];\n    options.thresholds.forEach((value: PolystatThreshold, index: number) => {\n      items[index] = {\n        threshold: value,\n        order: index,\n        ID: UUIdv4(),\n      };\n    });\n    return items;\n  });\n  // v9 compatible\n  const theme2 = useTheme2();\n  const oldTheme = useTheme();\n\n  const setTracker = (v: ThresholdItemTracker[]) => {\n    _setTracker(v);\n    const allThresholds: PolystatThreshold[] = [];\n    v.forEach((element) => {\n      allThresholds.push(element.threshold);\n    });\n    options.setter(allThresholds);\n  };\n\n  const updateThresholdValue = (index: number, value: number) => {\n    tracker[index].threshold.value = Number(value);\n    // reorder\n    const allThresholds = [...tracker];\n    const orderedThresholds = orderBy(allThresholds, ['threshold.value'], ['asc']);\n    setTracker([...orderedThresholds]);\n  };\n\n  const updateThresholdColor = (index: number, color: string) => {\n    let useColor: string;\n    if (typeof theme2.visualization !== 'undefined') {\n      useColor = theme2.visualization.getColorByName(color);\n    } else {\n      // intentional use of deprecated function for v8 compat\n      // eslint-disable-next-line deprecation/deprecation\n      useColor = getColorForTheme(color, oldTheme);\n    }\n    tracker[index].threshold.color = useColor;\n    setTracker([...tracker]);\n  };\n\n  const updateThresholdState = (index: number, state: any) => {\n    tracker[index].threshold.state = state;\n    // set the color if it is not a custom state\n    if (state < 3) {\n      tracker[index].threshold.color = colorForThresholdState(state);\n    }\n    setTracker([...tracker]);\n  };\n\n  const colorForThresholdState = (state: number) => {\n    switch (state) {\n      case 0:\n        return DEFAULT_OK_COLOR_HEX;\n      case 1:\n        return DEFAULT_WARNING_COLOR_HEX;\n      case 2:\n        return DEFAULT_CRITICAL_COLOR_HEX;\n      default:\n        return DEFAULT_OK_COLOR_HEX;\n    }\n  };\n\n  const removeThreshold = (index: number) => {\n    const allThresholds = [...tracker];\n    let removeIndex = 0;\n    for (let i = 0; i < allThresholds.length; i++) {\n      if (allThresholds[i].order === index) {\n        removeIndex = i;\n        break;\n      }\n    }\n    allThresholds.splice(removeIndex, 1);\n    // reorder\n    for (let i = 0; i < allThresholds.length; i++) {\n      allThresholds[i].order = i;\n    }\n    setTracker([...allThresholds]);\n  };\n\n  const addItem = () => {\n    const order = tracker.length;\n    const aThreshold: PolystatThreshold = {\n      color: DEFAULT_OK_COLOR_HEX, // \"rgba(50, 172, 45, 1)\",  // green\n      state: 0,\n      value: 0,\n    };\n    const aTracker: ThresholdItemTracker = {\n      threshold: aThreshold,\n      order: order,\n      ID: UUIdv4(),\n    };\n    setTracker([...tracker, aTracker]);\n  };\n\n  return (\n    <>\n      <Button disabled={options.disabled} fill=\"solid\" variant=\"primary\" icon=\"plus\" onClick={addItem}>\n        Add Threshold\n      </Button>\n      {tracker &&\n        tracker.map((tracker: ThresholdItemTracker, index: number) => {\n          return (\n            <ThresholdItem\n              disabled={options.disabled || false}\n              key={`threshold-item-index-${tracker.ID}`}\n              ID={tracker.ID}\n              threshold={tracker.threshold}\n              valueSetter={updateThresholdValue}\n              colorSetter={updateThresholdColor}\n              stateSetter={updateThresholdState}\n              remover={removeThreshold}\n              index={index}\n            />\n          );\n        })}\n    </>\n  );\n};\n","import { FieldType } from '@grafana/data';\n\n// builds unique metric names to shorten the list displayed\nexport const getMetricHints = (frames: any) => {\n  let metricHints = new Set<string>();\n  for (let i = 0; i < frames.length; i++) {\n    // start with empty hint\n    let hintValue = '';\n    // the frame may have a name defined, start with it, fields will change it as needed\n    if (frames[i]?.name) {\n      hintValue = frames[i].name;\n    }\n    // iterate over fields, get all number types and provide as hints\n    for (const aField of frames[i].fields) {\n      if (aField.type === FieldType.number) {\n        // update the hint to use the field Name if we didn't get a value from above\n        if ((aField.name) && (hintValue === '')) {\n          hintValue = aField.name;\n        }\n        // check for a label with __name__ and use it instead\n        if (aField?.labels && ('__name__' in aField.labels)) {\n          hintValue = aField.labels['__name__'];\n          // append the rest of the labels\n          const appendLabels: string[] = [];\n          for (const aLabel in aField.labels) {\n            if (aLabel !== '__name__') {\n              appendLabels.push(`${aLabel}=\"${aField.labels[aLabel]}\"`);\n            }\n          }\n          if (appendLabels.length > 0) {\n            // sort them first\n            appendLabels.sort();\n            hintValue += '{' + appendLabels.join('') + '}';\n          }\n        }\n        // update the hint to use the displayNameFromDS value\n        // (the query has a specified a naming convention)\n        if (aField?.config && aField.config?.displayNameFromDS) {\n          hintValue = aField.config?.displayNameFromDS;\n        }\n        metricHints.add(hintValue);\n      }\n    }\n  }\n  return metricHints;\n}\n","import React, { useEffect, useState } from 'react';\n\nimport {\n  IconName,\n  Input,\n  Field,\n  FieldSet,\n  Switch,\n  Card,\n  IconButton,\n  UnitPicker,\n  Select,\n  Cascader,\n  CascaderOption,\n} from '@grafana/ui';\nimport { OverrideItemProps, OverrideItemType } from './types';\nimport { ThresholdsEditor } from '../thresholds/ThresholdsEditor';\nimport { PolystatThreshold } from '../thresholds/types';\nimport { OperatorOptions, ShowTimestampFormats } from '../types';\nimport { SelectableValue } from '@grafana/data';\nimport { getMetricHints } from '../metric_hints';\n\nexport const OverrideItem: React.FC<OverrideItemProps> = (props) => {\n  const [metricHints, setMetricHints] = useState<CascaderOption[]>([]);\n  const [override, _setOverride] = useState(props.override);\n\n  const setOverride = (value: OverrideItemType) => {\n    _setOverride(value);\n    props.setter(override.order, value);\n  };\n  const [visibleIcon] = useState<IconName>('eye');\n  const [hiddenIcon] = useState<IconName>('eye-slash');\n\n  const getOperator = (operatorName: string) => {\n    const keys = OperatorOptions.keys();\n    for (const aKey of keys) {\n      if (OperatorOptions[aKey].value === operatorName) {\n        return OperatorOptions[aKey];\n      }\n    }\n    // no match, return last not null by default\n    return OperatorOptions[5];\n  };\n  const [operatorName, setOperatorName] = useState<SelectableValue>(getOperator(props.override.operatorName));\n  const removeItem = () => {\n    props.remover(override.order);\n  };\n\n  const moveUp = () => {\n    props.moveUp(override.order);\n  };\n  const moveDown = () => {\n    props.moveDown(override.order);\n  };\n  const createDuplicate = () => {\n    props.createDuplicate(override.order);\n  };\n\n  const setThresholds = (val: PolystatThreshold[]) => {\n    setOverride({ ...override, thresholds: val });\n  };\n\n  useEffect(() => {\n    if (props.context.data) {\n      const frames = props.context.data;\n      let hints: CascaderOption[] = [];\n      let metricHints = getMetricHints(frames);\n      for (const metricName of metricHints) {\n        hints.push({\n          label: metricName,\n          value: metricName,\n        });\n      }\n      setMetricHints(hints);\n    }\n  }, [props.context.data]);\n\n  return (\n    <Card key={`override-card-${props.ID}`}>\n      <Card.Meta>\n        <FieldSet>\n          <Field\n            label=\"Label\"\n            description=\"Sets the name of the override in the configuration editor.\"\n            disabled={!override.enabled}\n          >\n            <Input\n              value={override.label}\n              placeholder=\"\"\n              onChange={(e) => setOverride({ ...override, label: e.currentTarget.value })}\n            />\n          </Field>\n          <Field label=\"Metric/RegEx\" disabled={!override.enabled}>\n            <Cascader\n              initialValue={override.metricName}\n              allowCustomValue\n              placeholder=\"\"\n              options={metricHints}\n              onSelect={(val: string) => setOverride({ ...override, metricName: val })}\n            />\n          </Field>\n          <Field label=\"Alias\" disabled={!override.enabled} hidden={true}>\n            <Input\n              value={override.alias}\n              placeholder=\"\"\n              onChange={(e) => setOverride({ ...override, alias: e.currentTarget.value })}\n            />\n          </Field>\n          <Field label=\"Decimals\" disabled={!override.enabled}>\n            <Input\n              value={override.decimals}\n              type=\"number\"\n              step={1}\n              placeholder=\"\"\n              onChange={(e) => setOverride({ ...override, decimals: e.currentTarget.value })}\n            />\n          </Field>\n          <Field label=\"Stat\" description=\"The statistic to be displayed\" disabled={!override.enabled}>\n            <Select\n              menuShouldPortal={true}\n              value={operatorName}\n              onChange={(v) => {\n                setOperatorName(v);\n                setOverride({ ...override, operatorName: v.value });\n              }}\n              options={OperatorOptions}\n            />\n          </Field>\n          <Field label=\"Unit Format\" disabled={!override.enabled}>\n            {override.enabled ? (\n              <UnitPicker\n                value={override.unitFormat}\n                onChange={(val: any) => setOverride({ ...override, unitFormat: val })}\n              />\n            ) : (\n              <span>{override.unitFormat}</span>\n            )}\n          </Field>\n          {/*\n          <Field label=\"Show Timestamp\" description=\"Toggle Display of Timestamp\" disabled={!override.enabled}>\n            <Switch\n              transparent={true}\n              value={override.showTimestampEnabled}\n              disabled={!override.enabled}\n              onChange={() => setOverride({ ...override, showTimestampEnabled: !override.showTimestampEnabled })}\n            />\n          </Field>\n          <Field label=\"Timestamp Format\" description=\"Format of timestamp to display\" disabled={!override.enabled} hidden={!override.showTimestampEnabled}>\n            <Cascader\n              initialValue={override.showTimestampFormat}\n              allowCustomValue\n              placeholder=\"\"\n              options={ShowTimestampFormats}\n              onSelect={(val: string) => setOverride({ ...override, showTimestampFormat: val })}\n            />\n          </Field>\n          <Field label=\"Timestamp Y Offset\" description=\"Adjust the displayed timestamp up or down the Y-Axis, use negative value to move up, positive for down\" disabled={!override.enabled} hidden={!override.showTimestampEnabled}>\n            <Input\n              value={override.showTimestampYOffset}\n              type=\"number\"\n              step={1}\n              placeholder=\"0\"\n              onChange={(v) => setOverride({ ...override, showTimestampYOffset: v.currentTarget.valueAsNumber })}\n            />\n          </Field>\n          */}\n\n          <Field label=\"Thresholds\" disabled={!override.enabled}>\n            <ThresholdsEditor disabled={!override.enabled} thresholds={override.thresholds} setter={setThresholds} />\n          </Field>\n          <Field label=\"Prefix\" description=\"Apply text to beginning of metric\" disabled={!override.enabled}>\n            <Input\n              value={override.prefix}\n              placeholder=\"\"\n              onChange={(e) => setOverride({ ...override, prefix: e.currentTarget.value })}\n            />\n          </Field>\n          <Field label=\"Suffix\" description=\"Apply text to end of metric\" disabled={!override.enabled}>\n            <Input\n              value={override.suffix}\n              placeholder=\"\"\n              onChange={(e) => setOverride({ ...override, suffix: e.currentTarget.value })}\n            />\n          </Field>\n          <Field label=\"Clickthrough URL\" description=\"URL to Open on Click\" disabled={!override.enabled}>\n            <Input\n              value={override.clickThrough}\n              placeholder=\"https://\"\n              onChange={(e) => setOverride({ ...override, clickThrough: e.currentTarget.value })}\n            />\n          </Field>\n          <Field label=\"Sanitize URL\" description=\"Sanitize URL before evaluating\" disabled={!override.enabled}>\n            <Switch\n              transparent={false}\n              disabled={!override.enabled}\n              value={override.clickThroughSanitize}\n              onChange={() => setOverride({ ...override, clickThroughSanitize: !override.clickThroughSanitize })}\n            />\n          </Field>\n          <Field label=\"Open URL in New Tab\" description=\"Open link in new tab\" disabled={!override.enabled}>\n            <Switch\n              transparent={false}\n              value={override.clickThroughOpenNewTab}\n              disabled={!override.enabled}\n              onChange={() => setOverride({ ...override, clickThroughOpenNewTab: !override.clickThroughOpenNewTab })}\n            />\n          </Field>\n          <Field label=\"Enable Custom URL Target\" description=\"Enable custom target\" disabled={!override.enabled} hidden={override.clickThroughOpenNewTab}>\n            <Switch\n              transparent={false}\n              value={override.clickThroughCustomTargetEnabled}\n              disabled={!override.enabled}\n              onChange={() => setOverride({ ...override,\n                clickThroughCustomTargetEnabled: !override.clickThroughCustomTargetEnabled,\n                clickThroughCustomTarget: override.clickThroughCustomTarget || ''\n              })}\n            />\n          </Field>\n          <Field label=\"Custom URL Target\" description=\"Specify a custom target, typical values are: _blank|_self|_parent|_top|framename\" disabled={!override.enabled} hidden={!override.clickThroughCustomTargetEnabled}>\n            <Input\n              value={override.clickThroughCustomTarget}\n              placeholder=\"_self\"\n              disabled={!override.enabled}\n              onChange={(e) => setOverride({ ...override, clickThroughCustomTarget: e.currentTarget.value })}\n            />\n          </Field>\n        </FieldSet>\n      </Card.Meta>\n\n      <Card.Actions>\n        <IconButton key=\"moveUp\" name=\"arrow-up\" tooltip=\"Move Up\" onClick={moveUp} />\n        <IconButton key=\"moveDown\" name=\"arrow-down\" tooltip=\"Move Down\" onClick={moveDown} />\n        <IconButton\n          key=\"overrideEnabled\"\n          name={override.enabled ? visibleIcon : hiddenIcon}\n          tooltip=\"Hide/Show Override\"\n          onClick={() => setOverride({ ...override, enabled: !override.enabled })}\n        />\n        <IconButton key=\"copyOverride\" name=\"copy\" tooltip=\"Duplicate\" onClick={createDuplicate} />\n        <IconButton\n          key=\"deleteOverride\"\n          variant=\"destructive\"\n          name=\"trash-alt\"\n          tooltip=\"Delete Override\"\n          onClick={removeItem}\n        />\n      </Card.Actions>\n    </Card>\n  );\n};\n","import React, { useState } from 'react';\nimport { StandardEditorProps } from '@grafana/data';\nimport { OverrideItem } from './OverrideItem';\nimport { OverrideItemType, OverrideItemTracker } from './types';\nimport { v4 as UUIdv4 } from 'uuid';\nimport { Button, Collapse } from '@grafana/ui';\nimport { PolystatThreshold } from '../thresholds/types';\nimport { OperatorOptions, ShowTimestampFormats } from '../types';\nimport {\n  DEFAULT_CRITICAL_COLOR_HEX,\n  DEFAULT_NO_THRESHOLD_COLOR_HEX,\n  DEFAULT_OK_COLOR_HEX,\n  DEFAULT_WARNING_COLOR_HEX,\n} from '../defaults';\n\nexport interface OverrideEditorSettings {\n  overrides: OverrideItemType[];\n  enabled: boolean;\n}\n\ninterface Props extends StandardEditorProps<string | string[] | null, OverrideEditorSettings> {}\n\nexport const OverrideEditor: React.FC<Props> = ({ item, context, onChange }) => {\n  const [settings] = useState(context.options.overrideConfig);\n  const [tracker, _setTracker] = useState((): OverrideItemTracker[] => {\n    if (!settings.overrides) {\n      return [] as OverrideItemTracker[];\n    }\n    const items: OverrideItemTracker[] = [];\n    settings.overrides.forEach((value: OverrideItemType, index: number) => {\n      items[index] = {\n        override: value,\n        order: index,\n        ID: UUIdv4(),\n      };\n    });\n    return items;\n  });\n\n  const setTracker = (v: OverrideItemTracker[]) => {\n    _setTracker(v);\n    const allOverrides: OverrideItemType[] = [];\n    v.forEach((element) => {\n      allOverrides.push(element.override);\n    });\n    const overrideConfig = {\n      overrides: allOverrides,\n      enabled: settings.enabled,\n    };\n    onChange(overrideConfig as any);\n  };\n\n  const [isOpen, setIsOpen] = useState((): boolean[] => {\n    if (!tracker) {\n      return [] as boolean[];\n    }\n    let size = tracker.length;\n    const openStates: boolean[] = [];\n    while (size--) {\n      openStates[size] = false;\n    }\n    return openStates;\n  });\n\n  const updateOverride = (index: number, value: OverrideItemType) => {\n    tracker[index].override = value;\n    // works ... setTracker(tracker);\n    setTracker([...tracker]);\n  };\n\n  const createDuplicate = (index: number) => {\n    const original = tracker[index].override;\n    const order = tracker.length;\n    const anOverride: OverrideItemType = {\n      label: `${original.label} Copy`,\n      enabled: original.enabled,\n      metricName: original.metricName,\n      alias: original.alias,\n      thresholds: original.thresholds,\n      prefix: original.prefix,\n      suffix: original.suffix,\n      clickThrough: original.clickThrough,\n      clickThroughOpenNewTab: original.clickThroughOpenNewTab,\n      clickThroughSanitize: original.clickThroughSanitize,\n      clickThroughCustomTargetEnabled: original.clickThroughCustomTargetEnabled,\n      clickThroughCustomTarget: original.clickThroughCustomTarget,\n      showTimestampEnabled: false,\n      showTimestampFormat: ShowTimestampFormats[0].value,\n      showTimestampYOffset: 0,\n      unitFormat: original.unitFormat,\n      scaledDecimals: original.scaledDecimals,\n      decimals: original.decimals,\n      colors: original.colors,\n      operatorName: original.operatorName,\n      order: order,\n    };\n    const aTracker: OverrideItemTracker = {\n      override: anOverride,\n      order: order,\n      ID: UUIdv4(),\n    };\n    setTracker([...tracker, aTracker]);\n    setIsOpen([...isOpen, true]);\n  };\n\n  // generic move\n  const arrayMove = (arr: any, oldIndex: number, newIndex: number) => {\n    if (newIndex >= arr.length) {\n      let k = newIndex - arr.length + 1;\n      while (k--) {\n        arr.push(undefined);\n      }\n    }\n    arr.splice(newIndex, 0, arr.splice(oldIndex, 1)[0]);\n  };\n\n  const moveDown = (index: number) => {\n    if (index !== tracker.length - 1) {\n      arrayMove(tracker, index, index + 1);\n      // reorder\n      for (let i = 0; i < tracker.length; i++) {\n        tracker[i].order = i;\n        tracker[i].override.order = i;\n      }\n      setTracker([...tracker]);\n    }\n  };\n\n  const moveUp = (index: number) => {\n    if (index > 0) {\n      arrayMove(tracker, index, index - 1);\n      // reorder\n      for (let i = 0; i < tracker.length; i++) {\n        tracker[i].order = i;\n        tracker[i].override.order = i;\n      }\n      setTracker([...tracker]);\n    }\n  };\n\n  const removeOverride = (index: number) => {\n    const allOverrides = [...tracker];\n    let removeIndex = 0;\n    for (let i = 0; i < allOverrides.length; i++) {\n      if (allOverrides[i].order === index) {\n        removeIndex = i;\n        break;\n      }\n    }\n    allOverrides.splice(removeIndex, 1);\n    // reorder\n    for (let i = 0; i < allOverrides.length; i++) {\n      allOverrides[i].order = i;\n      allOverrides[i].override.order = i;\n    }\n    setTracker([...allOverrides]);\n  };\n\n  const toggleOpener = (index: number) => {\n    const currentState = [...isOpen];\n    currentState[index] = !currentState[index];\n    setIsOpen([...currentState]);\n  };\n\n  const addItem = () => {\n    const order = tracker.length;\n    const anOverride: OverrideItemType = {\n      label: `Override-${order}`,\n      enabled: true,\n      metricName: '',\n      alias: '',\n      thresholds: [] as PolystatThreshold[],\n      prefix: '',\n      suffix: '',\n      clickThrough: '',\n      clickThroughOpenNewTab: true,\n      clickThroughSanitize: true,\n      clickThroughCustomTargetEnabled: false,\n      clickThroughCustomTarget: '',\n      showTimestampEnabled: false,\n      showTimestampFormat: ShowTimestampFormats[0].value,\n      showTimestampYOffset: 0,\n      unitFormat: 'short',\n      scaledDecimals: null,\n      decimals: '2',\n      colors: [\n        DEFAULT_OK_COLOR_HEX,\n        DEFAULT_WARNING_COLOR_HEX,\n        DEFAULT_CRITICAL_COLOR_HEX,\n        DEFAULT_NO_THRESHOLD_COLOR_HEX,\n      ],\n      operatorName: OperatorOptions[0].value,\n      order: order,\n    };\n    const aTracker: OverrideItemTracker = {\n      override: anOverride,\n      order: order,\n      ID: UUIdv4(),\n    };\n    setTracker([...tracker, aTracker]);\n    // add an opener also\n    setIsOpen([...isOpen, true]);\n  };\n\n  return (\n    <>\n      <Button fill=\"solid\" variant=\"primary\" icon=\"plus\" onClick={addItem}>\n        Add Override\n      </Button>\n      {tracker &&\n        tracker.map((tracker: OverrideItemTracker, index: number) => {\n          return (\n            <Collapse\n              key={`collapse-item-index-${tracker.ID}`}\n              label={tracker.override.label}\n              isOpen={isOpen[index]}\n              onToggle={() => toggleOpener(index)}\n              collapsible\n            >\n              <OverrideItem\n                key={`override-item-index-${tracker.ID}`}\n                ID={tracker.ID}\n                override={tracker.override}\n                enabled={tracker.override.enabled}\n                setter={updateOverride}\n                remover={removeOverride}\n                moveDown={moveDown}\n                moveUp={moveUp}\n                createDuplicate={createDuplicate}\n                context={context}\n              />\n            </Collapse>\n          );\n        })}\n    </>\n  );\n};\n","var thirdPi = Math.PI / 3,\n    angles = [0, thirdPi, 2 * thirdPi, 3 * thirdPi, 4 * thirdPi, 5 * thirdPi];\n\nfunction pointX(d) {\n  return d[0];\n}\n\nfunction pointY(d) {\n  return d[1];\n}\n\nexport default function() {\n  var x0 = 0,\n      y0 = 0,\n      x1 = 1,\n      y1 = 1,\n      x = pointX,\n      y = pointY,\n      r,\n      dx,\n      dy;\n\n  function hexbin(points) {\n    var binsById = {}, bins = [], i, n = points.length;\n\n    for (i = 0; i < n; ++i) {\n      if (isNaN(px = +x.call(null, point = points[i], i, points))\n          || isNaN(py = +y.call(null, point, i, points))) continue;\n\n      var point,\n          px,\n          py,\n          pj = Math.round(py = py / dy),\n          pi = Math.round(px = px / dx - (pj & 1) / 2),\n          py1 = py - pj;\n\n      if (Math.abs(py1) * 3 > 1) {\n        var px1 = px - pi,\n            pi2 = pi + (px < pi ? -1 : 1) / 2,\n            pj2 = pj + (py < pj ? -1 : 1),\n            px2 = px - pi2,\n            py2 = py - pj2;\n        if (px1 * px1 + py1 * py1 > px2 * px2 + py2 * py2) pi = pi2 + (pj & 1 ? 1 : -1) / 2, pj = pj2;\n      }\n\n      var id = pi + \"-\" + pj, bin = binsById[id];\n      if (bin) bin.push(point);\n      else {\n        bins.push(bin = binsById[id] = [point]);\n        bin.x = (pi + (pj & 1) / 2) * dx;\n        bin.y = pj * dy;\n      }\n    }\n\n    return bins;\n  }\n\n  function hexagon(radius) {\n    var x0 = 0, y0 = 0;\n    return angles.map(function(angle) {\n      var x1 = Math.sin(angle) * radius,\n          y1 = -Math.cos(angle) * radius,\n          dx = x1 - x0,\n          dy = y1 - y0;\n      x0 = x1, y0 = y1;\n      return [dx, dy];\n    });\n  }\n\n  hexbin.hexagon = function(radius) {\n    return \"m\" + hexagon(radius == null ? r : +radius).join(\"l\") + \"z\";\n  };\n\n  hexbin.centers = function() {\n    var centers = [],\n        j = Math.round(y0 / dy),\n        i = Math.round(x0 / dx);\n    for (var y = j * dy; y < y1 + r; y += dy, ++j) {\n      for (var x = i * dx + (j & 1) * dx / 2; x < x1 + dx / 2; x += dx) {\n        centers.push([x, y]);\n      }\n    }\n    return centers;\n  };\n\n  hexbin.mesh = function() {\n    var fragment = hexagon(r).slice(0, 4).join(\"l\");\n    return hexbin.centers().map(function(p) { return \"M\" + p + \"m\" + fragment; }).join(\"\");\n  };\n\n  hexbin.x = function(_) {\n    return arguments.length ? (x = _, hexbin) : x;\n  };\n\n  hexbin.y = function(_) {\n    return arguments.length ? (y = _, hexbin) : y;\n  };\n\n  hexbin.radius = function(_) {\n    return arguments.length ? (r = +_, dx = r * 2 * Math.sin(thirdPi), dy = r * 1.5, hexbin) : r;\n  };\n\n  hexbin.size = function(_) {\n    return arguments.length ? (x0 = y0 = 0, x1 = +_[0], y1 = +_[1], hexbin) : [x1 - x0, y1 - y0];\n  };\n\n  hexbin.extent = function(_) {\n    return arguments.length ? (x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1], hexbin) : [[x0, y0], [x1, y1]];\n  };\n\n  return hexbin.radius(1);\n}\n","/**\n * Custom positioning reference element.\n * @see https://floating-ui.com/docs/virtual-elements\n */\n\nconst sides = ['top', 'right', 'bottom', 'left'];\nconst alignments = ['start', 'end'];\nconst placements = /*#__PURE__*/sides.reduce((acc, side) => acc.concat(side, side + \"-\" + alignments[0], side + \"-\" + alignments[1]), []);\nconst min = Math.min;\nconst max = Math.max;\nconst round = Math.round;\nconst floor = Math.floor;\nconst createCoords = v => ({\n  x: v,\n  y: v\n});\nconst oppositeSideMap = {\n  left: 'right',\n  right: 'left',\n  bottom: 'top',\n  top: 'bottom'\n};\nconst oppositeAlignmentMap = {\n  start: 'end',\n  end: 'start'\n};\nfunction clamp(start, value, end) {\n  return max(start, min(value, end));\n}\nfunction evaluate(value, param) {\n  return typeof value === 'function' ? value(param) : value;\n}\nfunction getSide(placement) {\n  return placement.split('-')[0];\n}\nfunction getAlignment(placement) {\n  return placement.split('-')[1];\n}\nfunction getOppositeAxis(axis) {\n  return axis === 'x' ? 'y' : 'x';\n}\nfunction getAxisLength(axis) {\n  return axis === 'y' ? 'height' : 'width';\n}\nfunction getSideAxis(placement) {\n  return ['top', 'bottom'].includes(getSide(placement)) ? 'y' : 'x';\n}\nfunction getAlignmentAxis(placement) {\n  return getOppositeAxis(getSideAxis(placement));\n}\nfunction getAlignmentSides(placement, rects, rtl) {\n  if (rtl === void 0) {\n    rtl = false;\n  }\n  const alignment = getAlignment(placement);\n  const alignmentAxis = getAlignmentAxis(placement);\n  const length = getAxisLength(alignmentAxis);\n  let mainAlignmentSide = alignmentAxis === 'x' ? alignment === (rtl ? 'end' : 'start') ? 'right' : 'left' : alignment === 'start' ? 'bottom' : 'top';\n  if (rects.reference[length] > rects.floating[length]) {\n    mainAlignmentSide = getOppositePlacement(mainAlignmentSide);\n  }\n  return [mainAlignmentSide, getOppositePlacement(mainAlignmentSide)];\n}\nfunction getExpandedPlacements(placement) {\n  const oppositePlacement = getOppositePlacement(placement);\n  return [getOppositeAlignmentPlacement(placement), oppositePlacement, getOppositeAlignmentPlacement(oppositePlacement)];\n}\nfunction getOppositeAlignmentPlacement(placement) {\n  return placement.replace(/start|end/g, alignment => oppositeAlignmentMap[alignment]);\n}\nfunction getSideList(side, isStart, rtl) {\n  const lr = ['left', 'right'];\n  const rl = ['right', 'left'];\n  const tb = ['top', 'bottom'];\n  const bt = ['bottom', 'top'];\n  switch (side) {\n    case 'top':\n    case 'bottom':\n      if (rtl) return isStart ? rl : lr;\n      return isStart ? lr : rl;\n    case 'left':\n    case 'right':\n      return isStart ? tb : bt;\n    default:\n      return [];\n  }\n}\nfunction getOppositeAxisPlacements(placement, flipAlignment, direction, rtl) {\n  const alignment = getAlignment(placement);\n  let list = getSideList(getSide(placement), direction === 'start', rtl);\n  if (alignment) {\n    list = list.map(side => side + \"-\" + alignment);\n    if (flipAlignment) {\n      list = list.concat(list.map(getOppositeAlignmentPlacement));\n    }\n  }\n  return list;\n}\nfunction getOppositePlacement(placement) {\n  return placement.replace(/left|right|bottom|top/g, side => oppositeSideMap[side]);\n}\nfunction expandPaddingObject(padding) {\n  return {\n    top: 0,\n    right: 0,\n    bottom: 0,\n    left: 0,\n    ...padding\n  };\n}\nfunction getPaddingObject(padding) {\n  return typeof padding !== 'number' ? expandPaddingObject(padding) : {\n    top: padding,\n    right: padding,\n    bottom: padding,\n    left: padding\n  };\n}\nfunction rectToClientRect(rect) {\n  const {\n    x,\n    y,\n    width,\n    height\n  } = rect;\n  return {\n    width,\n    height,\n    top: y,\n    left: x,\n    right: x + width,\n    bottom: y + height,\n    x,\n    y\n  };\n}\n\nexport { alignments, clamp, createCoords, evaluate, expandPaddingObject, floor, getAlignment, getAlignmentAxis, getAlignmentSides, getAxisLength, getExpandedPlacements, getOppositeAlignmentPlacement, getOppositeAxis, getOppositeAxisPlacements, getOppositePlacement, getPaddingObject, getSide, getSideAxis, max, min, placements, rectToClientRect, round, sides };\n","import { getSideAxis, getAlignmentAxis, getAxisLength, getSide, getAlignment, evaluate, getPaddingObject, rectToClientRect, min, clamp, placements, getAlignmentSides, getOppositeAlignmentPlacement, getOppositePlacement, getExpandedPlacements, getOppositeAxisPlacements, sides, max, getOppositeAxis } from '@floating-ui/utils';\nexport { rectToClientRect } from '@floating-ui/utils';\n\nfunction computeCoordsFromPlacement(_ref, placement, rtl) {\n  let {\n    reference,\n    floating\n  } = _ref;\n  const sideAxis = getSideAxis(placement);\n  const alignmentAxis = getAlignmentAxis(placement);\n  const alignLength = getAxisLength(alignmentAxis);\n  const side = getSide(placement);\n  const isVertical = sideAxis === 'y';\n  const commonX = reference.x + reference.width / 2 - floating.width / 2;\n  const commonY = reference.y + reference.height / 2 - floating.height / 2;\n  const commonAlign = reference[alignLength] / 2 - floating[alignLength] / 2;\n  let coords;\n  switch (side) {\n    case 'top':\n      coords = {\n        x: commonX,\n        y: reference.y - floating.height\n      };\n      break;\n    case 'bottom':\n      coords = {\n        x: commonX,\n        y: reference.y + reference.height\n      };\n      break;\n    case 'right':\n      coords = {\n        x: reference.x + reference.width,\n        y: commonY\n      };\n      break;\n    case 'left':\n      coords = {\n        x: reference.x - floating.width,\n        y: commonY\n      };\n      break;\n    default:\n      coords = {\n        x: reference.x,\n        y: reference.y\n      };\n  }\n  switch (getAlignment(placement)) {\n    case 'start':\n      coords[alignmentAxis] -= commonAlign * (rtl && isVertical ? -1 : 1);\n      break;\n    case 'end':\n      coords[alignmentAxis] += commonAlign * (rtl && isVertical ? -1 : 1);\n      break;\n  }\n  return coords;\n}\n\n/**\n * Computes the `x` and `y` coordinates that will place the floating element\n * next to a given reference element.\n *\n * This export does not have any `platform` interface logic. You will need to\n * write one for the platform you are using Floating UI with.\n */\nconst computePosition = async (reference, floating, config) => {\n  const {\n    placement = 'bottom',\n    strategy = 'absolute',\n    middleware = [],\n    platform\n  } = config;\n  const validMiddleware = middleware.filter(Boolean);\n  const rtl = await (platform.isRTL == null ? void 0 : platform.isRTL(floating));\n  let rects = await platform.getElementRects({\n    reference,\n    floating,\n    strategy\n  });\n  let {\n    x,\n    y\n  } = computeCoordsFromPlacement(rects, placement, rtl);\n  let statefulPlacement = placement;\n  let middlewareData = {};\n  let resetCount = 0;\n  for (let i = 0; i < validMiddleware.length; i++) {\n    const {\n      name,\n      fn\n    } = validMiddleware[i];\n    const {\n      x: nextX,\n      y: nextY,\n      data,\n      reset\n    } = await fn({\n      x,\n      y,\n      initialPlacement: placement,\n      placement: statefulPlacement,\n      strategy,\n      middlewareData,\n      rects,\n      platform,\n      elements: {\n        reference,\n        floating\n      }\n    });\n    x = nextX != null ? nextX : x;\n    y = nextY != null ? nextY : y;\n    middlewareData = {\n      ...middlewareData,\n      [name]: {\n        ...middlewareData[name],\n        ...data\n      }\n    };\n    if (reset && resetCount <= 50) {\n      resetCount++;\n      if (typeof reset === 'object') {\n        if (reset.placement) {\n          statefulPlacement = reset.placement;\n        }\n        if (reset.rects) {\n          rects = reset.rects === true ? await platform.getElementRects({\n            reference,\n            floating,\n            strategy\n          }) : reset.rects;\n        }\n        ({\n          x,\n          y\n        } = computeCoordsFromPlacement(rects, statefulPlacement, rtl));\n      }\n      i = -1;\n    }\n  }\n  return {\n    x,\n    y,\n    placement: statefulPlacement,\n    strategy,\n    middlewareData\n  };\n};\n\n/**\n * Resolves with an object of overflow side offsets that determine how much the\n * element is overflowing a given clipping boundary on each side.\n * - positive = overflowing the boundary by that number of pixels\n * - negative = how many pixels left before it will overflow\n * - 0 = lies flush with the boundary\n * @see https://floating-ui.com/docs/detectOverflow\n */\nasync function detectOverflow(state, options) {\n  var _await$platform$isEle;\n  if (options === void 0) {\n    options = {};\n  }\n  const {\n    x,\n    y,\n    platform,\n    rects,\n    elements,\n    strategy\n  } = state;\n  const {\n    boundary = 'clippingAncestors',\n    rootBoundary = 'viewport',\n    elementContext = 'floating',\n    altBoundary = false,\n    padding = 0\n  } = evaluate(options, state);\n  const paddingObject = getPaddingObject(padding);\n  const altContext = elementContext === 'floating' ? 'reference' : 'floating';\n  const element = elements[altBoundary ? altContext : elementContext];\n  const clippingClientRect = rectToClientRect(await platform.getClippingRect({\n    element: ((_await$platform$isEle = await (platform.isElement == null ? void 0 : platform.isElement(element))) != null ? _await$platform$isEle : true) ? element : element.contextElement || (await (platform.getDocumentElement == null ? void 0 : platform.getDocumentElement(elements.floating))),\n    boundary,\n    rootBoundary,\n    strategy\n  }));\n  const rect = elementContext === 'floating' ? {\n    x,\n    y,\n    width: rects.floating.width,\n    height: rects.floating.height\n  } : rects.reference;\n  const offsetParent = await (platform.getOffsetParent == null ? void 0 : platform.getOffsetParent(elements.floating));\n  const offsetScale = (await (platform.isElement == null ? void 0 : platform.isElement(offsetParent))) ? (await (platform.getScale == null ? void 0 : platform.getScale(offsetParent))) || {\n    x: 1,\n    y: 1\n  } : {\n    x: 1,\n    y: 1\n  };\n  const elementClientRect = rectToClientRect(platform.convertOffsetParentRelativeRectToViewportRelativeRect ? await platform.convertOffsetParentRelativeRectToViewportRelativeRect({\n    elements,\n    rect,\n    offsetParent,\n    strategy\n  }) : rect);\n  return {\n    top: (clippingClientRect.top - elementClientRect.top + paddingObject.top) / offsetScale.y,\n    bottom: (elementClientRect.bottom - clippingClientRect.bottom + paddingObject.bottom) / offsetScale.y,\n    left: (clippingClientRect.left - elementClientRect.left + paddingObject.left) / offsetScale.x,\n    right: (elementClientRect.right - clippingClientRect.right + paddingObject.right) / offsetScale.x\n  };\n}\n\n/**\n * Provides data to position an inner element of the floating element so that it\n * appears centered to the reference element.\n * @see https://floating-ui.com/docs/arrow\n */\nconst arrow = options => ({\n  name: 'arrow',\n  options,\n  async fn(state) {\n    const {\n      x,\n      y,\n      placement,\n      rects,\n      platform,\n      elements,\n      middlewareData\n    } = state;\n    // Since `element` is required, we don't Partial<> the type.\n    const {\n      element,\n      padding = 0\n    } = evaluate(options, state) || {};\n    if (element == null) {\n      return {};\n    }\n    const paddingObject = getPaddingObject(padding);\n    const coords = {\n      x,\n      y\n    };\n    const axis = getAlignmentAxis(placement);\n    const length = getAxisLength(axis);\n    const arrowDimensions = await platform.getDimensions(element);\n    const isYAxis = axis === 'y';\n    const minProp = isYAxis ? 'top' : 'left';\n    const maxProp = isYAxis ? 'bottom' : 'right';\n    const clientProp = isYAxis ? 'clientHeight' : 'clientWidth';\n    const endDiff = rects.reference[length] + rects.reference[axis] - coords[axis] - rects.floating[length];\n    const startDiff = coords[axis] - rects.reference[axis];\n    const arrowOffsetParent = await (platform.getOffsetParent == null ? void 0 : platform.getOffsetParent(element));\n    let clientSize = arrowOffsetParent ? arrowOffsetParent[clientProp] : 0;\n\n    // DOM platform can return `window` as the `offsetParent`.\n    if (!clientSize || !(await (platform.isElement == null ? void 0 : platform.isElement(arrowOffsetParent)))) {\n      clientSize = elements.floating[clientProp] || rects.floating[length];\n    }\n    const centerToReference = endDiff / 2 - startDiff / 2;\n\n    // If the padding is large enough that it causes the arrow to no longer be\n    // centered, modify the padding so that it is centered.\n    const largestPossiblePadding = clientSize / 2 - arrowDimensions[length] / 2 - 1;\n    const minPadding = min(paddingObject[minProp], largestPossiblePadding);\n    const maxPadding = min(paddingObject[maxProp], largestPossiblePadding);\n\n    // Make sure the arrow doesn't overflow the floating element if the center\n    // point is outside the floating element's bounds.\n    const min$1 = minPadding;\n    const max = clientSize - arrowDimensions[length] - maxPadding;\n    const center = clientSize / 2 - arrowDimensions[length] / 2 + centerToReference;\n    const offset = clamp(min$1, center, max);\n\n    // If the reference is small enough that the arrow's padding causes it to\n    // to point to nothing for an aligned placement, adjust the offset of the\n    // floating element itself. To ensure `shift()` continues to take action,\n    // a single reset is performed when this is true.\n    const shouldAddOffset = !middlewareData.arrow && getAlignment(placement) != null && center !== offset && rects.reference[length] / 2 - (center < min$1 ? minPadding : maxPadding) - arrowDimensions[length] / 2 < 0;\n    const alignmentOffset = shouldAddOffset ? center < min$1 ? center - min$1 : center - max : 0;\n    return {\n      [axis]: coords[axis] + alignmentOffset,\n      data: {\n        [axis]: offset,\n        centerOffset: center - offset - alignmentOffset,\n        ...(shouldAddOffset && {\n          alignmentOffset\n        })\n      },\n      reset: shouldAddOffset\n    };\n  }\n});\n\nfunction getPlacementList(alignment, autoAlignment, allowedPlacements) {\n  const allowedPlacementsSortedByAlignment = alignment ? [...allowedPlacements.filter(placement => getAlignment(placement) === alignment), ...allowedPlacements.filter(placement => getAlignment(placement) !== alignment)] : allowedPlacements.filter(placement => getSide(placement) === placement);\n  return allowedPlacementsSortedByAlignment.filter(placement => {\n    if (alignment) {\n      return getAlignment(placement) === alignment || (autoAlignment ? getOppositeAlignmentPlacement(placement) !== placement : false);\n    }\n    return true;\n  });\n}\n/**\n * Optimizes the visibility of the floating element by choosing the placement\n * that has the most space available automatically, without needing to specify a\n * preferred placement. Alternative to `flip`.\n * @see https://floating-ui.com/docs/autoPlacement\n */\nconst autoPlacement = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n  return {\n    name: 'autoPlacement',\n    options,\n    async fn(state) {\n      var _middlewareData$autoP, _middlewareData$autoP2, _placementsThatFitOnE;\n      const {\n        rects,\n        middlewareData,\n        placement,\n        platform,\n        elements\n      } = state;\n      const {\n        crossAxis = false,\n        alignment,\n        allowedPlacements = placements,\n        autoAlignment = true,\n        ...detectOverflowOptions\n      } = evaluate(options, state);\n      const placements$1 = alignment !== undefined || allowedPlacements === placements ? getPlacementList(alignment || null, autoAlignment, allowedPlacements) : allowedPlacements;\n      const overflow = await detectOverflow(state, detectOverflowOptions);\n      const currentIndex = ((_middlewareData$autoP = middlewareData.autoPlacement) == null ? void 0 : _middlewareData$autoP.index) || 0;\n      const currentPlacement = placements$1[currentIndex];\n      if (currentPlacement == null) {\n        return {};\n      }\n      const alignmentSides = getAlignmentSides(currentPlacement, rects, await (platform.isRTL == null ? void 0 : platform.isRTL(elements.floating)));\n\n      // Make `computeCoords` start from the right place.\n      if (placement !== currentPlacement) {\n        return {\n          reset: {\n            placement: placements$1[0]\n          }\n        };\n      }\n      const currentOverflows = [overflow[getSide(currentPlacement)], overflow[alignmentSides[0]], overflow[alignmentSides[1]]];\n      const allOverflows = [...(((_middlewareData$autoP2 = middlewareData.autoPlacement) == null ? void 0 : _middlewareData$autoP2.overflows) || []), {\n        placement: currentPlacement,\n        overflows: currentOverflows\n      }];\n      const nextPlacement = placements$1[currentIndex + 1];\n\n      // There are more placements to check.\n      if (nextPlacement) {\n        return {\n          data: {\n            index: currentIndex + 1,\n            overflows: allOverflows\n          },\n          reset: {\n            placement: nextPlacement\n          }\n        };\n      }\n      const placementsSortedByMostSpace = allOverflows.map(d => {\n        const alignment = getAlignment(d.placement);\n        return [d.placement, alignment && crossAxis ?\n        // Check along the mainAxis and main crossAxis side.\n        d.overflows.slice(0, 2).reduce((acc, v) => acc + v, 0) :\n        // Check only the mainAxis.\n        d.overflows[0], d.overflows];\n      }).sort((a, b) => a[1] - b[1]);\n      const placementsThatFitOnEachSide = placementsSortedByMostSpace.filter(d => d[2].slice(0,\n      // Aligned placements should not check their opposite crossAxis\n      // side.\n      getAlignment(d[0]) ? 2 : 3).every(v => v <= 0));\n      const resetPlacement = ((_placementsThatFitOnE = placementsThatFitOnEachSide[0]) == null ? void 0 : _placementsThatFitOnE[0]) || placementsSortedByMostSpace[0][0];\n      if (resetPlacement !== placement) {\n        return {\n          data: {\n            index: currentIndex + 1,\n            overflows: allOverflows\n          },\n          reset: {\n            placement: resetPlacement\n          }\n        };\n      }\n      return {};\n    }\n  };\n};\n\n/**\n * Optimizes the visibility of the floating element by flipping the `placement`\n * in order to keep it in view when the preferred placement(s) will overflow the\n * clipping boundary. Alternative to `autoPlacement`.\n * @see https://floating-ui.com/docs/flip\n */\nconst flip = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n  return {\n    name: 'flip',\n    options,\n    async fn(state) {\n      var _middlewareData$arrow, _middlewareData$flip;\n      const {\n        placement,\n        middlewareData,\n        rects,\n        initialPlacement,\n        platform,\n        elements\n      } = state;\n      const {\n        mainAxis: checkMainAxis = true,\n        crossAxis: checkCrossAxis = true,\n        fallbackPlacements: specifiedFallbackPlacements,\n        fallbackStrategy = 'bestFit',\n        fallbackAxisSideDirection = 'none',\n        flipAlignment = true,\n        ...detectOverflowOptions\n      } = evaluate(options, state);\n\n      // If a reset by the arrow was caused due to an alignment offset being\n      // added, we should skip any logic now since `flip()` has already done its\n      // work.\n      // https://github.com/floating-ui/floating-ui/issues/2549#issuecomment-1719601643\n      if ((_middlewareData$arrow = middlewareData.arrow) != null && _middlewareData$arrow.alignmentOffset) {\n        return {};\n      }\n      const side = getSide(placement);\n      const isBasePlacement = getSide(initialPlacement) === initialPlacement;\n      const rtl = await (platform.isRTL == null ? void 0 : platform.isRTL(elements.floating));\n      const fallbackPlacements = specifiedFallbackPlacements || (isBasePlacement || !flipAlignment ? [getOppositePlacement(initialPlacement)] : getExpandedPlacements(initialPlacement));\n      if (!specifiedFallbackPlacements && fallbackAxisSideDirection !== 'none') {\n        fallbackPlacements.push(...getOppositeAxisPlacements(initialPlacement, flipAlignment, fallbackAxisSideDirection, rtl));\n      }\n      const placements = [initialPlacement, ...fallbackPlacements];\n      const overflow = await detectOverflow(state, detectOverflowOptions);\n      const overflows = [];\n      let overflowsData = ((_middlewareData$flip = middlewareData.flip) == null ? void 0 : _middlewareData$flip.overflows) || [];\n      if (checkMainAxis) {\n        overflows.push(overflow[side]);\n      }\n      if (checkCrossAxis) {\n        const sides = getAlignmentSides(placement, rects, rtl);\n        overflows.push(overflow[sides[0]], overflow[sides[1]]);\n      }\n      overflowsData = [...overflowsData, {\n        placement,\n        overflows\n      }];\n\n      // One or more sides is overflowing.\n      if (!overflows.every(side => side <= 0)) {\n        var _middlewareData$flip2, _overflowsData$filter;\n        const nextIndex = (((_middlewareData$flip2 = middlewareData.flip) == null ? void 0 : _middlewareData$flip2.index) || 0) + 1;\n        const nextPlacement = placements[nextIndex];\n        if (nextPlacement) {\n          // Try next placement and re-run the lifecycle.\n          return {\n            data: {\n              index: nextIndex,\n              overflows: overflowsData\n            },\n            reset: {\n              placement: nextPlacement\n            }\n          };\n        }\n\n        // First, find the candidates that fit on the mainAxis side of overflow,\n        // then find the placement that fits the best on the main crossAxis side.\n        let resetPlacement = (_overflowsData$filter = overflowsData.filter(d => d.overflows[0] <= 0).sort((a, b) => a.overflows[1] - b.overflows[1])[0]) == null ? void 0 : _overflowsData$filter.placement;\n\n        // Otherwise fallback.\n        if (!resetPlacement) {\n          switch (fallbackStrategy) {\n            case 'bestFit':\n              {\n                var _overflowsData$map$so;\n                const placement = (_overflowsData$map$so = overflowsData.map(d => [d.placement, d.overflows.filter(overflow => overflow > 0).reduce((acc, overflow) => acc + overflow, 0)]).sort((a, b) => a[1] - b[1])[0]) == null ? void 0 : _overflowsData$map$so[0];\n                if (placement) {\n                  resetPlacement = placement;\n                }\n                break;\n              }\n            case 'initialPlacement':\n              resetPlacement = initialPlacement;\n              break;\n          }\n        }\n        if (placement !== resetPlacement) {\n          return {\n            reset: {\n              placement: resetPlacement\n            }\n          };\n        }\n      }\n      return {};\n    }\n  };\n};\n\nfunction getSideOffsets(overflow, rect) {\n  return {\n    top: overflow.top - rect.height,\n    right: overflow.right - rect.width,\n    bottom: overflow.bottom - rect.height,\n    left: overflow.left - rect.width\n  };\n}\nfunction isAnySideFullyClipped(overflow) {\n  return sides.some(side => overflow[side] >= 0);\n}\n/**\n * Provides data to hide the floating element in applicable situations, such as\n * when it is not in the same clipping context as the reference element.\n * @see https://floating-ui.com/docs/hide\n */\nconst hide = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n  return {\n    name: 'hide',\n    options,\n    async fn(state) {\n      const {\n        rects\n      } = state;\n      const {\n        strategy = 'referenceHidden',\n        ...detectOverflowOptions\n      } = evaluate(options, state);\n      switch (strategy) {\n        case 'referenceHidden':\n          {\n            const overflow = await detectOverflow(state, {\n              ...detectOverflowOptions,\n              elementContext: 'reference'\n            });\n            const offsets = getSideOffsets(overflow, rects.reference);\n            return {\n              data: {\n                referenceHiddenOffsets: offsets,\n                referenceHidden: isAnySideFullyClipped(offsets)\n              }\n            };\n          }\n        case 'escaped':\n          {\n            const overflow = await detectOverflow(state, {\n              ...detectOverflowOptions,\n              altBoundary: true\n            });\n            const offsets = getSideOffsets(overflow, rects.floating);\n            return {\n              data: {\n                escapedOffsets: offsets,\n                escaped: isAnySideFullyClipped(offsets)\n              }\n            };\n          }\n        default:\n          {\n            return {};\n          }\n      }\n    }\n  };\n};\n\nfunction getBoundingRect(rects) {\n  const minX = min(...rects.map(rect => rect.left));\n  const minY = min(...rects.map(rect => rect.top));\n  const maxX = max(...rects.map(rect => rect.right));\n  const maxY = max(...rects.map(rect => rect.bottom));\n  return {\n    x: minX,\n    y: minY,\n    width: maxX - minX,\n    height: maxY - minY\n  };\n}\nfunction getRectsByLine(rects) {\n  const sortedRects = rects.slice().sort((a, b) => a.y - b.y);\n  const groups = [];\n  let prevRect = null;\n  for (let i = 0; i < sortedRects.length; i++) {\n    const rect = sortedRects[i];\n    if (!prevRect || rect.y - prevRect.y > prevRect.height / 2) {\n      groups.push([rect]);\n    } else {\n      groups[groups.length - 1].push(rect);\n    }\n    prevRect = rect;\n  }\n  return groups.map(rect => rectToClientRect(getBoundingRect(rect)));\n}\n/**\n * Provides improved positioning for inline reference elements that can span\n * over multiple lines, such as hyperlinks or range selections.\n * @see https://floating-ui.com/docs/inline\n */\nconst inline = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n  return {\n    name: 'inline',\n    options,\n    async fn(state) {\n      const {\n        placement,\n        elements,\n        rects,\n        platform,\n        strategy\n      } = state;\n      // A MouseEvent's client{X,Y} coords can be up to 2 pixels off a\n      // ClientRect's bounds, despite the event listener being triggered. A\n      // padding of 2 seems to handle this issue.\n      const {\n        padding = 2,\n        x,\n        y\n      } = evaluate(options, state);\n      const nativeClientRects = Array.from((await (platform.getClientRects == null ? void 0 : platform.getClientRects(elements.reference))) || []);\n      const clientRects = getRectsByLine(nativeClientRects);\n      const fallback = rectToClientRect(getBoundingRect(nativeClientRects));\n      const paddingObject = getPaddingObject(padding);\n      function getBoundingClientRect() {\n        // There are two rects and they are disjoined.\n        if (clientRects.length === 2 && clientRects[0].left > clientRects[1].right && x != null && y != null) {\n          // Find the first rect in which the point is fully inside.\n          return clientRects.find(rect => x > rect.left - paddingObject.left && x < rect.right + paddingObject.right && y > rect.top - paddingObject.top && y < rect.bottom + paddingObject.bottom) || fallback;\n        }\n\n        // There are 2 or more connected rects.\n        if (clientRects.length >= 2) {\n          if (getSideAxis(placement) === 'y') {\n            const firstRect = clientRects[0];\n            const lastRect = clientRects[clientRects.length - 1];\n            const isTop = getSide(placement) === 'top';\n            const top = firstRect.top;\n            const bottom = lastRect.bottom;\n            const left = isTop ? firstRect.left : lastRect.left;\n            const right = isTop ? firstRect.right : lastRect.right;\n            const width = right - left;\n            const height = bottom - top;\n            return {\n              top,\n              bottom,\n              left,\n              right,\n              width,\n              height,\n              x: left,\n              y: top\n            };\n          }\n          const isLeftSide = getSide(placement) === 'left';\n          const maxRight = max(...clientRects.map(rect => rect.right));\n          const minLeft = min(...clientRects.map(rect => rect.left));\n          const measureRects = clientRects.filter(rect => isLeftSide ? rect.left === minLeft : rect.right === maxRight);\n          const top = measureRects[0].top;\n          const bottom = measureRects[measureRects.length - 1].bottom;\n          const left = minLeft;\n          const right = maxRight;\n          const width = right - left;\n          const height = bottom - top;\n          return {\n            top,\n            bottom,\n            left,\n            right,\n            width,\n            height,\n            x: left,\n            y: top\n          };\n        }\n        return fallback;\n      }\n      const resetRects = await platform.getElementRects({\n        reference: {\n          getBoundingClientRect\n        },\n        floating: elements.floating,\n        strategy\n      });\n      if (rects.reference.x !== resetRects.reference.x || rects.reference.y !== resetRects.reference.y || rects.reference.width !== resetRects.reference.width || rects.reference.height !== resetRects.reference.height) {\n        return {\n          reset: {\n            rects: resetRects\n          }\n        };\n      }\n      return {};\n    }\n  };\n};\n\n// For type backwards-compatibility, the `OffsetOptions` type was also\n// Derivable.\n\nasync function convertValueToCoords(state, options) {\n  const {\n    placement,\n    platform,\n    elements\n  } = state;\n  const rtl = await (platform.isRTL == null ? void 0 : platform.isRTL(elements.floating));\n  const side = getSide(placement);\n  const alignment = getAlignment(placement);\n  const isVertical = getSideAxis(placement) === 'y';\n  const mainAxisMulti = ['left', 'top'].includes(side) ? -1 : 1;\n  const crossAxisMulti = rtl && isVertical ? -1 : 1;\n  const rawValue = evaluate(options, state);\n\n  // eslint-disable-next-line prefer-const\n  let {\n    mainAxis,\n    crossAxis,\n    alignmentAxis\n  } = typeof rawValue === 'number' ? {\n    mainAxis: rawValue,\n    crossAxis: 0,\n    alignmentAxis: null\n  } : {\n    mainAxis: 0,\n    crossAxis: 0,\n    alignmentAxis: null,\n    ...rawValue\n  };\n  if (alignment && typeof alignmentAxis === 'number') {\n    crossAxis = alignment === 'end' ? alignmentAxis * -1 : alignmentAxis;\n  }\n  return isVertical ? {\n    x: crossAxis * crossAxisMulti,\n    y: mainAxis * mainAxisMulti\n  } : {\n    x: mainAxis * mainAxisMulti,\n    y: crossAxis * crossAxisMulti\n  };\n}\n\n/**\n * Modifies the placement by translating the floating element along the\n * specified axes.\n * A number (shorthand for `mainAxis` or distance), or an axes configuration\n * object may be passed.\n * @see https://floating-ui.com/docs/offset\n */\nconst offset = function (options) {\n  if (options === void 0) {\n    options = 0;\n  }\n  return {\n    name: 'offset',\n    options,\n    async fn(state) {\n      var _middlewareData$offse, _middlewareData$arrow;\n      const {\n        x,\n        y,\n        placement,\n        middlewareData\n      } = state;\n      const diffCoords = await convertValueToCoords(state, options);\n\n      // If the placement is the same and the arrow caused an alignment offset\n      // then we don't need to change the positioning coordinates.\n      if (placement === ((_middlewareData$offse = middlewareData.offset) == null ? void 0 : _middlewareData$offse.placement) && (_middlewareData$arrow = middlewareData.arrow) != null && _middlewareData$arrow.alignmentOffset) {\n        return {};\n      }\n      return {\n        x: x + diffCoords.x,\n        y: y + diffCoords.y,\n        data: {\n          ...diffCoords,\n          placement\n        }\n      };\n    }\n  };\n};\n\n/**\n * Optimizes the visibility of the floating element by shifting it in order to\n * keep it in view when it will overflow the clipping boundary.\n * @see https://floating-ui.com/docs/shift\n */\nconst shift = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n  return {\n    name: 'shift',\n    options,\n    async fn(state) {\n      const {\n        x,\n        y,\n        placement\n      } = state;\n      const {\n        mainAxis: checkMainAxis = true,\n        crossAxis: checkCrossAxis = false,\n        limiter = {\n          fn: _ref => {\n            let {\n              x,\n              y\n            } = _ref;\n            return {\n              x,\n              y\n            };\n          }\n        },\n        ...detectOverflowOptions\n      } = evaluate(options, state);\n      const coords = {\n        x,\n        y\n      };\n      const overflow = await detectOverflow(state, detectOverflowOptions);\n      const crossAxis = getSideAxis(getSide(placement));\n      const mainAxis = getOppositeAxis(crossAxis);\n      let mainAxisCoord = coords[mainAxis];\n      let crossAxisCoord = coords[crossAxis];\n      if (checkMainAxis) {\n        const minSide = mainAxis === 'y' ? 'top' : 'left';\n        const maxSide = mainAxis === 'y' ? 'bottom' : 'right';\n        const min = mainAxisCoord + overflow[minSide];\n        const max = mainAxisCoord - overflow[maxSide];\n        mainAxisCoord = clamp(min, mainAxisCoord, max);\n      }\n      if (checkCrossAxis) {\n        const minSide = crossAxis === 'y' ? 'top' : 'left';\n        const maxSide = crossAxis === 'y' ? 'bottom' : 'right';\n        const min = crossAxisCoord + overflow[minSide];\n        const max = crossAxisCoord - overflow[maxSide];\n        crossAxisCoord = clamp(min, crossAxisCoord, max);\n      }\n      const limitedCoords = limiter.fn({\n        ...state,\n        [mainAxis]: mainAxisCoord,\n        [crossAxis]: crossAxisCoord\n      });\n      return {\n        ...limitedCoords,\n        data: {\n          x: limitedCoords.x - x,\n          y: limitedCoords.y - y\n        }\n      };\n    }\n  };\n};\n/**\n * Built-in `limiter` that will stop `shift()` at a certain point.\n */\nconst limitShift = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n  return {\n    options,\n    fn(state) {\n      const {\n        x,\n        y,\n        placement,\n        rects,\n        middlewareData\n      } = state;\n      const {\n        offset = 0,\n        mainAxis: checkMainAxis = true,\n        crossAxis: checkCrossAxis = true\n      } = evaluate(options, state);\n      const coords = {\n        x,\n        y\n      };\n      const crossAxis = getSideAxis(placement);\n      const mainAxis = getOppositeAxis(crossAxis);\n      let mainAxisCoord = coords[mainAxis];\n      let crossAxisCoord = coords[crossAxis];\n      const rawOffset = evaluate(offset, state);\n      const computedOffset = typeof rawOffset === 'number' ? {\n        mainAxis: rawOffset,\n        crossAxis: 0\n      } : {\n        mainAxis: 0,\n        crossAxis: 0,\n        ...rawOffset\n      };\n      if (checkMainAxis) {\n        const len = mainAxis === 'y' ? 'height' : 'width';\n        const limitMin = rects.reference[mainAxis] - rects.floating[len] + computedOffset.mainAxis;\n        const limitMax = rects.reference[mainAxis] + rects.reference[len] - computedOffset.mainAxis;\n        if (mainAxisCoord < limitMin) {\n          mainAxisCoord = limitMin;\n        } else if (mainAxisCoord > limitMax) {\n          mainAxisCoord = limitMax;\n        }\n      }\n      if (checkCrossAxis) {\n        var _middlewareData$offse, _middlewareData$offse2;\n        const len = mainAxis === 'y' ? 'width' : 'height';\n        const isOriginSide = ['top', 'left'].includes(getSide(placement));\n        const limitMin = rects.reference[crossAxis] - rects.floating[len] + (isOriginSide ? ((_middlewareData$offse = middlewareData.offset) == null ? void 0 : _middlewareData$offse[crossAxis]) || 0 : 0) + (isOriginSide ? 0 : computedOffset.crossAxis);\n        const limitMax = rects.reference[crossAxis] + rects.reference[len] + (isOriginSide ? 0 : ((_middlewareData$offse2 = middlewareData.offset) == null ? void 0 : _middlewareData$offse2[crossAxis]) || 0) - (isOriginSide ? computedOffset.crossAxis : 0);\n        if (crossAxisCoord < limitMin) {\n          crossAxisCoord = limitMin;\n        } else if (crossAxisCoord > limitMax) {\n          crossAxisCoord = limitMax;\n        }\n      }\n      return {\n        [mainAxis]: mainAxisCoord,\n        [crossAxis]: crossAxisCoord\n      };\n    }\n  };\n};\n\n/**\n * Provides data that allows you to change the size of the floating element —\n * for instance, prevent it from overflowing the clipping boundary or match the\n * width of the reference element.\n * @see https://floating-ui.com/docs/size\n */\nconst size = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n  return {\n    name: 'size',\n    options,\n    async fn(state) {\n      const {\n        placement,\n        rects,\n        platform,\n        elements\n      } = state;\n      const {\n        apply = () => {},\n        ...detectOverflowOptions\n      } = evaluate(options, state);\n      const overflow = await detectOverflow(state, detectOverflowOptions);\n      const side = getSide(placement);\n      const alignment = getAlignment(placement);\n      const isYAxis = getSideAxis(placement) === 'y';\n      const {\n        width,\n        height\n      } = rects.floating;\n      let heightSide;\n      let widthSide;\n      if (side === 'top' || side === 'bottom') {\n        heightSide = side;\n        widthSide = alignment === ((await (platform.isRTL == null ? void 0 : platform.isRTL(elements.floating))) ? 'start' : 'end') ? 'left' : 'right';\n      } else {\n        widthSide = side;\n        heightSide = alignment === 'end' ? 'top' : 'bottom';\n      }\n      const maximumClippingHeight = height - overflow.top - overflow.bottom;\n      const maximumClippingWidth = width - overflow.left - overflow.right;\n      const overflowAvailableHeight = min(height - overflow[heightSide], maximumClippingHeight);\n      const overflowAvailableWidth = min(width - overflow[widthSide], maximumClippingWidth);\n      const noShift = !state.middlewareData.shift;\n      let availableHeight = overflowAvailableHeight;\n      let availableWidth = overflowAvailableWidth;\n      if (isYAxis) {\n        availableWidth = alignment || noShift ? min(overflowAvailableWidth, maximumClippingWidth) : maximumClippingWidth;\n      } else {\n        availableHeight = alignment || noShift ? min(overflowAvailableHeight, maximumClippingHeight) : maximumClippingHeight;\n      }\n      if (noShift && !alignment) {\n        const xMin = max(overflow.left, 0);\n        const xMax = max(overflow.right, 0);\n        const yMin = max(overflow.top, 0);\n        const yMax = max(overflow.bottom, 0);\n        if (isYAxis) {\n          availableWidth = width - 2 * (xMin !== 0 || xMax !== 0 ? xMin + xMax : max(overflow.left, overflow.right));\n        } else {\n          availableHeight = height - 2 * (yMin !== 0 || yMax !== 0 ? yMin + yMax : max(overflow.top, overflow.bottom));\n        }\n      }\n      await apply({\n        ...state,\n        availableWidth,\n        availableHeight\n      });\n      const nextDimensions = await platform.getDimensions(elements.floating);\n      if (width !== nextDimensions.width || height !== nextDimensions.height) {\n        return {\n          reset: {\n            rects: true\n          }\n        };\n      }\n      return {};\n    }\n  };\n};\n\nexport { arrow, autoPlacement, computePosition, detectOverflow, flip, hide, inline, limitShift, offset, shift, size };\n","function getNodeName(node) {\n  if (isNode(node)) {\n    return (node.nodeName || '').toLowerCase();\n  }\n  // Mocked nodes in testing environments may not be instances of Node. By\n  // returning `#document` an infinite loop won't occur.\n  // https://github.com/floating-ui/floating-ui/issues/2317\n  return '#document';\n}\nfunction getWindow(node) {\n  var _node$ownerDocument;\n  return (node == null || (_node$ownerDocument = node.ownerDocument) == null ? void 0 : _node$ownerDocument.defaultView) || window;\n}\nfunction getDocumentElement(node) {\n  var _ref;\n  return (_ref = (isNode(node) ? node.ownerDocument : node.document) || window.document) == null ? void 0 : _ref.documentElement;\n}\nfunction isNode(value) {\n  return value instanceof Node || value instanceof getWindow(value).Node;\n}\nfunction isElement(value) {\n  return value instanceof Element || value instanceof getWindow(value).Element;\n}\nfunction isHTMLElement(value) {\n  return value instanceof HTMLElement || value instanceof getWindow(value).HTMLElement;\n}\nfunction isShadowRoot(value) {\n  // Browsers without `ShadowRoot` support.\n  if (typeof ShadowRoot === 'undefined') {\n    return false;\n  }\n  return value instanceof ShadowRoot || value instanceof getWindow(value).ShadowRoot;\n}\nfunction isOverflowElement(element) {\n  const {\n    overflow,\n    overflowX,\n    overflowY,\n    display\n  } = getComputedStyle(element);\n  return /auto|scroll|overlay|hidden|clip/.test(overflow + overflowY + overflowX) && !['inline', 'contents'].includes(display);\n}\nfunction isTableElement(element) {\n  return ['table', 'td', 'th'].includes(getNodeName(element));\n}\nfunction isContainingBlock(element) {\n  const webkit = isWebKit();\n  const css = getComputedStyle(element);\n\n  // https://developer.mozilla.org/en-US/docs/Web/CSS/Containing_block#identifying_the_containing_block\n  return css.transform !== 'none' || css.perspective !== 'none' || (css.containerType ? css.containerType !== 'normal' : false) || !webkit && (css.backdropFilter ? css.backdropFilter !== 'none' : false) || !webkit && (css.filter ? css.filter !== 'none' : false) || ['transform', 'perspective', 'filter'].some(value => (css.willChange || '').includes(value)) || ['paint', 'layout', 'strict', 'content'].some(value => (css.contain || '').includes(value));\n}\nfunction getContainingBlock(element) {\n  let currentNode = getParentNode(element);\n  while (isHTMLElement(currentNode) && !isLastTraversableNode(currentNode)) {\n    if (isContainingBlock(currentNode)) {\n      return currentNode;\n    }\n    currentNode = getParentNode(currentNode);\n  }\n  return null;\n}\nfunction isWebKit() {\n  if (typeof CSS === 'undefined' || !CSS.supports) return false;\n  return CSS.supports('-webkit-backdrop-filter', 'none');\n}\nfunction isLastTraversableNode(node) {\n  return ['html', 'body', '#document'].includes(getNodeName(node));\n}\nfunction getComputedStyle(element) {\n  return getWindow(element).getComputedStyle(element);\n}\nfunction getNodeScroll(element) {\n  if (isElement(element)) {\n    return {\n      scrollLeft: element.scrollLeft,\n      scrollTop: element.scrollTop\n    };\n  }\n  return {\n    scrollLeft: element.pageXOffset,\n    scrollTop: element.pageYOffset\n  };\n}\nfunction getParentNode(node) {\n  if (getNodeName(node) === 'html') {\n    return node;\n  }\n  const result =\n  // Step into the shadow DOM of the parent of a slotted node.\n  node.assignedSlot ||\n  // DOM Element detected.\n  node.parentNode ||\n  // ShadowRoot detected.\n  isShadowRoot(node) && node.host ||\n  // Fallback.\n  getDocumentElement(node);\n  return isShadowRoot(result) ? result.host : result;\n}\nfunction getNearestOverflowAncestor(node) {\n  const parentNode = getParentNode(node);\n  if (isLastTraversableNode(parentNode)) {\n    return node.ownerDocument ? node.ownerDocument.body : node.body;\n  }\n  if (isHTMLElement(parentNode) && isOverflowElement(parentNode)) {\n    return parentNode;\n  }\n  return getNearestOverflowAncestor(parentNode);\n}\nfunction getOverflowAncestors(node, list, traverseIframes) {\n  var _node$ownerDocument2;\n  if (list === void 0) {\n    list = [];\n  }\n  if (traverseIframes === void 0) {\n    traverseIframes = true;\n  }\n  const scrollableAncestor = getNearestOverflowAncestor(node);\n  const isBody = scrollableAncestor === ((_node$ownerDocument2 = node.ownerDocument) == null ? void 0 : _node$ownerDocument2.body);\n  const win = getWindow(scrollableAncestor);\n  if (isBody) {\n    return list.concat(win, win.visualViewport || [], isOverflowElement(scrollableAncestor) ? scrollableAncestor : [], win.frameElement && traverseIframes ? getOverflowAncestors(win.frameElement) : []);\n  }\n  return list.concat(scrollableAncestor, getOverflowAncestors(scrollableAncestor, [], traverseIframes));\n}\n\nexport { getComputedStyle, getContainingBlock, getDocumentElement, getNearestOverflowAncestor, getNodeName, getNodeScroll, getOverflowAncestors, getParentNode, getWindow, isContainingBlock, isElement, isHTMLElement, isLastTraversableNode, isNode, isOverflowElement, isShadowRoot, isTableElement, isWebKit };\n","import { rectToClientRect, detectOverflow as detectOverflow$1, offset as offset$1, autoPlacement as autoPlacement$1, shift as shift$1, flip as flip$1, size as size$1, hide as hide$1, arrow as arrow$1, inline as inline$1, limitShift as limitShift$1, computePosition as computePosition$1 } from '@floating-ui/core';\nimport { round, createCoords, max, min, floor } from '@floating-ui/utils';\nimport { getComputedStyle, isHTMLElement, isElement, getWindow, isWebKit, getDocumentElement, getNodeName, isOverflowElement, getNodeScroll, getOverflowAncestors, getParentNode, isLastTraversableNode, isContainingBlock, isTableElement, getContainingBlock } from '@floating-ui/utils/dom';\nexport { getOverflowAncestors } from '@floating-ui/utils/dom';\n\nfunction getCssDimensions(element) {\n  const css = getComputedStyle(element);\n  // In testing environments, the `width` and `height` properties are empty\n  // strings for SVG elements, returning NaN. Fallback to `0` in this case.\n  let width = parseFloat(css.width) || 0;\n  let height = parseFloat(css.height) || 0;\n  const hasOffset = isHTMLElement(element);\n  const offsetWidth = hasOffset ? element.offsetWidth : width;\n  const offsetHeight = hasOffset ? element.offsetHeight : height;\n  const shouldFallback = round(width) !== offsetWidth || round(height) !== offsetHeight;\n  if (shouldFallback) {\n    width = offsetWidth;\n    height = offsetHeight;\n  }\n  return {\n    width,\n    height,\n    $: shouldFallback\n  };\n}\n\nfunction unwrapElement(element) {\n  return !isElement(element) ? element.contextElement : element;\n}\n\nfunction getScale(element) {\n  const domElement = unwrapElement(element);\n  if (!isHTMLElement(domElement)) {\n    return createCoords(1);\n  }\n  const rect = domElement.getBoundingClientRect();\n  const {\n    width,\n    height,\n    $\n  } = getCssDimensions(domElement);\n  let x = ($ ? round(rect.width) : rect.width) / width;\n  let y = ($ ? round(rect.height) : rect.height) / height;\n\n  // 0, NaN, or Infinity should always fallback to 1.\n\n  if (!x || !Number.isFinite(x)) {\n    x = 1;\n  }\n  if (!y || !Number.isFinite(y)) {\n    y = 1;\n  }\n  return {\n    x,\n    y\n  };\n}\n\nconst noOffsets = /*#__PURE__*/createCoords(0);\nfunction getVisualOffsets(element) {\n  const win = getWindow(element);\n  if (!isWebKit() || !win.visualViewport) {\n    return noOffsets;\n  }\n  return {\n    x: win.visualViewport.offsetLeft,\n    y: win.visualViewport.offsetTop\n  };\n}\nfunction shouldAddVisualOffsets(element, isFixed, floatingOffsetParent) {\n  if (isFixed === void 0) {\n    isFixed = false;\n  }\n  if (!floatingOffsetParent || isFixed && floatingOffsetParent !== getWindow(element)) {\n    return false;\n  }\n  return isFixed;\n}\n\nfunction getBoundingClientRect(element, includeScale, isFixedStrategy, offsetParent) {\n  if (includeScale === void 0) {\n    includeScale = false;\n  }\n  if (isFixedStrategy === void 0) {\n    isFixedStrategy = false;\n  }\n  const clientRect = element.getBoundingClientRect();\n  const domElement = unwrapElement(element);\n  let scale = createCoords(1);\n  if (includeScale) {\n    if (offsetParent) {\n      if (isElement(offsetParent)) {\n        scale = getScale(offsetParent);\n      }\n    } else {\n      scale = getScale(element);\n    }\n  }\n  const visualOffsets = shouldAddVisualOffsets(domElement, isFixedStrategy, offsetParent) ? getVisualOffsets(domElement) : createCoords(0);\n  let x = (clientRect.left + visualOffsets.x) / scale.x;\n  let y = (clientRect.top + visualOffsets.y) / scale.y;\n  let width = clientRect.width / scale.x;\n  let height = clientRect.height / scale.y;\n  if (domElement) {\n    const win = getWindow(domElement);\n    const offsetWin = offsetParent && isElement(offsetParent) ? getWindow(offsetParent) : offsetParent;\n    let currentWin = win;\n    let currentIFrame = currentWin.frameElement;\n    while (currentIFrame && offsetParent && offsetWin !== currentWin) {\n      const iframeScale = getScale(currentIFrame);\n      const iframeRect = currentIFrame.getBoundingClientRect();\n      const css = getComputedStyle(currentIFrame);\n      const left = iframeRect.left + (currentIFrame.clientLeft + parseFloat(css.paddingLeft)) * iframeScale.x;\n      const top = iframeRect.top + (currentIFrame.clientTop + parseFloat(css.paddingTop)) * iframeScale.y;\n      x *= iframeScale.x;\n      y *= iframeScale.y;\n      width *= iframeScale.x;\n      height *= iframeScale.y;\n      x += left;\n      y += top;\n      currentWin = getWindow(currentIFrame);\n      currentIFrame = currentWin.frameElement;\n    }\n  }\n  return rectToClientRect({\n    width,\n    height,\n    x,\n    y\n  });\n}\n\nconst topLayerSelectors = [':popover-open', ':modal'];\nfunction isTopLayer(element) {\n  return topLayerSelectors.some(selector => {\n    try {\n      return element.matches(selector);\n    } catch (e) {\n      return false;\n    }\n  });\n}\n\nfunction convertOffsetParentRelativeRectToViewportRelativeRect(_ref) {\n  let {\n    elements,\n    rect,\n    offsetParent,\n    strategy\n  } = _ref;\n  const isFixed = strategy === 'fixed';\n  const documentElement = getDocumentElement(offsetParent);\n  const topLayer = elements ? isTopLayer(elements.floating) : false;\n  if (offsetParent === documentElement || topLayer && isFixed) {\n    return rect;\n  }\n  let scroll = {\n    scrollLeft: 0,\n    scrollTop: 0\n  };\n  let scale = createCoords(1);\n  const offsets = createCoords(0);\n  const isOffsetParentAnElement = isHTMLElement(offsetParent);\n  if (isOffsetParentAnElement || !isOffsetParentAnElement && !isFixed) {\n    if (getNodeName(offsetParent) !== 'body' || isOverflowElement(documentElement)) {\n      scroll = getNodeScroll(offsetParent);\n    }\n    if (isHTMLElement(offsetParent)) {\n      const offsetRect = getBoundingClientRect(offsetParent);\n      scale = getScale(offsetParent);\n      offsets.x = offsetRect.x + offsetParent.clientLeft;\n      offsets.y = offsetRect.y + offsetParent.clientTop;\n    }\n  }\n  return {\n    width: rect.width * scale.x,\n    height: rect.height * scale.y,\n    x: rect.x * scale.x - scroll.scrollLeft * scale.x + offsets.x,\n    y: rect.y * scale.y - scroll.scrollTop * scale.y + offsets.y\n  };\n}\n\nfunction getClientRects(element) {\n  return Array.from(element.getClientRects());\n}\n\nfunction getWindowScrollBarX(element) {\n  // If <html> has a CSS width greater than the viewport, then this will be\n  // incorrect for RTL.\n  return getBoundingClientRect(getDocumentElement(element)).left + getNodeScroll(element).scrollLeft;\n}\n\n// Gets the entire size of the scrollable document area, even extending outside\n// of the `<html>` and `<body>` rect bounds if horizontally scrollable.\nfunction getDocumentRect(element) {\n  const html = getDocumentElement(element);\n  const scroll = getNodeScroll(element);\n  const body = element.ownerDocument.body;\n  const width = max(html.scrollWidth, html.clientWidth, body.scrollWidth, body.clientWidth);\n  const height = max(html.scrollHeight, html.clientHeight, body.scrollHeight, body.clientHeight);\n  let x = -scroll.scrollLeft + getWindowScrollBarX(element);\n  const y = -scroll.scrollTop;\n  if (getComputedStyle(body).direction === 'rtl') {\n    x += max(html.clientWidth, body.clientWidth) - width;\n  }\n  return {\n    width,\n    height,\n    x,\n    y\n  };\n}\n\nfunction getViewportRect(element, strategy) {\n  const win = getWindow(element);\n  const html = getDocumentElement(element);\n  const visualViewport = win.visualViewport;\n  let width = html.clientWidth;\n  let height = html.clientHeight;\n  let x = 0;\n  let y = 0;\n  if (visualViewport) {\n    width = visualViewport.width;\n    height = visualViewport.height;\n    const visualViewportBased = isWebKit();\n    if (!visualViewportBased || visualViewportBased && strategy === 'fixed') {\n      x = visualViewport.offsetLeft;\n      y = visualViewport.offsetTop;\n    }\n  }\n  return {\n    width,\n    height,\n    x,\n    y\n  };\n}\n\n// Returns the inner client rect, subtracting scrollbars if present.\nfunction getInnerBoundingClientRect(element, strategy) {\n  const clientRect = getBoundingClientRect(element, true, strategy === 'fixed');\n  const top = clientRect.top + element.clientTop;\n  const left = clientRect.left + element.clientLeft;\n  const scale = isHTMLElement(element) ? getScale(element) : createCoords(1);\n  const width = element.clientWidth * scale.x;\n  const height = element.clientHeight * scale.y;\n  const x = left * scale.x;\n  const y = top * scale.y;\n  return {\n    width,\n    height,\n    x,\n    y\n  };\n}\nfunction getClientRectFromClippingAncestor(element, clippingAncestor, strategy) {\n  let rect;\n  if (clippingAncestor === 'viewport') {\n    rect = getViewportRect(element, strategy);\n  } else if (clippingAncestor === 'document') {\n    rect = getDocumentRect(getDocumentElement(element));\n  } else if (isElement(clippingAncestor)) {\n    rect = getInnerBoundingClientRect(clippingAncestor, strategy);\n  } else {\n    const visualOffsets = getVisualOffsets(element);\n    rect = {\n      ...clippingAncestor,\n      x: clippingAncestor.x - visualOffsets.x,\n      y: clippingAncestor.y - visualOffsets.y\n    };\n  }\n  return rectToClientRect(rect);\n}\nfunction hasFixedPositionAncestor(element, stopNode) {\n  const parentNode = getParentNode(element);\n  if (parentNode === stopNode || !isElement(parentNode) || isLastTraversableNode(parentNode)) {\n    return false;\n  }\n  return getComputedStyle(parentNode).position === 'fixed' || hasFixedPositionAncestor(parentNode, stopNode);\n}\n\n// A \"clipping ancestor\" is an `overflow` element with the characteristic of\n// clipping (or hiding) child elements. This returns all clipping ancestors\n// of the given element up the tree.\nfunction getClippingElementAncestors(element, cache) {\n  const cachedResult = cache.get(element);\n  if (cachedResult) {\n    return cachedResult;\n  }\n  let result = getOverflowAncestors(element, [], false).filter(el => isElement(el) && getNodeName(el) !== 'body');\n  let currentContainingBlockComputedStyle = null;\n  const elementIsFixed = getComputedStyle(element).position === 'fixed';\n  let currentNode = elementIsFixed ? getParentNode(element) : element;\n\n  // https://developer.mozilla.org/en-US/docs/Web/CSS/Containing_block#identifying_the_containing_block\n  while (isElement(currentNode) && !isLastTraversableNode(currentNode)) {\n    const computedStyle = getComputedStyle(currentNode);\n    const currentNodeIsContaining = isContainingBlock(currentNode);\n    if (!currentNodeIsContaining && computedStyle.position === 'fixed') {\n      currentContainingBlockComputedStyle = null;\n    }\n    const shouldDropCurrentNode = elementIsFixed ? !currentNodeIsContaining && !currentContainingBlockComputedStyle : !currentNodeIsContaining && computedStyle.position === 'static' && !!currentContainingBlockComputedStyle && ['absolute', 'fixed'].includes(currentContainingBlockComputedStyle.position) || isOverflowElement(currentNode) && !currentNodeIsContaining && hasFixedPositionAncestor(element, currentNode);\n    if (shouldDropCurrentNode) {\n      // Drop non-containing blocks.\n      result = result.filter(ancestor => ancestor !== currentNode);\n    } else {\n      // Record last containing block for next iteration.\n      currentContainingBlockComputedStyle = computedStyle;\n    }\n    currentNode = getParentNode(currentNode);\n  }\n  cache.set(element, result);\n  return result;\n}\n\n// Gets the maximum area that the element is visible in due to any number of\n// clipping ancestors.\nfunction getClippingRect(_ref) {\n  let {\n    element,\n    boundary,\n    rootBoundary,\n    strategy\n  } = _ref;\n  const elementClippingAncestors = boundary === 'clippingAncestors' ? isTopLayer(element) ? [] : getClippingElementAncestors(element, this._c) : [].concat(boundary);\n  const clippingAncestors = [...elementClippingAncestors, rootBoundary];\n  const firstClippingAncestor = clippingAncestors[0];\n  const clippingRect = clippingAncestors.reduce((accRect, clippingAncestor) => {\n    const rect = getClientRectFromClippingAncestor(element, clippingAncestor, strategy);\n    accRect.top = max(rect.top, accRect.top);\n    accRect.right = min(rect.right, accRect.right);\n    accRect.bottom = min(rect.bottom, accRect.bottom);\n    accRect.left = max(rect.left, accRect.left);\n    return accRect;\n  }, getClientRectFromClippingAncestor(element, firstClippingAncestor, strategy));\n  return {\n    width: clippingRect.right - clippingRect.left,\n    height: clippingRect.bottom - clippingRect.top,\n    x: clippingRect.left,\n    y: clippingRect.top\n  };\n}\n\nfunction getDimensions(element) {\n  const {\n    width,\n    height\n  } = getCssDimensions(element);\n  return {\n    width,\n    height\n  };\n}\n\nfunction getRectRelativeToOffsetParent(element, offsetParent, strategy) {\n  const isOffsetParentAnElement = isHTMLElement(offsetParent);\n  const documentElement = getDocumentElement(offsetParent);\n  const isFixed = strategy === 'fixed';\n  const rect = getBoundingClientRect(element, true, isFixed, offsetParent);\n  let scroll = {\n    scrollLeft: 0,\n    scrollTop: 0\n  };\n  const offsets = createCoords(0);\n  if (isOffsetParentAnElement || !isOffsetParentAnElement && !isFixed) {\n    if (getNodeName(offsetParent) !== 'body' || isOverflowElement(documentElement)) {\n      scroll = getNodeScroll(offsetParent);\n    }\n    if (isOffsetParentAnElement) {\n      const offsetRect = getBoundingClientRect(offsetParent, true, isFixed, offsetParent);\n      offsets.x = offsetRect.x + offsetParent.clientLeft;\n      offsets.y = offsetRect.y + offsetParent.clientTop;\n    } else if (documentElement) {\n      offsets.x = getWindowScrollBarX(documentElement);\n    }\n  }\n  const x = rect.left + scroll.scrollLeft - offsets.x;\n  const y = rect.top + scroll.scrollTop - offsets.y;\n  return {\n    x,\n    y,\n    width: rect.width,\n    height: rect.height\n  };\n}\n\nfunction isStaticPositioned(element) {\n  return getComputedStyle(element).position === 'static';\n}\n\nfunction getTrueOffsetParent(element, polyfill) {\n  if (!isHTMLElement(element) || getComputedStyle(element).position === 'fixed') {\n    return null;\n  }\n  if (polyfill) {\n    return polyfill(element);\n  }\n  return element.offsetParent;\n}\n\n// Gets the closest ancestor positioned element. Handles some edge cases,\n// such as table ancestors and cross browser bugs.\nfunction getOffsetParent(element, polyfill) {\n  const win = getWindow(element);\n  if (isTopLayer(element)) {\n    return win;\n  }\n  if (!isHTMLElement(element)) {\n    let svgOffsetParent = getParentNode(element);\n    while (svgOffsetParent && !isLastTraversableNode(svgOffsetParent)) {\n      if (isElement(svgOffsetParent) && !isStaticPositioned(svgOffsetParent)) {\n        return svgOffsetParent;\n      }\n      svgOffsetParent = getParentNode(svgOffsetParent);\n    }\n    return win;\n  }\n  let offsetParent = getTrueOffsetParent(element, polyfill);\n  while (offsetParent && isTableElement(offsetParent) && isStaticPositioned(offsetParent)) {\n    offsetParent = getTrueOffsetParent(offsetParent, polyfill);\n  }\n  if (offsetParent && isLastTraversableNode(offsetParent) && isStaticPositioned(offsetParent) && !isContainingBlock(offsetParent)) {\n    return win;\n  }\n  return offsetParent || getContainingBlock(element) || win;\n}\n\nconst getElementRects = async function (data) {\n  const getOffsetParentFn = this.getOffsetParent || getOffsetParent;\n  const getDimensionsFn = this.getDimensions;\n  const floatingDimensions = await getDimensionsFn(data.floating);\n  return {\n    reference: getRectRelativeToOffsetParent(data.reference, await getOffsetParentFn(data.floating), data.strategy),\n    floating: {\n      x: 0,\n      y: 0,\n      width: floatingDimensions.width,\n      height: floatingDimensions.height\n    }\n  };\n};\n\nfunction isRTL(element) {\n  return getComputedStyle(element).direction === 'rtl';\n}\n\nconst platform = {\n  convertOffsetParentRelativeRectToViewportRelativeRect,\n  getDocumentElement,\n  getClippingRect,\n  getOffsetParent,\n  getElementRects,\n  getClientRects,\n  getDimensions,\n  getScale,\n  isElement,\n  isRTL\n};\n\n// https://samthor.au/2021/observing-dom/\nfunction observeMove(element, onMove) {\n  let io = null;\n  let timeoutId;\n  const root = getDocumentElement(element);\n  function cleanup() {\n    var _io;\n    clearTimeout(timeoutId);\n    (_io = io) == null || _io.disconnect();\n    io = null;\n  }\n  function refresh(skip, threshold) {\n    if (skip === void 0) {\n      skip = false;\n    }\n    if (threshold === void 0) {\n      threshold = 1;\n    }\n    cleanup();\n    const {\n      left,\n      top,\n      width,\n      height\n    } = element.getBoundingClientRect();\n    if (!skip) {\n      onMove();\n    }\n    if (!width || !height) {\n      return;\n    }\n    const insetTop = floor(top);\n    const insetRight = floor(root.clientWidth - (left + width));\n    const insetBottom = floor(root.clientHeight - (top + height));\n    const insetLeft = floor(left);\n    const rootMargin = -insetTop + \"px \" + -insetRight + \"px \" + -insetBottom + \"px \" + -insetLeft + \"px\";\n    const options = {\n      rootMargin,\n      threshold: max(0, min(1, threshold)) || 1\n    };\n    let isFirstUpdate = true;\n    function handleObserve(entries) {\n      const ratio = entries[0].intersectionRatio;\n      if (ratio !== threshold) {\n        if (!isFirstUpdate) {\n          return refresh();\n        }\n        if (!ratio) {\n          // If the reference is clipped, the ratio is 0. Throttle the refresh\n          // to prevent an infinite loop of updates.\n          timeoutId = setTimeout(() => {\n            refresh(false, 1e-7);\n          }, 1000);\n        } else {\n          refresh(false, ratio);\n        }\n      }\n      isFirstUpdate = false;\n    }\n\n    // Older browsers don't support a `document` as the root and will throw an\n    // error.\n    try {\n      io = new IntersectionObserver(handleObserve, {\n        ...options,\n        // Handle <iframe>s\n        root: root.ownerDocument\n      });\n    } catch (e) {\n      io = new IntersectionObserver(handleObserve, options);\n    }\n    io.observe(element);\n  }\n  refresh(true);\n  return cleanup;\n}\n\n/**\n * Automatically updates the position of the floating element when necessary.\n * Should only be called when the floating element is mounted on the DOM or\n * visible on the screen.\n * @returns cleanup function that should be invoked when the floating element is\n * removed from the DOM or hidden from the screen.\n * @see https://floating-ui.com/docs/autoUpdate\n */\nfunction autoUpdate(reference, floating, update, options) {\n  if (options === void 0) {\n    options = {};\n  }\n  const {\n    ancestorScroll = true,\n    ancestorResize = true,\n    elementResize = typeof ResizeObserver === 'function',\n    layoutShift = typeof IntersectionObserver === 'function',\n    animationFrame = false\n  } = options;\n  const referenceEl = unwrapElement(reference);\n  const ancestors = ancestorScroll || ancestorResize ? [...(referenceEl ? getOverflowAncestors(referenceEl) : []), ...getOverflowAncestors(floating)] : [];\n  ancestors.forEach(ancestor => {\n    ancestorScroll && ancestor.addEventListener('scroll', update, {\n      passive: true\n    });\n    ancestorResize && ancestor.addEventListener('resize', update);\n  });\n  const cleanupIo = referenceEl && layoutShift ? observeMove(referenceEl, update) : null;\n  let reobserveFrame = -1;\n  let resizeObserver = null;\n  if (elementResize) {\n    resizeObserver = new ResizeObserver(_ref => {\n      let [firstEntry] = _ref;\n      if (firstEntry && firstEntry.target === referenceEl && resizeObserver) {\n        // Prevent update loops when using the `size` middleware.\n        // https://github.com/floating-ui/floating-ui/issues/1740\n        resizeObserver.unobserve(floating);\n        cancelAnimationFrame(reobserveFrame);\n        reobserveFrame = requestAnimationFrame(() => {\n          var _resizeObserver;\n          (_resizeObserver = resizeObserver) == null || _resizeObserver.observe(floating);\n        });\n      }\n      update();\n    });\n    if (referenceEl && !animationFrame) {\n      resizeObserver.observe(referenceEl);\n    }\n    resizeObserver.observe(floating);\n  }\n  let frameId;\n  let prevRefRect = animationFrame ? getBoundingClientRect(reference) : null;\n  if (animationFrame) {\n    frameLoop();\n  }\n  function frameLoop() {\n    const nextRefRect = getBoundingClientRect(reference);\n    if (prevRefRect && (nextRefRect.x !== prevRefRect.x || nextRefRect.y !== prevRefRect.y || nextRefRect.width !== prevRefRect.width || nextRefRect.height !== prevRefRect.height)) {\n      update();\n    }\n    prevRefRect = nextRefRect;\n    frameId = requestAnimationFrame(frameLoop);\n  }\n  update();\n  return () => {\n    var _resizeObserver2;\n    ancestors.forEach(ancestor => {\n      ancestorScroll && ancestor.removeEventListener('scroll', update);\n      ancestorResize && ancestor.removeEventListener('resize', update);\n    });\n    cleanupIo == null || cleanupIo();\n    (_resizeObserver2 = resizeObserver) == null || _resizeObserver2.disconnect();\n    resizeObserver = null;\n    if (animationFrame) {\n      cancelAnimationFrame(frameId);\n    }\n  };\n}\n\n/**\n * Resolves with an object of overflow side offsets that determine how much the\n * element is overflowing a given clipping boundary on each side.\n * - positive = overflowing the boundary by that number of pixels\n * - negative = how many pixels left before it will overflow\n * - 0 = lies flush with the boundary\n * @see https://floating-ui.com/docs/detectOverflow\n */\nconst detectOverflow = detectOverflow$1;\n\n/**\n * Modifies the placement by translating the floating element along the\n * specified axes.\n * A number (shorthand for `mainAxis` or distance), or an axes configuration\n * object may be passed.\n * @see https://floating-ui.com/docs/offset\n */\nconst offset = offset$1;\n\n/**\n * Optimizes the visibility of the floating element by choosing the placement\n * that has the most space available automatically, without needing to specify a\n * preferred placement. Alternative to `flip`.\n * @see https://floating-ui.com/docs/autoPlacement\n */\nconst autoPlacement = autoPlacement$1;\n\n/**\n * Optimizes the visibility of the floating element by shifting it in order to\n * keep it in view when it will overflow the clipping boundary.\n * @see https://floating-ui.com/docs/shift\n */\nconst shift = shift$1;\n\n/**\n * Optimizes the visibility of the floating element by flipping the `placement`\n * in order to keep it in view when the preferred placement(s) will overflow the\n * clipping boundary. Alternative to `autoPlacement`.\n * @see https://floating-ui.com/docs/flip\n */\nconst flip = flip$1;\n\n/**\n * Provides data that allows you to change the size of the floating element —\n * for instance, prevent it from overflowing the clipping boundary or match the\n * width of the reference element.\n * @see https://floating-ui.com/docs/size\n */\nconst size = size$1;\n\n/**\n * Provides data to hide the floating element in applicable situations, such as\n * when it is not in the same clipping context as the reference element.\n * @see https://floating-ui.com/docs/hide\n */\nconst hide = hide$1;\n\n/**\n * Provides data to position an inner element of the floating element so that it\n * appears centered to the reference element.\n * @see https://floating-ui.com/docs/arrow\n */\nconst arrow = arrow$1;\n\n/**\n * Provides improved positioning for inline reference elements that can span\n * over multiple lines, such as hyperlinks or range selections.\n * @see https://floating-ui.com/docs/inline\n */\nconst inline = inline$1;\n\n/**\n * Built-in `limiter` that will stop `shift()` at a certain point.\n */\nconst limitShift = limitShift$1;\n\n/**\n * Computes the `x` and `y` coordinates that will place the floating element\n * next to a given reference element.\n */\nconst computePosition = (reference, floating, options) => {\n  // This caches the expensive `getClippingElementAncestors` function so that\n  // multiple lifecycle resets re-use the same result. It only lives for a\n  // single call. If other functions become expensive, we can add them as well.\n  const cache = new Map();\n  const mergedOptions = {\n    platform,\n    ...options\n  };\n  const platformWithCache = {\n    ...mergedOptions.platform,\n    _c: cache\n  };\n  return computePosition$1(reference, floating, {\n    ...mergedOptions,\n    platform: platformWithCache\n  });\n};\n\nexport { arrow, autoPlacement, autoUpdate, computePosition, detectOverflow, flip, hide, inline, limitShift, offset, platform, shift, size };\n","/*\n* React Tooltip\n* {@link https://github.com/ReactTooltip/react-tooltip}\n* @copyright ReactTooltip Team\n* @license MIT\n*/\nimport e,{useLayoutEffect as t,useEffect as o,createContext as r,useState as l,useCallback as n,useMemo as c,useContext as i,useRef as s,useImperativeHandle as a}from\"react\";import{arrow as u,computePosition as d,offset as p,flip as v,shift as m,autoUpdate as f}from\"@floating-ui/dom\";import y from\"classnames\";const h=\"react-tooltip-core-styles\",w=\"react-tooltip-base-styles\",b={core:!1,base:!1};function S({css:e,id:t=w,type:o=\"base\",ref:r}){var l,n;if(!e||\"undefined\"==typeof document||b[o])return;if(\"core\"===o&&\"undefined\"!=typeof process&&(null===(l=null===process||void 0===process?void 0:process.env)||void 0===l?void 0:l.REACT_TOOLTIP_DISABLE_CORE_STYLES))return;if(\"base\"!==o&&\"undefined\"!=typeof process&&(null===(n=null===process||void 0===process?void 0:process.env)||void 0===n?void 0:n.REACT_TOOLTIP_DISABLE_BASE_STYLES))return;\"core\"===o&&(t=h),r||(r={});const{insertAt:c}=r;if(document.getElementById(t))return void console.warn(`[react-tooltip] Element with id '${t}' already exists. Call \\`removeStyle()\\` first`);const i=document.head||document.getElementsByTagName(\"head\")[0],s=document.createElement(\"style\");s.id=t,s.type=\"text/css\",\"top\"===c&&i.firstChild?i.insertBefore(s,i.firstChild):i.appendChild(s),s.styleSheet?s.styleSheet.cssText=e:s.appendChild(document.createTextNode(e)),b[o]=!0}function g({type:e=\"base\",id:t=w}={}){if(!b[e])return;\"core\"===e&&(t=h);const o=document.getElementById(t);\"style\"===(null==o?void 0:o.tagName)?null==o||o.remove():console.warn(`[react-tooltip] Failed to remove 'style' element with id '${t}'. Call \\`injectStyle()\\` first`),b[e]=!1}const E=async({elementReference:e=null,tooltipReference:t=null,tooltipArrowReference:o=null,place:r=\"top\",offset:l=10,strategy:n=\"absolute\",middlewares:c=[p(Number(l)),v({fallbackAxisSideDirection:\"start\"}),m({padding:5})],border:i})=>{if(!e)return{tooltipStyles:{},tooltipArrowStyles:{},place:r};if(null===t)return{tooltipStyles:{},tooltipArrowStyles:{},place:r};const s=c;return o?(s.push(u({element:o,padding:5})),d(e,t,{placement:r,strategy:n,middleware:s}).then((({x:e,y:t,placement:o,middlewareData:r})=>{var l,n;const c={left:`${e}px`,top:`${t}px`,border:i},{x:s,y:a}=null!==(l=r.arrow)&&void 0!==l?l:{x:0,y:0},u=null!==(n={top:\"bottom\",right:\"left\",bottom:\"top\",left:\"right\"}[o.split(\"-\")[0]])&&void 0!==n?n:\"bottom\",d=i&&{borderBottom:i,borderRight:i};let p=0;if(i){const e=`${i}`.match(/(\\d+)px/);p=(null==e?void 0:e[1])?Number(e[1]):1}return{tooltipStyles:c,tooltipArrowStyles:{left:null!=s?`${s}px`:\"\",top:null!=a?`${a}px`:\"\",right:\"\",bottom:\"\",...d,[u]:`-${4+p}px`},place:o}}))):d(e,t,{placement:\"bottom\",strategy:n,middleware:s}).then((({x:e,y:t,placement:o})=>({tooltipStyles:{left:`${e}px`,top:`${t}px`},tooltipArrowStyles:{},place:o})))},A=(e,t)=>!(\"CSS\"in window&&\"supports\"in window.CSS)||window.CSS.supports(e,t),_=(e,t,o)=>{let r=null;const l=function(...l){const n=()=>{r=null,o||e.apply(this,l)};o&&!r&&(e.apply(this,l),r=setTimeout(n,t)),o||(r&&clearTimeout(r),r=setTimeout(n,t))};return l.cancel=()=>{r&&(clearTimeout(r),r=null)},l},O=e=>null!==e&&!Array.isArray(e)&&\"object\"==typeof e,T=(e,t)=>{if(e===t)return!0;if(Array.isArray(e)&&Array.isArray(t))return e.length===t.length&&e.every(((e,o)=>T(e,t[o])));if(Array.isArray(e)!==Array.isArray(t))return!1;if(!O(e)||!O(t))return e===t;const o=Object.keys(e),r=Object.keys(t);return o.length===r.length&&o.every((o=>T(e[o],t[o])))},k=e=>{if(!(e instanceof HTMLElement||e instanceof SVGElement))return!1;const t=getComputedStyle(e);return[\"overflow\",\"overflow-x\",\"overflow-y\"].some((e=>{const o=t.getPropertyValue(e);return\"auto\"===o||\"scroll\"===o}))},C=e=>{if(!e)return null;let t=e.parentElement;for(;t;){if(k(t))return t;t=t.parentElement}return document.scrollingElement||document.documentElement},L=\"undefined\"!=typeof window?t:o,R=\"DEFAULT_TOOLTIP_ID\",x={anchorRefs:new Set,activeAnchor:{current:null},attach:()=>{},detach:()=>{},setActiveAnchor:()=>{}},N=r({getTooltipData:()=>x}),$=({children:t})=>{const[o,r]=l({[R]:new Set}),[i,s]=l({[R]:{current:null}}),a=(e,...t)=>{r((o=>{var r;const l=null!==(r=o[e])&&void 0!==r?r:new Set;return t.forEach((e=>l.add(e))),{...o,[e]:new Set(l)}}))},u=(e,...t)=>{r((o=>{const r=o[e];return r?(t.forEach((e=>r.delete(e))),{...o}):o}))},d=n(((e=R)=>{var t,r;return{anchorRefs:null!==(t=o[e])&&void 0!==t?t:new Set,activeAnchor:null!==(r=i[e])&&void 0!==r?r:{current:null},attach:(...t)=>a(e,...t),detach:(...t)=>u(e,...t),setActiveAnchor:t=>((e,t)=>{s((o=>{var r;return(null===(r=o[e])||void 0===r?void 0:r.current)===t.current?o:{...o,[e]:t}}))})(e,t)}}),[o,i,a,u]),p=c((()=>({getTooltipData:d})),[d]);return e.createElement(N.Provider,{value:p},t)};function I(e=R){return i(N).getTooltipData(e)}const j=({tooltipId:t,children:r,className:l,place:n,content:c,html:i,variant:a,offset:u,wrapper:d,events:p,positionStrategy:v,delayShow:m,delayHide:f})=>{const{attach:h,detach:w}=I(t),b=s(null);return o((()=>(h(b),()=>{w(b)})),[]),e.createElement(\"span\",{ref:b,className:y(\"react-tooltip-wrapper\",l),\"data-tooltip-place\":n,\"data-tooltip-content\":c,\"data-tooltip-html\":i,\"data-tooltip-variant\":a,\"data-tooltip-offset\":u,\"data-tooltip-wrapper\":d,\"data-tooltip-events\":p,\"data-tooltip-position-strategy\":v,\"data-tooltip-delay-show\":m,\"data-tooltip-delay-hide\":f},r)};var B={tooltip:\"core-styles-module_tooltip__3vRRp\",fixed:\"core-styles-module_fixed__pcSol\",arrow:\"core-styles-module_arrow__cvMwQ\",noArrow:\"core-styles-module_noArrow__xock6\",clickable:\"core-styles-module_clickable__ZuTTB\",show:\"core-styles-module_show__Nt9eE\",closing:\"core-styles-module_closing__sGnxF\"},z={tooltip:\"styles-module_tooltip__mnnfp\",arrow:\"styles-module_arrow__K0L3T\",dark:\"styles-module_dark__xNqje\",light:\"styles-module_light__Z6W-X\",success:\"styles-module_success__A2AKt\",warning:\"styles-module_warning__SCK0X\",error:\"styles-module_error__JvumD\",info:\"styles-module_info__BWdHW\"};const D=({forwardRef:t,id:r,className:c,classNameArrow:i,variant:u=\"dark\",anchorId:d,anchorSelect:p,place:v=\"top\",offset:m=10,events:h=[\"hover\"],openOnClick:w=!1,positionStrategy:b=\"absolute\",middlewares:S,wrapper:g,delayShow:A=0,delayHide:O=0,float:k=!1,hidden:R=!1,noArrow:x=!1,clickable:N=!1,closeOnEsc:$=!1,closeOnScroll:j=!1,closeOnResize:D=!1,openEvents:q,closeEvents:H,globalCloseEvents:M,imperativeModeOnly:W,style:P,position:V,afterShow:F,afterHide:K,content:U,contentWrapperRef:X,isOpen:Y,defaultIsOpen:G=!1,setIsOpen:Z,activeAnchor:J,setActiveAnchor:Q,border:ee,opacity:te,arrowColor:oe,role:re=\"tooltip\"})=>{var le;const ne=s(null),ce=s(null),ie=s(null),se=s(null),ae=s(null),[ue,de]=l({tooltipStyles:{},tooltipArrowStyles:{},place:v}),[pe,ve]=l(!1),[me,fe]=l(!1),[ye,he]=l(null),we=s(!1),be=s(null),{anchorRefs:Se,setActiveAnchor:ge}=I(r),Ee=s(!1),[Ae,_e]=l([]),Oe=s(!1),Te=w||h.includes(\"click\"),ke=Te||(null==q?void 0:q.click)||(null==q?void 0:q.dblclick)||(null==q?void 0:q.mousedown),Ce=q?{...q}:{mouseenter:!0,focus:!0,click:!1,dblclick:!1,mousedown:!1};!q&&Te&&Object.assign(Ce,{mouseenter:!1,focus:!1,click:!0});const Le=H?{...H}:{mouseleave:!0,blur:!0,click:!1,dblclick:!1,mouseup:!1};!H&&Te&&Object.assign(Le,{mouseleave:!1,blur:!1});const Re=M?{...M}:{escape:$||!1,scroll:j||!1,resize:D||!1,clickOutsideAnchor:ke||!1};W&&(Object.assign(Ce,{mouseenter:!1,focus:!1,click:!1,dblclick:!1,mousedown:!1}),Object.assign(Le,{mouseleave:!1,blur:!1,click:!1,dblclick:!1,mouseup:!1}),Object.assign(Re,{escape:!1,scroll:!1,resize:!1,clickOutsideAnchor:!1})),L((()=>(Oe.current=!0,()=>{Oe.current=!1})),[]);const xe=e=>{Oe.current&&(e&&fe(!0),setTimeout((()=>{Oe.current&&(null==Z||Z(e),void 0===Y&&ve(e))}),10))};o((()=>{if(void 0===Y)return()=>null;Y&&fe(!0);const e=setTimeout((()=>{ve(Y)}),10);return()=>{clearTimeout(e)}}),[Y]),o((()=>{if(pe!==we.current)if(ae.current&&clearTimeout(ae.current),we.current=pe,pe)null==F||F();else{const e=(e=>{const t=e.match(/^([\\d.]+)(ms|s)$/);if(!t)return 0;const[,o,r]=t;return Number(o)*(\"ms\"===r?1:1e3)})(getComputedStyle(document.body).getPropertyValue(\"--rt-transition-show-delay\"));ae.current=setTimeout((()=>{fe(!1),he(null),null==K||K()}),e+25)}}),[pe]);const Ne=e=>{de((t=>T(t,e)?t:e))},$e=(e=A)=>{ie.current&&clearTimeout(ie.current),me?xe(!0):ie.current=setTimeout((()=>{xe(!0)}),e)},Ie=(e=O)=>{se.current&&clearTimeout(se.current),se.current=setTimeout((()=>{Ee.current||xe(!1)}),e)},je=e=>{var t;if(!e)return;const o=null!==(t=e.currentTarget)&&void 0!==t?t:e.target;if(!(null==o?void 0:o.isConnected))return Q(null),void ge({current:null});A?$e():xe(!0),Q(o),ge({current:o}),se.current&&clearTimeout(se.current)},Be=()=>{N?Ie(O||100):O?Ie():xe(!1),ie.current&&clearTimeout(ie.current)},ze=({x:e,y:t})=>{var o;const r={getBoundingClientRect:()=>({x:e,y:t,width:0,height:0,top:t,left:e,right:e,bottom:t})};E({place:null!==(o=null==ye?void 0:ye.place)&&void 0!==o?o:v,offset:m,elementReference:r,tooltipReference:ne.current,tooltipArrowReference:ce.current,strategy:b,middlewares:S,border:ee}).then((e=>{Ne(e)}))},De=e=>{if(!e)return;const t=e,o={x:t.clientX,y:t.clientY};ze(o),be.current=o},qe=e=>{var t;if(!pe)return;const o=e.target;if(!o.isConnected)return;if(null===(t=ne.current)||void 0===t?void 0:t.contains(o))return;[document.querySelector(`[id='${d}']`),...Ae].some((e=>null==e?void 0:e.contains(o)))||(xe(!1),ie.current&&clearTimeout(ie.current))},He=_(je,50,!0),Me=_(Be,50,!0),We=e=>{Me.cancel(),He(e)},Pe=()=>{He.cancel(),Me()},Ve=n((()=>{var e,t;const o=null!==(e=null==ye?void 0:ye.position)&&void 0!==e?e:V;o?ze(o):k?be.current&&ze(be.current):(null==J?void 0:J.isConnected)&&E({place:null!==(t=null==ye?void 0:ye.place)&&void 0!==t?t:v,offset:m,elementReference:J,tooltipReference:ne.current,tooltipArrowReference:ce.current,strategy:b,middlewares:S,border:ee}).then((e=>{Oe.current&&Ne(e)}))}),[pe,J,U,P,v,null==ye?void 0:ye.place,m,b,V,null==ye?void 0:ye.position,k]);o((()=>{var e,t;const o=new Set(Se);Ae.forEach((e=>{o.add({current:e})}));const r=document.querySelector(`[id='${d}']`);r&&o.add({current:r});const l=()=>{xe(!1)},n=C(J),c=C(ne.current);Re.scroll&&(window.addEventListener(\"scroll\",l),null==n||n.addEventListener(\"scroll\",l),null==c||c.addEventListener(\"scroll\",l));let i=null;Re.resize?window.addEventListener(\"resize\",l):J&&ne.current&&(i=f(J,ne.current,Ve,{ancestorResize:!0,elementResize:!0,layoutShift:!0}));const s=e=>{\"Escape\"===e.key&&xe(!1)};Re.escape&&window.addEventListener(\"keydown\",s),Re.clickOutsideAnchor&&window.addEventListener(\"click\",qe);const a=[],u=e=>{pe&&(null==e?void 0:e.target)===J||je(e)},p=e=>{pe&&(null==e?void 0:e.target)===J&&Be()},v=[\"mouseenter\",\"mouseleave\",\"focus\",\"blur\"],m=[\"click\",\"dblclick\",\"mousedown\",\"mouseup\"];Object.entries(Ce).forEach((([e,t])=>{t&&(v.includes(e)?a.push({event:e,listener:We}):m.includes(e)&&a.push({event:e,listener:u}))})),Object.entries(Le).forEach((([e,t])=>{t&&(v.includes(e)?a.push({event:e,listener:Pe}):m.includes(e)&&a.push({event:e,listener:p}))})),k&&a.push({event:\"pointermove\",listener:De});const y=()=>{Ee.current=!0},h=()=>{Ee.current=!1,Be()};return N&&!ke&&(null===(e=ne.current)||void 0===e||e.addEventListener(\"mouseenter\",y),null===(t=ne.current)||void 0===t||t.addEventListener(\"mouseleave\",h)),a.forEach((({event:e,listener:t})=>{o.forEach((o=>{var r;null===(r=o.current)||void 0===r||r.addEventListener(e,t)}))})),()=>{var e,t;Re.scroll&&(window.removeEventListener(\"scroll\",l),null==n||n.removeEventListener(\"scroll\",l),null==c||c.removeEventListener(\"scroll\",l)),Re.resize?window.removeEventListener(\"resize\",l):null==i||i(),Re.clickOutsideAnchor&&window.removeEventListener(\"click\",qe),Re.escape&&window.removeEventListener(\"keydown\",s),N&&!ke&&(null===(e=ne.current)||void 0===e||e.removeEventListener(\"mouseenter\",y),null===(t=ne.current)||void 0===t||t.removeEventListener(\"mouseleave\",h)),a.forEach((({event:e,listener:t})=>{o.forEach((o=>{var r;null===(r=o.current)||void 0===r||r.removeEventListener(e,t)}))}))}}),[J,Ve,me,Se,Ae,q,H,M,Te,A,O]),o((()=>{var e,t;let o=null!==(t=null!==(e=null==ye?void 0:ye.anchorSelect)&&void 0!==e?e:p)&&void 0!==t?t:\"\";!o&&r&&(o=`[data-tooltip-id='${r.replace(/'/g,\"\\\\'\")}']`);const l=new MutationObserver((e=>{const t=[],l=[];e.forEach((e=>{if(\"attributes\"===e.type&&\"data-tooltip-id\"===e.attributeName){e.target.getAttribute(\"data-tooltip-id\")===r?t.push(e.target):e.oldValue===r&&l.push(e.target)}if(\"childList\"===e.type){if(J){const t=[...e.removedNodes].filter((e=>1===e.nodeType));if(o)try{l.push(...t.filter((e=>e.matches(o)))),l.push(...t.flatMap((e=>[...e.querySelectorAll(o)])))}catch(e){}t.some((e=>{var t;return!!(null===(t=null==e?void 0:e.contains)||void 0===t?void 0:t.call(e,J))&&(fe(!1),xe(!1),Q(null),ie.current&&clearTimeout(ie.current),se.current&&clearTimeout(se.current),!0)}))}if(o)try{const r=[...e.addedNodes].filter((e=>1===e.nodeType));t.push(...r.filter((e=>e.matches(o)))),t.push(...r.flatMap((e=>[...e.querySelectorAll(o)])))}catch(e){}}})),(t.length||l.length)&&_e((e=>[...e.filter((e=>!l.includes(e))),...t]))}));return l.observe(document.body,{childList:!0,subtree:!0,attributes:!0,attributeFilter:[\"data-tooltip-id\"],attributeOldValue:!0}),()=>{l.disconnect()}}),[r,p,null==ye?void 0:ye.anchorSelect,J]),o((()=>{Ve()}),[Ve]),o((()=>{if(!(null==X?void 0:X.current))return()=>null;const e=new ResizeObserver((()=>{setTimeout((()=>Ve()))}));return e.observe(X.current),()=>{e.disconnect()}}),[U,null==X?void 0:X.current]),o((()=>{var e;const t=document.querySelector(`[id='${d}']`),o=[...Ae,t];J&&o.includes(J)||Q(null!==(e=Ae[0])&&void 0!==e?e:t)}),[d,Ae,J]),o((()=>(G&&xe(!0),()=>{ie.current&&clearTimeout(ie.current),se.current&&clearTimeout(se.current)})),[]),o((()=>{var e;let t=null!==(e=null==ye?void 0:ye.anchorSelect)&&void 0!==e?e:p;if(!t&&r&&(t=`[data-tooltip-id='${r.replace(/'/g,\"\\\\'\")}']`),t)try{const e=Array.from(document.querySelectorAll(t));_e(e)}catch(e){_e([])}}),[r,p,null==ye?void 0:ye.anchorSelect]),o((()=>{ie.current&&(clearTimeout(ie.current),$e(A))}),[A]);const Fe=null!==(le=null==ye?void 0:ye.content)&&void 0!==le?le:U,Ke=pe&&Object.keys(ue.tooltipStyles).length>0;return a(t,(()=>({open:e=>{if(null==e?void 0:e.anchorSelect)try{document.querySelector(e.anchorSelect)}catch(t){return void console.warn(`[react-tooltip] \"${e.anchorSelect}\" is not a valid CSS selector`)}he(null!=e?e:null),(null==e?void 0:e.delay)?$e(e.delay):xe(!0)},close:e=>{(null==e?void 0:e.delay)?Ie(e.delay):xe(!1)},activeAnchor:J,place:ue.place,isOpen:Boolean(me&&!R&&Fe&&Ke)}))),me&&!R&&Fe?e.createElement(g,{id:r,role:re,className:y(\"react-tooltip\",B.tooltip,z.tooltip,z[u],c,`react-tooltip__place-${ue.place}`,B[Ke?\"show\":\"closing\"],Ke?\"react-tooltip__show\":\"react-tooltip__closing\",\"fixed\"===b&&B.fixed,N&&B.clickable),onTransitionEnd:e=>{ae.current&&clearTimeout(ae.current),pe||\"opacity\"!==e.propertyName||(fe(!1),he(null),null==K||K())},style:{...P,...ue.tooltipStyles,opacity:void 0!==te&&Ke?te:void 0},ref:ne},Fe,e.createElement(g,{className:y(\"react-tooltip-arrow\",B.arrow,z.arrow,i,x&&B.noArrow),style:{...ue.tooltipArrowStyles,background:oe?`linear-gradient(to right bottom, transparent 50%, ${oe} 50%)`:void 0},ref:ce})):null},q=({content:t})=>e.createElement(\"span\",{dangerouslySetInnerHTML:{__html:t}}),H=e.forwardRef((({id:t,anchorId:r,anchorSelect:n,content:c,html:i,render:a,className:u,classNameArrow:d,variant:p=\"dark\",place:v=\"top\",offset:m=10,wrapper:f=\"div\",children:h=null,events:w=[\"hover\"],openOnClick:b=!1,positionStrategy:S=\"absolute\",middlewares:g,delayShow:E=0,delayHide:_=0,float:O=!1,hidden:T=!1,noArrow:k=!1,clickable:C=!1,closeOnEsc:L=!1,closeOnScroll:R=!1,closeOnResize:x=!1,openEvents:N,closeEvents:$,globalCloseEvents:j,imperativeModeOnly:B=!1,style:z,position:H,isOpen:M,defaultIsOpen:W=!1,disableStyleInjection:P=!1,border:V,opacity:F,arrowColor:K,setIsOpen:U,afterShow:X,afterHide:Y,role:G=\"tooltip\"},Z)=>{const[J,Q]=l(c),[ee,te]=l(i),[oe,re]=l(v),[le,ne]=l(p),[ce,ie]=l(m),[se,ae]=l(E),[ue,de]=l(_),[pe,ve]=l(O),[me,fe]=l(T),[ye,he]=l(f),[we,be]=l(w),[Se,ge]=l(S),[Ee,Ae]=l(null),[_e,Oe]=l(null),Te=s(P),{anchorRefs:ke,activeAnchor:Ce}=I(t),Le=e=>null==e?void 0:e.getAttributeNames().reduce(((t,o)=>{var r;if(o.startsWith(\"data-tooltip-\")){t[o.replace(/^data-tooltip-/,\"\")]=null!==(r=null==e?void 0:e.getAttribute(o))&&void 0!==r?r:null}return t}),{}),Re=e=>{const t={place:e=>{var t;re(null!==(t=e)&&void 0!==t?t:v)},content:e=>{Q(null!=e?e:c)},html:e=>{te(null!=e?e:i)},variant:e=>{var t;ne(null!==(t=e)&&void 0!==t?t:p)},offset:e=>{ie(null===e?m:Number(e))},wrapper:e=>{var t;he(null!==(t=e)&&void 0!==t?t:f)},events:e=>{const t=null==e?void 0:e.split(\" \");be(null!=t?t:w)},\"position-strategy\":e=>{var t;ge(null!==(t=e)&&void 0!==t?t:S)},\"delay-show\":e=>{ae(null===e?E:Number(e))},\"delay-hide\":e=>{de(null===e?_:Number(e))},float:e=>{ve(null===e?O:\"true\"===e)},hidden:e=>{fe(null===e?T:\"true\"===e)},\"class-name\":e=>{Ae(e)}};Object.values(t).forEach((e=>e(null))),Object.entries(e).forEach((([e,o])=>{var r;null===(r=t[e])||void 0===r||r.call(t,o)}))};o((()=>{Q(c)}),[c]),o((()=>{te(i)}),[i]),o((()=>{re(v)}),[v]),o((()=>{ne(p)}),[p]),o((()=>{ie(m)}),[m]),o((()=>{ae(E)}),[E]),o((()=>{de(_)}),[_]),o((()=>{ve(O)}),[O]),o((()=>{fe(T)}),[T]),o((()=>{ge(S)}),[S]),o((()=>{Te.current!==P&&console.warn(\"[react-tooltip] Do not change `disableStyleInjection` dynamically.\")}),[P]),o((()=>{\"undefined\"!=typeof window&&window.dispatchEvent(new CustomEvent(\"react-tooltip-inject-styles\",{detail:{disableCore:\"core\"===P,disableBase:P}}))}),[]),o((()=>{var e;const o=new Set(ke);let l=n;if(!l&&t&&(l=`[data-tooltip-id='${t.replace(/'/g,\"\\\\'\")}']`),l)try{document.querySelectorAll(l).forEach((e=>{o.add({current:e})}))}catch(e){console.warn(`[react-tooltip] \"${l}\" is not a valid CSS selector`)}const c=document.querySelector(`[id='${r}']`);if(c&&o.add({current:c}),!o.size)return()=>null;const i=null!==(e=null!=_e?_e:c)&&void 0!==e?e:Ce.current,s=new MutationObserver((e=>{e.forEach((e=>{var t;if(!i||\"attributes\"!==e.type||!(null===(t=e.attributeName)||void 0===t?void 0:t.startsWith(\"data-tooltip-\")))return;const o=Le(i);Re(o)}))})),a={attributes:!0,childList:!1,subtree:!1};if(i){const e=Le(i);Re(e),s.observe(i,a)}return()=>{s.disconnect()}}),[ke,Ce,_e,r,n]),o((()=>{(null==z?void 0:z.border)&&console.warn(\"[react-tooltip] Do not set `style.border`. Use `border` prop instead.\"),V&&!A(\"border\",`${V}`)&&console.warn(`[react-tooltip] \"${V}\" is not a valid \\`border\\`.`),(null==z?void 0:z.opacity)&&console.warn(\"[react-tooltip] Do not set `style.opacity`. Use `opacity` prop instead.\"),F&&!A(\"opacity\",`${F}`)&&console.warn(`[react-tooltip] \"${F}\" is not a valid \\`opacity\\`.`)}),[]);let xe=h;const Ne=s(null);if(a){const t=a({content:(null==_e?void 0:_e.getAttribute(\"data-tooltip-content\"))||J||null,activeAnchor:_e});xe=t?e.createElement(\"div\",{ref:Ne,className:\"react-tooltip-content-wrapper\"},t):null}else J&&(xe=J);ee&&(xe=e.createElement(q,{content:ee}));const $e={forwardRef:Z,id:t,anchorId:r,anchorSelect:n,className:y(u,Ee),classNameArrow:d,content:xe,contentWrapperRef:Ne,place:oe,variant:le,offset:ce,wrapper:ye,events:we,openOnClick:b,positionStrategy:Se,middlewares:g,delayShow:se,delayHide:ue,float:pe,hidden:me,noArrow:k,clickable:C,closeOnEsc:L,closeOnScroll:R,closeOnResize:x,openEvents:N,closeEvents:$,globalCloseEvents:j,imperativeModeOnly:B,style:z,position:H,isOpen:M,defaultIsOpen:W,border:V,opacity:F,arrowColor:K,setIsOpen:U,afterShow:X,afterHide:Y,activeAnchor:_e,setActiveAnchor:e=>Oe(e),role:G};return e.createElement(D,{...$e})}));\"undefined\"!=typeof window&&window.addEventListener(\"react-tooltip-inject-styles\",(e=>{e.detail.disableCore||S({css:`:root{--rt-color-white:#fff;--rt-color-dark:#222;--rt-color-success:#8dc572;--rt-color-error:#be6464;--rt-color-warning:#f0ad4e;--rt-color-info:#337ab7;--rt-opacity:0.9;--rt-transition-show-delay:0.15s;--rt-transition-closing-delay:0.15s}.core-styles-module_tooltip__3vRRp{position:absolute;top:0;left:0;pointer-events:none;opacity:0;will-change:opacity}.core-styles-module_fixed__pcSol{position:fixed}.core-styles-module_arrow__cvMwQ{position:absolute;background:inherit}.core-styles-module_noArrow__xock6{display:none}.core-styles-module_clickable__ZuTTB{pointer-events:auto}.core-styles-module_show__Nt9eE{opacity:var(--rt-opacity);transition:opacity var(--rt-transition-show-delay)ease-out}.core-styles-module_closing__sGnxF{opacity:0;transition:opacity var(--rt-transition-closing-delay)ease-in}`,type:\"core\"}),e.detail.disableBase||S({css:`\n.styles-module_tooltip__mnnfp{padding:8px 16px;border-radius:3px;font-size:90%;width:max-content}.styles-module_arrow__K0L3T{width:8px;height:8px}[class*='react-tooltip__place-top']>.styles-module_arrow__K0L3T{transform:rotate(45deg)}[class*='react-tooltip__place-right']>.styles-module_arrow__K0L3T{transform:rotate(135deg)}[class*='react-tooltip__place-bottom']>.styles-module_arrow__K0L3T{transform:rotate(225deg)}[class*='react-tooltip__place-left']>.styles-module_arrow__K0L3T{transform:rotate(315deg)}.styles-module_dark__xNqje{background:var(--rt-color-dark);color:var(--rt-color-white)}.styles-module_light__Z6W-X{background-color:var(--rt-color-white);color:var(--rt-color-dark)}.styles-module_success__A2AKt{background-color:var(--rt-color-success);color:var(--rt-color-white)}.styles-module_warning__SCK0X{background-color:var(--rt-color-warning);color:var(--rt-color-white)}.styles-module_error__JvumD{background-color:var(--rt-color-error);color:var(--rt-color-white)}.styles-module_info__BWdHW{background-color:var(--rt-color-info);color:var(--rt-color-white)}`,type:\"base\"})}));export{H as Tooltip,$ as TooltipProvider,j as TooltipWrapper,g as removeStyle};\n","import { DEFAULT_CRITICAL_COLOR, DEFAULT_OK_COLOR, DEFAULT_WARNING_COLOR } from '../defaults';\nimport React from 'react';\n\nimport { Color } from './color';\n\nexport interface GradientProps {\n  data: any;\n  gradientId: string;\n}\nexport const Gradients: React.FC<GradientProps> = (options) => {\n  const pureLight = new Color(255, 255, 255);\n\n  const createGradients = (data: any): any => {\n    const gradients = [];\n    const pureLight = new Color(255, 255, 255);\n    for (let i = 0; i < data.length; i++) {\n      const aColorStart = new Color(0, 0, 0);\n      // color can be in hex or in rgb\n      let useColor: string = data[i].color;\n      if (useColor.startsWith('rgba')) {\n        useColor = Color.RGBAToHex(useColor);\n      }\n      aColorStart.fromHex(useColor);\n      const aColorEnd = aColorStart.Mul(pureLight, 0.7);\n      gradients.push({ start: aColorStart.asHex(), end: aColorEnd.asHex() });\n    }\n    return gradients;\n  };\n  const colorGradients = createGradients(options.data);\n  const okColorStart = DEFAULT_OK_COLOR; // '#299c46', // \"rgba(50, 172, 45, 1)\", // green\n  const okColorEnd = okColorStart.Mul(pureLight, 0.7);\n  const warningColorStart = DEFAULT_WARNING_COLOR; // #FFC837 // '#e5ac0e', // \"rgba(237, 129, 40, 1)\", // yellow\n  const warningColorEnd = warningColorStart.Mul(pureLight, 0.7);\n  const criticalColorStart = DEFAULT_CRITICAL_COLOR; // #e52d27 // '#bf1b00', // \"rgba(245, 54, 54, 1)\", // red\n  const criticalColorEnd = criticalColorStart.Mul(pureLight, 0.7);\n\n  const gradientId = options.gradientId;\n  return (\n    <>\n      <defs>\n        {colorGradients.map((aGradient: any, index: number) => {\n          return (\n            <linearGradient\n              key={index}\n              id={gradientId + '_linear_gradient_state_data_' + index}\n              x1={'30%'}\n              y1={'30%'}\n              x2={'70%'}\n              y2={'70%'}\n            >\n              <stop offset={'0%'} stopColor={aGradient.start} />\n              <stop offset={'100%'} stopColor={aGradient.end} />\n            </linearGradient>\n          );\n        })}\n        <linearGradient id={gradientId + '_linear_gradient_state_ok'} x1={'30%'} y1={'30%'} x2={'70%'} y2={'70%'}>\n          <stop offset={'0%'} stopColor={okColorStart.asHex()} />\n          <stop offset={'100%'} stopColor={okColorEnd.asHex()} />\n        </linearGradient>\n        <linearGradient id={gradientId + '_linear_gradient_state_warning'} x1={'30%'} y1={'30%'} x2={'70%'} y2={'70%'}>\n          <stop offset={'0%'} stopColor={warningColorStart.asHex()} />\n          <stop offset={'100%'} stopColor={warningColorEnd.asHex()} />\n        </linearGradient>\n        <linearGradient id={gradientId + '_linear_gradient-state_critical'} x1={'30%'} y1={'30%'} x2={'70%'} y2={'70%'}>\n          <stop offset={'0%'} stopColor={criticalColorStart.asHex()} />\n          <stop offset={'100%'} stopColor={criticalColorEnd.asHex()} />\n        </linearGradient>\n        <linearGradient id={gradientId + '_linear_gradient_state_unknown'} x1={'30%'} y1={'30%'} x2={'70%'} y2={'70%'}>\n          <stop offset={'0%'} stopColor={'#73808A'} />\n          <stop offset={'100%'} stopColor={'#73808A'} />\n        </linearGradient>\n      </defs>\n    </>\n  );\n};\n","import * as d3 from 'd3';\nimport { PolygonShapes, PolystatDiameters } from '../types';\nimport { LayoutPoint } from './types';\n/**\n * LayoutManager creates layouts for supported polygon shapes\n */\nexport class LayoutManager {\n  width: number;\n  height: number;\n  numColumns: number;\n  numRows: number;\n  radius: number;\n  autoSize: boolean;\n  maxRowsUsed: number;\n  maxColumnsUsed: number;\n  displayLimit: number;\n  shape: PolygonShapes;\n  readonly SQRT3 = 1.7320508075688772;\n\n  constructor(\n    width: number,\n    height: number,\n    numColumns: number,\n    numRows: number,\n    displayLimit: number,\n    autoSize: boolean,\n    shape: PolygonShapes\n  ) {\n    this.width = width;\n    this.height = height;\n    // check for less than 1 or NaN, force to 8\n    if (numColumns < 1 || isNaN(numColumns)) {\n      this.numColumns = 8;\n    } else {\n      this.numColumns = numColumns;\n    }\n    // check for less than 1 or NaN, force to 8\n    if (numRows < 1 || isNaN(numRows)) {\n      this.numRows = 8;\n    } else {\n      this.numRows = numRows;\n    }\n\n    this.maxColumnsUsed = 0;\n    this.maxRowsUsed = 0;\n\n    // negative or NaN limit gets set to 100, 0 is allowed for unlimited\n    if (displayLimit < 0 || isNaN(displayLimit)) {\n      this.displayLimit = 100;\n    } else {\n      this.displayLimit = displayLimit;\n    }\n    this.shape = shape;\n    this.radius = 0;\n    this.autoSize = autoSize;\n  }\n\n  /**\n   * Sets the radius to be used in all layout calculations\n   *\n   * @param radius user defined value\n   */\n  setRadius(radius: number) {\n    this.radius = radius;\n  }\n  setHeight(height: number) {\n    this.height = height;\n  }\n  setWidth(width: number) {\n    this.width = width;\n  }\n  /**\n   * returns a layout for hexagons with pointed tops\n   */\n  generateHexagonPointedTopLayout(): any {\n    const layout = {};\n    this.radius = this.getHexFlatTopRadius();\n    return layout;\n  }\n\n  /**\n   * returns a layout for square-shapes\n   */\n  generateUniformLayout(): any {\n    const layout = {};\n    this.radius = this.getUniformRadius();\n    return layout;\n  }\n\n  /**\n   * The maximum radius the hexagons can have to still fit the screen\n   * With (long) radius being R:\n   *  - Total width (rows > 1) = 1 small radius (sqrt(3) * R / 2) + columns * small diameter (sqrt(3) * R)\n   *  - Total height = 1 pointy top (1/2 * R) + rows * size of the rest (3/2 * R)\n   */\n  getHexFlatTopRadius(): number {\n    const polygonBorderSize = 0; // TODO: borderRadius should be configurable and part of the config\n    let hexRadius = d3.min([\n      this.width / ((this.numColumns + 0.5) * this.SQRT3),\n      this.height / ((this.numRows + 1 / 3) * 1.5),\n    ]);\n    if (hexRadius !== undefined) {\n      hexRadius = hexRadius - polygonBorderSize;\n      return this.truncateFloat(hexRadius);\n    }\n    // default to a reasonable value (should not happen though)\n    return 40;\n  }\n\n  /**\n   * Helper method to return rendered width and height of hexagon shape\n   */\n  getHexFlatTopDiameters(): PolystatDiameters {\n    const hexRadius = this.getHexFlatTopRadius();\n    const diameterX = this.truncateFloat(hexRadius * this.SQRT3);\n    const diameterY = this.truncateFloat(hexRadius * 2);\n    return { diameterX, diameterY };\n  }\n\n  /**\n   * Helper method to return rendered width and height of a circle/square shapes\n   */\n  getUniformDiameters(): PolystatDiameters {\n    const radius = this.getUniformRadius();\n    const diameterX = radius * 2;\n    const diameterY = radius * 2;\n    return { diameterX, diameterY };\n  }\n  /**\n   * Given the number of columns and rows, calculate the maximum size of a uniform shaped polygon that can be used\n   *   uniformed shapes are: square/circle\n   * width divided by the number of columns determines the max horizontal of the square\n   * height divided by the number of rows determines the max vertical size of the square\n   * the smaller of the two is used since that is the \"best fit\" for a square\n   */\n  getUniformRadius(): number {\n    const polygonBorderSize = 0; // TODO: borderRadius should be configurable and part of the config\n    // width divided by the number of columns determines the max horizontal of the square\n    // height divided by the number of rows determines the max vertical size of the square\n    // the smaller of the two is used since that is the \"best fit\"\n    const horizontalMax = (this.width / this.maxColumnsUsed) * 0.5;\n    const verticalMax = (this.height / this.maxRowsUsed) * 0.5;\n    let uniformRadius = horizontalMax;\n    if (uniformRadius > verticalMax) {\n      // vertically limited\n      uniformRadius = verticalMax;\n    }\n    // internal border\n    uniformRadius = uniformRadius - polygonBorderSize;\n    return this.truncateFloat(uniformRadius);\n  }\n\n  generatePossibleColumnAndRowsSizes(columnAutoSize: boolean, rowAutoSize: boolean, dataSize: number) {\n    if (rowAutoSize && columnAutoSize) {\n      // sqrt of # data items\n      const squared = Math.sqrt(dataSize);\n      // favor columns when width is greater than height\n      // favor rows when width is less than height\n      if (this.width > this.height) {\n        this.numColumns = Math.ceil((this.width / this.height) * squared * 0.75);\n        // always at least 1 column and max. data.length columns\n        if (this.numColumns < 1) {\n          this.numColumns = 1;\n        } else if (this.numColumns > dataSize) {\n          this.numColumns = dataSize;\n        }\n\n        // Align rows count to computed columns count\n        this.numRows = Math.ceil(dataSize / this.numColumns);\n        // always at least 1 row\n        if (this.numRows < 1) {\n          this.numRows = 1;\n        }\n      } else {\n        this.numRows = Math.ceil((this.height / this.width) * squared * 0.75);\n        // always at least 1 row and max. data.length rows\n        if (this.numRows < 1) {\n          this.numRows = 1;\n        } else if (this.numRows > dataSize) {\n          this.numRows = dataSize;\n        }\n        // Align columns count to computed rows count\n        this.numColumns = Math.ceil(dataSize / this.numRows);\n        // always at least 1 column\n        if (this.numColumns < 1) {\n          this.numColumns = 1;\n        }\n      }\n    } else if (rowAutoSize) {\n      // Align rows count to fixed columns count\n      this.numRows = Math.ceil(dataSize / this.numColumns);\n      // always at least 1 row\n      if (this.numRows < 1) {\n        this.numRows = 1;\n      }\n    } else if (columnAutoSize) {\n      // Align columns count to fixed rows count\n      this.numColumns = Math.ceil(dataSize / this.numRows);\n      // always at least 1 column\n      if (this.numColumns < 1) {\n        this.numColumns = 1;\n      }\n    }\n  }\n\n  /**\n   * This determines how many rows and columns are going to be rendered, which can then\n   * be used to calculate the radius size (which is needed before generating points)\n   * @param data metrics\n   * @param displayLimit max number of polygons to show\n   */\n  generateActualColumnAndRowUsage(data: any, displayLimit: number) {\n    let polygonsUsed = 0;\n    let maxRowsUsed = 0;\n    let columnsUsed = 0;\n    let maxColumnsUsed = 0;\n    for (let i = 0; i < this.numRows; i++) {\n      if ((!displayLimit || polygonsUsed < displayLimit) && polygonsUsed < data.length) {\n        maxRowsUsed += 1;\n        columnsUsed = 0;\n        for (let j = 0; j < this.numColumns; j++) {\n          if ((!displayLimit || polygonsUsed < displayLimit) && polygonsUsed < data.length) {\n            columnsUsed += 1;\n            // track the most number of columns\n            if (columnsUsed > maxColumnsUsed) {\n              maxColumnsUsed = columnsUsed;\n            }\n            polygonsUsed++;\n          }\n        }\n      }\n    }\n    this.maxRowsUsed = maxRowsUsed;\n    this.maxColumnsUsed = maxColumnsUsed;\n  }\n\n  shapeToCoordinates(shape: PolygonShapes, radius: number, column: number, row: number) {\n    switch (shape) {\n      case PolygonShapes.HEXAGON_POINTED_TOP:\n        let x = radius * column * this.SQRT3;\n        //Offset each uneven row by half of a \"hex-width\" to the right\n        if (row % 2 === 1) {\n          x += (radius * this.SQRT3) / 2;\n        }\n        const y = radius * row * 1.5;\n        return [x, y];\n      case PolygonShapes.CIRCLE:\n        return [radius * column * 2, radius * row * 2];\n      case PolygonShapes.SQUARE:\n        return [radius * column * 2, radius * row * 2];\n      default:\n        return [radius * column * 1.75, radius * row * 1.5];\n    }\n  }\n\n  // Builds the placeholder polygons needed to represent each metric\n  generatePoints(data: any, displayLimit: number, shape: PolygonShapes): LayoutPoint[] {\n    const points: LayoutPoint[] = [];\n    if (typeof data === 'undefined') {\n      return points;\n    }\n    let maxRowsUsed = 0;\n    let columnsUsed = 0;\n    let maxColumnsUsed = 0;\n    // when duplicating panels, this gets odd\n    if (this.numRows === Infinity) {\n      return points;\n    }\n    if (isNaN(this.numColumns)) {\n      return points;\n    }\n    for (let i = 0; i < this.numRows; i++) {\n      if ((!displayLimit || points.length < displayLimit) && points.length < data.length) {\n        maxRowsUsed += 1;\n        columnsUsed = 0;\n        for (let j = 0; j < this.numColumns; j++) {\n          if ((!displayLimit || points.length < displayLimit) && points.length < data.length) {\n            columnsUsed += 1;\n            // track the most number of columns\n            if (columnsUsed > maxColumnsUsed) {\n              maxColumnsUsed = columnsUsed;\n            }\n            let coords = this.shapeToCoordinates(shape, this.radius, j, i);\n            const aPoint: LayoutPoint = {\n              x: coords[0],\n              y: coords[1],\n            }\n            points.push(aPoint);\n          }\n        }\n      }\n    }\n    this.maxRowsUsed = maxRowsUsed;\n    this.maxColumnsUsed = maxColumnsUsed;\n    return points;\n  }\n\n  generateUniformPoints(data: any, displayLimit: number): any {\n    const points = [] as any;\n    if (typeof data === 'undefined') {\n      return points;\n    }\n    let maxRowsUsed = 0;\n    let columnsUsed = 0;\n    let maxColumnsUsed = 0;\n    let xPos = 1;\n    let yPos = 1;\n\n    // when duplicating panels, this gets odd\n    if (this.numRows === Infinity) {\n      return points;\n    }\n    if (isNaN(this.numColumns)) {\n      return points;\n    }\n    for (let i = 0; i < this.numRows; i++) {\n      if ((!displayLimit || points.length < displayLimit) && points.length < data.length) {\n        maxRowsUsed += 1;\n        columnsUsed = 0;\n        for (let j = 0; j < this.numColumns; j++) {\n          if ((!displayLimit || points.length < displayLimit) && points.length < data.length) {\n            columnsUsed += 1;\n            // track the most number of columns\n            if (columnsUsed > maxColumnsUsed) {\n              maxColumnsUsed = columnsUsed;\n            }\n            points.push({\n              x: xPos,\n              y: yPos,\n              width: this.radius * 2,\n              height: this.radius * 2,\n            });\n            xPos += this.radius * 2;\n          }\n        }\n        xPos = 1;\n        yPos += this.radius * 2;\n      }\n    }\n    this.maxRowsUsed = maxRowsUsed;\n    this.maxColumnsUsed = maxColumnsUsed;\n    return points;\n  }\n\n  generateRadius(shape: PolygonShapes): number {\n    if (!this.autoSize) {\n      return this.radius;\n    }\n    let radius = 0;\n    switch (shape) {\n      case PolygonShapes.HEXAGON_POINTED_TOP:\n        radius = this.getHexFlatTopRadius();\n        break;\n      case PolygonShapes.CIRCLE:\n        radius = this.getUniformRadius();\n        break;\n      case PolygonShapes.SQUARE:\n        radius = this.getUniformRadius();\n        break;\n      default:\n        radius = this.getHexFlatTopRadius();\n        break;\n    }\n    this.radius = radius;\n    return radius;\n  }\n\n  truncateFloat(value: number): number {\n    if (value === Infinity || isNaN(value)) {\n      return 0;\n    }\n    const matches = value.toString().match(/^-?\\d+(?:\\.\\d{0,2})?/);\n    if (matches !== null && matches.length > 0) {\n      return Number(matches[0]);\n    }\n    return 0;\n  }\n\n  getOffsets(shape: PolygonShapes, dataSize: number): any {\n    switch (shape) {\n      case PolygonShapes.HEXAGON_POINTED_TOP:\n        return this.getOffsetsHexagonPointedTop(dataSize);\n      case PolygonShapes.SQUARE:\n        return this.getOffsetsSquare(dataSize);\n      case PolygonShapes.CIRCLE:\n        return this.getOffsetsUniform(dataSize);\n      default:\n        return this.getOffsetsUniform(dataSize);\n    }\n  }\n\n  getOffsetsHexagonPointedTop(dataSize: number): any {\n    let hexRadius = d3.min([\n      this.width / ((this.numColumns + 0.5) * this.SQRT3),\n      this.height / ((this.numRows + 1 / 3) * 1.5),\n    ]);\n    hexRadius = this.truncateFloat(hexRadius as number);\n    const shapeWidth = this.truncateFloat(hexRadius * this.SQRT3);\n    const shapeHeight = this.truncateFloat(hexRadius * 2);\n\n    const offsetToViewY = shapeHeight * 0.5;\n    // even rows are half-sized\n    const { oddCount, evenCount } = this.getOddEvenCountForRange(1, this.maxRowsUsed);\n    // odd-numbered hexagons are full height, evens are half height\n    const actualHeightUsed = oddCount * shapeHeight + evenCount * shapeHeight * 0.5;\n    let yoffset = (this.height - actualHeightUsed) / 2;\n    yoffset = -(yoffset + offsetToViewY);\n\n    const offsetToViewX = shapeWidth * 0.5;\n    // columns have a half-width offset if there are more than 1 rows\n    let widthOffset = 0;\n    if (this.numRows > 1) {\n      // if the dataSize is equal to or larger than the 2*Columns, there is an additional offset needed\n      if (dataSize >= this.maxColumnsUsed * 2) {\n        widthOffset = 0.5;\n      }\n    }\n    const actualWidthUsed = (this.numColumns + widthOffset) * shapeWidth;\n    let xoffset = (this.width - actualWidthUsed) / 2;\n    xoffset = -(xoffset + offsetToViewX);\n    return { xoffset, yoffset };\n  }\n\n  getOffsetsUniform(dataSize: number): any {\n    const { diameterX, diameterY } = this.getDiameters();\n    const shapeWidth = this.truncateFloat(diameterX);\n    const shapeHeight = this.truncateFloat(diameterY);\n    const offsetToViewY = shapeHeight * 0.5;\n    const actualHeightUsed = this.maxRowsUsed * shapeHeight;\n    let yoffset = (this.height - actualHeightUsed) / 2;\n    yoffset = -(yoffset + offsetToViewY);\n    const offsetToViewX = shapeWidth * 0.5;\n    const actualWidthUsed = this.numColumns * shapeWidth;\n    let xoffset = (this.width - actualWidthUsed) / 2;\n    xoffset = -(xoffset + offsetToViewX);\n    return { xoffset, yoffset };\n  }\n\n  getOffsetsSquare(dataSize: number): any {\n    const { diameterX, diameterY } = this.getDiameters();\n    const shapeWidth = this.truncateFloat(diameterX);\n    const shapeHeight = this.truncateFloat(diameterY);\n    const offsetToViewY = 0; // shapeHeight * 0.5;\n    const actualHeightUsed = this.maxRowsUsed * shapeHeight;\n    let yoffset = (this.height - actualHeightUsed) / 2;\n    yoffset = -(yoffset + offsetToViewY);\n    const offsetToViewX = 0; //shapeWidth * 0.5;\n    const actualWidthUsed = this.numColumns * shapeWidth;\n    let xoffset = (this.width - actualWidthUsed) / 2;\n    xoffset = -(xoffset + offsetToViewX);\n    return { xoffset, yoffset };\n  }\n\n  getOddEvenCountForRange(L: number, R: number): any {\n    let oddCount = (R - L) / 2;\n    // if either R or L is odd\n    if (R % 2 !== 0 || L % 2 !== 0) {\n      oddCount++;\n    }\n    const evenCount = R - L + 1 - oddCount;\n    return { oddCount, evenCount };\n  }\n\n  /**\n   * Returns diameterX and diameterY for given shape\n   */\n  getDiameters(): PolystatDiameters {\n    switch (this.shape) {\n      case PolygonShapes.HEXAGON_POINTED_TOP:\n        return this.getHexFlatTopDiameters();\n      case PolygonShapes.SQUARE:\n        return this.getUniformDiameters();\n      case PolygonShapes.CIRCLE:\n        return this.getUniformDiameters();\n      default:\n        return this.getUniformDiameters();\n    }\n  }\n}\n","import { GrafanaTheme2 } from '@grafana/data';\nimport { css } from '@emotion/css';\n\nexport const getErrorMessageStyles = (theme: GrafanaTheme2) => css`\n  font-size: ${theme.typography.h1.fontSize};\n  text-align: center;\n  justify-content: center;\n  color: ${theme.colors.error.shade};\n`;\n\nexport const getNoTriggerTextStyles = (theme: GrafanaTheme2) => css`\n  font-size: ${theme.typography.h1.fontSize};\n  text-align: center;\n  justify-content: center;\n  color: ${theme.colors.success.shade};\n`;\n\nexport const getWrapperStyles = (theme: GrafanaTheme2) => css`\n  fill: transparent;\n  display: flex;\n  align-items: center;\n  text-align: center;\n  justify-content: center;\n`;\n\nexport const getSVGStyles = (theme: GrafanaTheme2) => css`\n  text-align: center;\n  align-items: center;\n  justify-content: center;\n  fill: transparent;\n`;\n\nexport const getSVGPathStyles = (theme: GrafanaTheme2) => css`\n  outline: none !important;\n`;\n","import React from 'react';\nimport { css } from '@emotion/css';\nimport { orderBy as lodashOrderBy } from 'lodash';\nimport { useStyles2 } from '@grafana/ui';\nimport { GrafanaTheme2, dateTimeFormatWithAbbrevation } from '@grafana/data';\nimport { PolystatModel, SortOptions } from '../types';\n\nexport interface TooltipProps {\n  data: PolystatModel | undefined;\n  valueEnabled: boolean;\n  tooltipColumnHeadersEnabled: boolean;\n  renderTime: Date;\n  showTime: boolean;\n  primarySortByField: string;\n  primarySortDirection: number;\n  secondarySortByField: string;\n  secondarySortDirection: number;\n  displayMode: string;\n  tooltipDisplayTextTriggeredEmpty: string;\n  tooltipFontFamily: string;\n}\n\nexport const Tooltip = ({\n  data,\n  renderTime,\n  showTime,\n  valueEnabled,\n  tooltipColumnHeadersEnabled,\n  primarySortByField,\n  primarySortDirection,\n  secondarySortByField,\n  secondarySortDirection,\n  displayMode,\n  tooltipDisplayTextTriggeredEmpty,\n  tooltipFontFamily,\n}: TooltipProps) => {\n  const styles = useStyles2(getTooltipStyles);\n\n  // check for timestamp in data, override renderTime when present\n  if (data?.timestamp) {\n    renderTime = new Date(data?.timestamp);\n  }\n  /* the name of the composite is shown at the top */\n  const getCompositeHeader = (data: PolystatModel | null) => {\n    if (data && data.members && data.members.length === 0) {\n      return '';\n    }\n    return (\n      <tr>\n        <th className={styles.tooltipCompositeHeading} colSpan={2}>\n          {data?.displayName}\n        </th>\n      </tr>\n    );\n  };\n\n  const multiSort = (\n    data: PolystatModel,\n    primarySortDirection: number,\n    primarySortByField: string,\n    secondarySortDirection: number,\n    secondarySortByField: string\n  ) => {\n    let sortSettings = getSortDirection(SortOptions[primarySortDirection].value);\n    const pUseLowercase = sortSettings.lowerCase;\n    const pDirection = sortSettings.direction as any;\n    sortSettings = getSortDirection(SortOptions[secondarySortDirection].value);\n    const sDirection = sortSettings.direction as any;\n    const sUseLowercase = sortSettings.lowerCase;\n\n    let pSortFunction = primarySortByField as any;\n    if (pUseLowercase) {\n      pSortFunction = (item: any) => {\n        let val = item[primarySortByField];\n        if (typeof val !== 'number') {\n          val = val.toLowerCase();\n        }\n        return val;\n      };\n    }\n    let sSortFunction = secondarySortByField as any;\n    if (sUseLowercase) {\n      sSortFunction = (item: any) => {\n        let val = item[secondarySortByField];\n        if (typeof val !== 'number') {\n          val = val.toLowerCase();\n        }\n        return val;\n      };\n    }\n    return lodashOrderBy(data.members, [pSortFunction, sSortFunction], [pDirection, sDirection]);\n  };\n\n  const getTriggeredCount = (data: PolystatModel) => {\n    let triggered = 0;\n    if (data.thresholdLevel !== 0) {\n      triggered++;\n    }\n    for (let j = 0; j < data.members.length; j++) {\n      if (data.members[j].thresholdLevel !== 0) {\n        triggered++;\n      }\n    }\n    return triggered;\n  };\n\n  const filterTriggered = (items: PolystatModel) => {\n    const triggerCount = getTriggeredCount(items);\n    // clone model\n    const compositeWithTriggeredItemsOnly = Object.assign({}, items);\n    // start with no triggered members\n    compositeWithTriggeredItemsOnly.members = [];\n    if (triggerCount > 0) {\n      for (let i = 0; i < items.members.length; i++) {\n        // non-OK (state 0) members will be appended to the cloned model\n        if (items.members[i].thresholdLevel !== 0) {\n          compositeWithTriggeredItemsOnly.members.push(items.members[i]);\n        }\n      }\n      return compositeWithTriggeredItemsOnly;\n    } else {\n      return null;\n    }\n  };\n\n  const getCompositeMetrics = (data: PolystatModel | null) => {\n    let dataToSort = data;\n    if (dataToSort && data && displayMode === 'triggered') {\n      dataToSort = filterTriggered(data);\n    }\n    if (dataToSort === null) {\n      return <>{tooltipDisplayTextTriggeredEmpty}</>;\n    }\n    const sortedMembers = multiSort(\n      dataToSort,\n      primarySortDirection,\n      primarySortByField,\n      secondarySortDirection,\n      secondarySortByField\n    );\n    return sortedMembers.map((item: PolystatModel, index: number) => {\n      return (\n        <tr key={index} style={{ color: item.color }}>\n          <td className={styles.tooltipName}>{item.displayName}</td>\n          {valueEnabled && <td className={styles.tooltipValue}>{item.valueFormatted}</td>}\n        </tr>\n      );\n    });\n  };\n\n  const generateContent = () => {\n    return (\n      <table style={{ fontFamily: tooltipFontFamily }} className={styles.tooltipTable}>\n        <thead>\n          {data && data.isComposite && getCompositeHeader(data)}\n          <tr>\n            {tooltipColumnHeadersEnabled && <th className={styles.tooltipNameHeading}>Name</th>}\n            {tooltipColumnHeadersEnabled && valueEnabled && <th className={styles.tooltipValueHeading}>Value</th>}\n          </tr>\n        </thead>\n        <tfoot>\n          {showTime && (\n            <tr>\n              <td className={styles.tooltipTime} colSpan={2}>\n                {dateTimeFormatWithAbbrevation(renderTime)}\n              </td>\n            </tr>\n          )}\n        </tfoot>\n        <tbody>\n          {data && data.isComposite ? (\n            getCompositeMetrics(data)\n          ) : (\n            <tr style={{ color: data?.color }}>\n              <td className={styles.tooltipName}>{data?.displayName}</td>\n              {valueEnabled && <td className={styles.tooltipValue}>{data?.valueFormatted}</td>}\n            </tr>\n          )}\n        </tbody>\n      </table>\n    );\n  };\n\n  // Generate content\n  return generateContent();\n};\n\nconst getTooltipStyles = (theme: GrafanaTheme2) => {\n  return {\n    root: css`\n      border-radius: ${theme.shape.borderRadius(1)};\n      background-color: ${theme.colors.background.primary};\n      box-shadow: ${theme.shadows.z2};\n      padding: ${theme.spacing(1)};\n    `,\n    tooltipTable: css`\n      width: 100%;\n      color: ${theme.colors.text.primary};\n      height: auto;\n      padding: 10px;\n    `,\n    tooltipTime: css`\n      text-align: center;\n      color: ${theme.colors.text.primary};\n    `,\n    tooltipNameHeading: css`\n      text-align: left;\n      color: ${theme.colors.text.primary};\n    `,\n    tooltipValueHeading: css`\n      text-align: right;\n      color: ${theme.colors.text.primary};\n    `,\n    tooltipCompositeHeading: css`\n      text-align: center;\n      color: ${theme.colors.text.primary};\n    `,\n    tooltipName: css`\n      text-align: left;\n    `,\n    tooltipValue: css`\n      text-align: right;\n      padding-left: 15px;\n    `,\n  };\n};\n\nconst getSortDirection = (val: number) => {\n  switch (val) {\n    case 0:\n      return { direction: null, lowerCase: false };\n    case 1:\n      return { direction: 'asc', lowerCase: false };\n    case 2:\n      return { direction: 'desc', lowerCase: false };\n    case 3:\n      return { direction: 'asc', lowerCase: false };\n    case 4:\n      return { direction: 'desc', lowerCase: false };\n    case 5:\n      return { direction: 'asc', lowerCase: true };\n    case 6:\n      return { direction: 'desc', lowerCase: true };\n    default:\n      return { direction: 'asc', lowerCase: false };\n  }\n};\n","import { sortBy as lodashSortBy, toLower as lodashToLower, isNumber as lodashIsNumber } from 'lodash';\n\nfunction GetDecimalsForValue(value: any, panelDecimals: any): { decimals: number; scaledDecimals: any } {\n  if (lodashIsNumber(panelDecimals)) {\n    return { decimals: panelDecimals, scaledDecimals: null };\n  }\n\n  const delta = value / 2;\n  let dec = -Math.floor(Math.log(delta) / Math.LN10);\n\n  const magn = Math.pow(10, -dec);\n  const norm = delta / magn; // norm is between 1.0 and 10.0\n  let size;\n\n  if (norm < 1.5) {\n    size = 1;\n  } else if (norm < 3) {\n    size = 2;\n    // special case for 2.5, requires an extra decimal\n    if (norm > 2.25) {\n      size = 2.5;\n      ++dec;\n    }\n  } else if (norm < 7.5) {\n    size = 5;\n  } else {\n    size = 10;\n  }\n\n  size *= magn;\n\n  // reduce starting decimals if not needed\n  if (Math.floor(value) === value) {\n    dec = 0;\n  }\n\n  const result = {\n    decimals: 0,\n    scaledDecimals: 0,\n  };\n  result.decimals = Math.max(0, dec);\n  result.scaledDecimals = result.decimals - Math.floor(Math.log(size) / Math.LN10) + 2;\n  return result;\n}\n\n/**\n * Find the largest font size (in pixels) that allows the string to fit in the given width.\n *\n * @param {String} text The text to be rendered.\n * @param {String} font The css font descriptor that text is to be rendered with (e.g. \"bold ?px verdana\")\n *                      -- note the use of ? in place of the font size.\n * @param {number} width width in pixels the string must fit in\n * @param {number} minFontPx the smallest acceptable font size in pixels\n * @param {number} maxFontPx the largest acceptable font size in pixels\n */\nfunction getTextSizeForWidth(text: string, font: any, width: number, minFontPx: number, maxFontPx: number) {\n  let s = font.replace('?', maxFontPx);\n  let w = getTextWidth(text, s);\n  if (w <= width) {\n    return maxFontPx;\n  }\n  // pad width by 10px\n  width = width - 20;\n  // start from large to small, return 0 for no-fit\n  for (let fontSize = maxFontPx; fontSize >= minFontPx; fontSize--) {\n    s = font.replace('?', fontSize);\n    w = getTextWidth(text, s);\n    if (w < width) {\n      return Math.ceil(fontSize);\n    }\n  }\n  // 0 if no fit\n  return 0;\n}\n\n/**\n * Find the largest font size (in pixels) that allows the string to fit in the given width.\n *\n * @param {String} text The text to be rendered.\n * @param {String} font The css font descriptor that text is to be rendered with (e.g. \"bold ?px verdana\")\n *                      -- note the use of ? in place of the font size.\n * @param {number} width the width in pixels the string must fit in\n * @param {number} height the height in pixels\n * @param {number} minFontPx the smallest acceptable font size in pixels\n * @param {number} maxFontPx the largest acceptable font size in pixels\n */\nfunction getTextSizeForWidthAndHeight(\n  text: string,\n  font: any,\n  width: number,\n  height: number,\n  minFontPx: number,\n  maxFontPx: number\n) {\n  let s = font.replace('?', maxFontPx);\n  let w = getTextWidth(text, s);\n  // need to pad the width: use 80% of the space (leave 10% padding on each side)\n  width = width * 0.95;\n  if (w <= width && maxFontPx <= height) {\n    return maxFontPx;\n  }\n  // start from large to small, return 0 for no-fit\n  for (let fontSize = maxFontPx; fontSize >= minFontPx; fontSize--) {\n    s = font.replace('?', fontSize);\n    w = getTextWidth(text, s);\n    // has to fit within the width of the text area, and not exceed the height\n    if (w < width && fontSize <= height) {\n      return Math.ceil(fontSize);\n    }\n  }\n  // 0 if no fit\n  return 0;\n}\n\n/**\n * Uses canvas.measureText to compute and return the width of the given text of given font in pixels.\n *\n * @param {String} text The text to be rendered.\n * @param {String} font The css font descriptor that text is to be rendered with (e.g. \"bold 14px verdana\").\n *\n * @see https://stackoverflow.com/questions/118241/calculate-text-width-with-javascript/21015393#21015393\n */\nfunction getTextWidth(text: string, font: string) {\n  // re-use canvas object for better performance\n  // intentional use of deprecated function (no widely implemented alternative)\n  // eslint-disable-next-line deprecation/deprecation\n  const canvas = document.createElement('canvas');\n  const context = canvas.getContext('2d');\n  if (context) {\n    context.font = font;\n    const metrics = context.measureText(text);\n    return metrics.width;\n  }\n  return 40; // unknown due to context failure\n}\n\nfunction RGBToHex(text: string) {\n  // check if in rgb notation\n  if (!text.startsWith('rgb')) {\n    return text;\n  }\n  let hex = '#FFFFFF';\n  try {\n    const a = text.split('(')[1].split(')')[0];\n    const b = a.split(',');\n    const c = b.map((x) => {\n      // For each array element\n      x = parseInt(x, 10).toString(16); // Convert to a base16 string\n      return x.length === 1 ? '0' + x : x; // Add zero if we get only one character\n    });\n    hex = '#' + c.join('');\n  } catch (e) {\n    return hex;\n  }\n  return hex;\n}\n\nfunction getTextOrValue(o: any) {\n  if (isNaN(o)) {\n    return o;\n  } else {\n    return Number(o);\n  }\n}\n\nfunction SortVariableValuesByField(options: any, sortField: string, sortOrder: number) {\n  if (sortOrder === 0) {\n    return options;\n  }\n  const sortType = Math.ceil(sortOrder / 2);\n  const reverseSort = sortOrder % 2 === 0;\n\n  switch (sortType) {\n    case 1: // Alphabetical Case Sensitive\n      options = lodashSortBy(options, sortField);\n      break;\n    case 2: // Numerical with sub-match\n      options = lodashSortBy(options, (item) => {\n        // if the content of the field to sort by is textual, check if there is a numerical area to sort by\n        if (isNaN(item[sortField])) {\n          const matchField = item[sortField];\n          const matches = matchField.match(/.*?(\\d+).*/);\n          if (!matches || matches.length < 2) {\n            return -1;\n          } else {\n            return parseInt(matches[1], 10);\n          }\n        } else {\n          return getTextOrValue(item[sortField]);\n        }\n      });\n      break;\n    case 3: // Alphabetical Case Insensitive\n      options = lodashSortBy(options, (item) => {\n        const itemContent = item[sortField];\n        if (isNaN(itemContent)) {\n          return lodashToLower(item[sortField]);\n        } else {\n          return itemContent;\n        }\n      });\n      break;\n    case 4: // Natural Sort\n      const collator = new Intl.Collator(undefined, { numeric: true, sensitivity: 'base' });\n      options = options.slice(); // Shallow clone original array\n      options.sort((a: any, b: any) => {\n        return collator.compare(a[sortField], b[sortField]);\n      });\n      break;\n  }\n\n  if (reverseSort) {\n    options = options.reverse();\n  }\n\n  return options;\n}\n\nconst roundValue = (num: number, decimals: number): number | null => {\n  if (num === null) {\n    return null;\n  }\n  const n = Math.pow(10, decimals);\n  const formatted = (n * num).toFixed(decimals);\n  return Math.round(parseFloat(formatted)) / n;\n};\n\nexport {\n  GetDecimalsForValue,\n  getTextSizeForWidth,\n  getTextSizeForWidthAndHeight,\n  getTextWidth,\n  RGBToHex,\n  SortVariableValuesByField,\n  getTextOrValue,\n  roundValue\n};\n","import { PolystatModel } from \"./types\";\nimport { getTextSizeForWidthAndHeight } from '../utils';\n\n\nexport const AutoFontScalar = (\n  fontFamily: string,\n  textAreaWidth: number,\n  textAreaHeight: number,\n  valueEnabled: boolean,\n  showTimestamp: boolean,\n  data: PolystatModel[]\n) => {\n  // TODO: 6 is VERY small, perhaps 10 as a min?\n  // A hint from the config could be used (max characters)\n  const minFont = 6;\n  const maxFont = 240;\n  // this ensures we have space between label and value\n  const maxLinesToDisplay = 2;\n  let showEllipses = false;\n  // number of characters to show on polygon\n  let numOfChars = 0;\n\n  // find the most text that will be displayed over all items\n  // displayName will have the \"processed\" name with Global Regex applied\n  let maxLabel = getMaxLabel(data);\n  // estimate how big of a font can be used\n  // Two lines of text must fit with vertical spacing included\n  // if it is too small, hide everything\n  let activeLabelFontSize = computeTextFontSize(\n    maxLabel,\n    fontFamily,\n    minFont,\n    maxFont,\n    maxLinesToDisplay,\n    textAreaWidth,\n    textAreaHeight\n  );\n  if (activeLabelFontSize < minFont) {\n    showEllipses = true;\n    numOfChars = 18;\n    maxLabel = maxLabel.substring(0, numOfChars + 2);\n    activeLabelFontSize = computeTextFontSize(\n      maxLabel,\n      fontFamily,\n      minFont,\n      maxFont,\n      maxLinesToDisplay,\n      textAreaWidth,\n      textAreaHeight\n    );\n    if (activeLabelFontSize < minFont) {\n      numOfChars = 10;\n      maxLabel = maxLabel.substring(0, numOfChars + 2);\n      activeLabelFontSize = computeTextFontSize(\n        maxLabel,\n        fontFamily,\n        minFont,\n        maxFont,\n        maxLinesToDisplay,\n        textAreaWidth,\n        textAreaHeight\n      );\n      if (activeLabelFontSize < minFont) {\n        numOfChars = 6;\n        maxLabel = maxLabel.substring(0, numOfChars + 2);\n        activeLabelFontSize = computeTextFontSize(\n          maxLabel,\n          fontFamily,\n          minFont,\n          maxFont,\n          maxLinesToDisplay,\n          textAreaWidth,\n          textAreaHeight\n        );\n      }\n    }\n  }\n\n  // same for the value and timestamp option, also check for sub metrics size in case of composite\n  let {maxValue, maxTimestamp} = getMaxValueAndTimestamp(data);\n  // assume no timestamp\n  let activeValueFontSize = computeTextFontSize(\n    maxValue,\n    fontFamily,\n    minFont,\n    maxFont,\n    maxLinesToDisplay,\n    textAreaWidth,\n    textAreaHeight\n  );\n  if (showTimestamp) {\n    // two lines to be displayed, sharing half of the normal space for the value\n    activeValueFontSize = computeTextFontSize(\n      maxValue,\n      fontFamily,\n      minFont,\n      maxFont,\n      2,\n      textAreaWidth,\n      (textAreaHeight * 0.67)\n    );\n  }\n  // timestamp shares the same space as the value, but is always smaller\n  let activeTimestampFontSize = computeTextFontSize(\n    maxTimestamp,\n    fontFamily,\n    minFont,\n    maxFont,\n    2,\n    textAreaWidth,\n    (textAreaHeight * 0.33)\n  );\n\n  if (activeTimestampFontSize < minFont) {\n    // do not render it, too small\n    activeTimestampFontSize = 0;\n  }\n\n  // NOTE: allow different sizes, the value could be displayed larger than the label\n  // value should never be larger than the label\n  //if (activeValueFontSize > activeLabelFontSize) {\n  //  activeValueFontSize = activeLabelFontSize;\n  //}\n  let activeCompositeValueFontSize = activeValueFontSize;\n  let haveCompositeValueEnabled = false;\n  // check if there are any composites with value enabled\n  if (data) {\n    for (let i = 0; i < data.length; i++) {\n      const item = data[i];\n      if (item.isComposite && item.showValue) {\n        // at least one composite has showValue set\n        haveCompositeValueEnabled = true;\n        break;\n      }\n    }\n  }\n  if (!valueEnabled) {\n    activeValueFontSize = 0;\n    // if there are no composites with value enabled, set it to zero also\n    if (!haveCompositeValueEnabled) {\n      activeCompositeValueFontSize = 0;\n    }\n  }\n\n  return { activeLabelFontSize, activeValueFontSize, activeCompositeValueFontSize, activeTimestampFontSize, showEllipses, numOfChars };\n};\n\n/**\n * Finds the longest text that to be displayed\n *\n * @param   {PolystatModel[]}  data  [PolystatModel data]\n *\n * @return  {string}                     [longest label as a string]\n */\nconst getMaxLabel = (data: PolystatModel[]): string => {\n  let maxLabel = '';\n  for (let i = 0; i < data.length; i++) {\n    let nameToCheck = data[i].name;\n    // use the displayName since it has been formatted\n    if (data[i].displayName !== '') {\n      nameToCheck = data[i].displayName;\n    }\n    if (nameToCheck.length > maxLabel.length) {\n      maxLabel = nameToCheck;\n    }\n  }\n  return maxLabel;\n};\n\n/**\n * Finds the longest value and timestamp text to be displayed\n *\n * @param   {PolystatModel[]} data [PolystatModel data]\n *\n * @return  {string[]} [value,timestamp]\n */\nconst getMaxValueAndTimestamp = (data: PolystatModel[]) => {\n  // same for the value, also check for sub metrics size in case of composite\n  // timestamp is also calculated here\n  let maxValue = '';\n  let maxTimestamp = '';\n  for (let i = 0; i < data.length; i++) {\n    if (data[i].valueFormatted.length > maxValue.length) {\n      maxValue = data[i].valueFormatted;\n    }\n    if (data[i].timestampFormatted.length > maxTimestamp.length) {\n      maxTimestamp = data[i].timestampFormatted;\n    }\n    const subMetricCount = data[i].members.length;\n    if (subMetricCount > 0) {\n      let counter = 0;\n      while (counter < subMetricCount) {\n        const checkContent = data[i].members[counter].displayName + ': ' + data[i].members[counter].valueFormatted;\n        if (checkContent && checkContent.length > maxValue.length) {\n          maxValue = checkContent;\n        }\n        const checkCompositeTimestamp = data[i].members[counter].timestampFormatted;\n        if (checkCompositeTimestamp && checkCompositeTimestamp.length > maxTimestamp.length) {\n          maxTimestamp = checkCompositeTimestamp;\n        }\n        counter++;\n      }\n    }\n  }\n  return {maxValue, maxTimestamp};\n};\n\nconst computeTextFontSize = (\n  text: string,\n  font: string,\n  minFont: number,\n  maxFont: number,\n  linesToDisplay: number,\n  textAreaWidth: number,\n  textAreaHeight: number\n): number => {\n  return getTextSizeForWidthAndHeight(\n    text,\n    `?px ${font}`,\n    textAreaWidth,\n    textAreaHeight / linesToDisplay, // multiple lines of text\n    minFont,\n    maxFont\n  );\n};\n","import React, { useEffect, createRef, useCallback } from 'react';\nimport { textUtil } from '@grafana/data';\nimport { useStyles2, Portal, useTheme2 } from '@grafana/ui';\nimport { symbol as d3symbol, symbolCircle, symbolSquare } from 'd3';\nimport { hexbin } from 'd3-hexbin';\nimport { orderBy as lodashOrderBy } from 'lodash';\nimport { Tooltip as ReactTooltip } from 'react-tooltip';\n\nimport { Gradients } from './gradients/Gradients';\nimport { LayoutManager } from './layout/layoutManager';\nimport { PolystatOptions, PolygonShapes, PolystatModel, DisplayModes, TimestampPositions } from './types';\n\nimport { getErrorMessageStyles, getNoTriggerTextStyles, getSVGPathStyles, getSVGStyles, getWrapperStyles } from './styles';\nimport { Tooltip } from './tooltips/Tooltip';\nimport { AutoFontScalar } from './auto_font_scaler';\nimport { GetAlignments } from './alignment';\n\nexport const Polystat: React.FC<PolystatOptions> = (options) => {\n  const divStyles = useStyles2(getWrapperStyles);\n  const svgStyles = useStyles2(getSVGStyles);\n  const svgPathStyles = useStyles2(getSVGPathStyles);\n  const noTriggerTextStyles = useStyles2(getNoTriggerTextStyles);\n  const errorMessageStyles = useStyles2(getErrorMessageStyles);\n  const tooltipTheme = useTheme2().isDark ? 'dark' : 'light';\n  // used to change/animate text in polygon\n  const [animationRefs, setAnimationRefs] = React.useState([] as any);\n  const [animationTimestampRefs, setAnimationTimestampRefs] = React.useState([] as any);\n  // tracks which metric to display during animation of a composite\n  const [animationMetricIndexes, setAnimationMetricIndexes] = React.useState([] as any);\n  const [animatedItems, setAnimatedItems] = React.useState<number[]>([]);\n  const margin = { top: 0, right: 0, bottom: 0, left: 0 };\n  // this MUST be unique for gradients to work properly\n  const [uniquePanelId] = React.useState<string>(`polystat_${options.panelId}_` + Math.floor(Math.random() * 10000).toString());\n\n  const updateAnimation = (data: PolystatModel[]) => {\n    if (data.length > 0) {\n      const newAnimationRefs = [];\n      const newAnimationTimestampRefs = [];\n      const newAnimationMetricIndexes = [];\n      for (let i = 0; i < data!.length; i++) {\n        newAnimationRefs.push(createRef());\n        newAnimationTimestampRefs.push(createRef());\n        newAnimationMetricIndexes.push(0);\n      }\n      if (newAnimationRefs.length > 0) {\n        if (animationRefs.length !== newAnimationRefs.length) {\n          setAnimationRefs(newAnimationRefs);\n          setAnimationTimestampRefs(newAnimationTimestampRefs);\n          setAnimationMetricIndexes(newAnimationMetricIndexes);\n        }\n      }\n    }\n  };\n\n  /*\n    This is the animation method that will cycle through the metrics for a composite\n   */\n  const animateComposite = useCallback(() => {\n    for (let i = 0; i < animatedItems.length; i++) {\n      let index = animatedItems[i];\n      let metricIndex = animationMetricIndexes[index];\n\n      // composites can have animated values displayed\n      let isValueAnimated = false;\n      if (options.globalShowValueEnabled ||\n        (options.processedData && options.processedData[index].isComposite && options.processedData[index].showValue)\n      ) {\n        isValueAnimated = true;\n      }\n      if (isValueAnimated && options.processedData && (animationRefs.length > 0 && animationRefs[index].current)) {\n        const item = options.processedData[index];\n        const val = formatCompositeValueAndTimestamp(metricIndex, item, options.globalDisplayTextTriggeredEmpty)[0];\n        if (animationRefs[index].current.innerHTML !== null) {\n          animationRefs[index].current.innerHTML = val;\n        }\n      }\n      // currently global setting determines if timestamp is animated\n      if (options.globalShowTimestampEnabled && options.processedData && (animationTimestampRefs.length > 0 && animationTimestampRefs[index].current)) {\n        const item = options.processedData[index];\n        const ts = formatCompositeValueAndTimestamp(metricIndex, item, options.globalDisplayTextTriggeredEmpty)[1];\n        if (animationTimestampRefs[index].current.innerHTML !== null) {\n          animationTimestampRefs[index].current.innerHTML = ts;\n        }\n      }\n      metricIndex++;\n      if (options.processedData && options.processedData[index] && options.processedData[index].members.length) {\n        metricIndex %= options.processedData[index].members.length;\n      }\n      animationMetricIndexes[index] = metricIndex;\n      setAnimationMetricIndexes(animationMetricIndexes);\n    }\n  }, [\n    animationMetricIndexes,\n    animationRefs,\n    animationTimestampRefs,\n    animatedItems,\n    options.processedData,\n    options.globalDisplayTextTriggeredEmpty,\n    options.globalShowTimestampEnabled,\n    options.globalShowValueEnabled,\n  ]);\n\n  /*\n    Determine which items should be animated\n  */\n\n  useEffect(() => {\n    let shouldAnimate = false;\n    const animate: number[] = [];\n    options.processedData!.map((item, index) => {\n      if (item.isComposite && item.showValue) {\n        shouldAnimate = true;\n        animate.push(index);\n      }\n    });\n    // check array content equality\n    if (JSON.stringify(animatedItems) !== JSON.stringify(animate)) {\n      if (options.processedData) {\n        updateAnimation(options.processedData);\n        setAnimatedItems(animate);\n      }\n    }\n    let tick: NodeJS.Timeout;\n    if (shouldAnimate) {\n      let speed = parseInt(options.compositeConfig.animationSpeed, 10);\n      if (speed < 200 || isNaN(speed)) {\n        console.log(`WARNING: speed in configuration is too fast, setting to 200ms`);\n        speed = 200;\n      }\n      tick = setInterval(animateComposite, speed);\n    }\n    return () => {\n      clearInterval(tick);\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [options.compositeConfig.animationSpeed, options.processedData, animationRefs]);\n\n  const detectNoDataEmptyState = () => {\n    if (options.processedData && options.processedData.length === 0) {\n      return <div className={noTriggerTextStyles}>{options.globalDisplayTextTriggeredEmpty}</div>;\n    }\n    return null;\n  };\n\n  const detectLayoutIssue = () => {\n    if (!options.autoSizeColumns && !options.autoSizeRows) {\n      const limit = options.layoutNumColumns * options.layoutNumRows;\n      if (limit < options.processedData!.length) {\n        return (\n          <div className={errorMessageStyles}>\n            Not enough rows and columns for data. There are {options.processedData!.length} items to display, and only{' '}\n            {limit} places allocated.{' '} See the Display Limit setting in category Layout{' '}\n          </div>\n        );\n      }\n    }\n    return null;\n  };\n\n  const lm = new LayoutManager(\n    options.panelWidth,\n    options.panelHeight,\n    options.layoutNumColumns,\n    options.layoutNumRows,\n    options.layoutDisplayLimit,\n    options.autoSizePolygons,\n    options.globalShape\n  );\n\n  // determine how many rows and columns are going to be generated\n  lm.generatePossibleColumnAndRowsSizes(options.autoSizeColumns, options.autoSizeRows, options.processedData!.length);\n  // to determine the radius, the actual number of rows and columns that will be used needs to be calculated\n  lm.generateActualColumnAndRowUsage(options.processedData, options.layoutDisplayLimit);\n  // next the radius can be determined from actual rows and columns being used\n  let radius = 0;\n  if (!options.autoSizePolygons && options.globalPolygonSize) {\n    if (options.globalPolygonSize < 0 || isNaN(options.globalPolygonSize)) {\n      // force min size if below zero or NaN\n      options.globalPolygonSize = 50;\n      console.log(`WARNING: polygon size is manually set to an invalid value, forcing to 50px`);\n    } else {\n      lm.setRadius(options.globalPolygonSize);\n    }\n    radius = options.globalPolygonSize;\n  } else {\n    radius = lm.generateRadius(options.globalShape);\n  }\n\n  // using the known number of columns and rows that can be used in addition to the radius,\n  // generate the points to be filled\n  const calculatedPoints = lm.generatePoints(options.processedData, options.layoutDisplayLimit, options.globalShape);\n  const aHexbin = hexbin()\n    .radius(radius)\n    .extent([\n      [0, 0],\n      [options.panelWidth, options.panelHeight],\n    ]);\n  const { diameterX, diameterY } = lm.getDiameters();\n  const { xoffset, yoffset } = lm.getOffsets(options.globalShape, options.processedData!.length);\n\n  // compute text area size (used to calculate the fontsize)\n  const textAreaWidth = diameterX;\n  const textAreaHeight = diameterY / 2; // Top and bottom of hexagon are not used\n  // symbols use the area for their size\n  let innerArea = diameterX * diameterY;\n  // use the smallest of diameterX or Y\n  if (diameterX < diameterY) {\n    innerArea = diameterX * diameterX;\n  }\n  if (diameterY < diameterX) {\n    innerArea = diameterY * diameterY;\n  }\n  // square and circle do not use this\n  const symbol = d3symbol().size(innerArea);\n\n  let customShape: any;\n  switch (options.globalShape) {\n    case PolygonShapes.HEXAGON_POINTED_TOP:\n      customShape = aHexbin.hexagon(radius);\n      break;\n    case PolygonShapes.CIRCLE:\n      customShape = symbol.type(symbolCircle);\n      break;\n    case PolygonShapes.SQUARE:\n      customShape = symbol.type(symbolSquare);\n      break;\n    default:\n      customShape = aHexbin.hexagon(radius);\n      break;\n  }\n\n  const resolveClickThroughTarget = (d: PolystatModel): string => {\n    let clickThroughTarget = '_self';\n    if (d.newTabEnabled) {\n      clickThroughTarget = '_blank';\n    }\n    // when a custom clickthrough is enabled, override the default _self\n    if (d.customClickthroughTargetEnabled) {\n      clickThroughTarget = d.customClickthroughTarget;\n    }\n    return clickThroughTarget;\n  };\n\n  const getCoords = (i: number) => {\n    const xValue = calculatedPoints[i].x;\n    const yValue = calculatedPoints[i].y;\n    return { x: xValue, y: yValue };\n  };\n\n  // calculate the fontsize based on the shape and the text\n  let activeLabelFontSize = options.globalFontSize;\n  // font sizes are independent for label and values\n  let activeValueFontSize = options.globalFontSize;\n  let activeCompositeValueFontSize = options.globalFontSize;\n  // timestamp sizing\n  let activeTimestampFontSize = options.globalShowTimestampFontSize;\n  let showEllipses = false;\n  let numOfChars = options.ellipseCharacters;\n\n  let hasShowTimeStampEnabled = options.globalShowTimestampEnabled;\n  let hasShowValueEnabled = options.globalShowValueEnabled;\n\n  if (options.globalAutoScaleFonts) {\n    const result = AutoFontScalar(\n      options.globalTextFontFamily,\n      textAreaWidth,\n      textAreaHeight,\n      hasShowValueEnabled,\n      hasShowTimeStampEnabled,\n      options.processedData!\n    );\n    activeLabelFontSize = result.activeLabelFontSize;\n    activeValueFontSize = result.activeValueFontSize;\n    activeTimestampFontSize = result.activeTimestampFontSize;\n    activeCompositeValueFontSize = result.activeCompositeValueFontSize;\n    showEllipses = result.showEllipses;\n    numOfChars = result.numOfChars;\n  }\n\n  const alignments = GetAlignments(\n    options.globalShape,\n    diameterX,\n    diameterY,\n    textAreaHeight,\n    activeValueFontSize,\n    activeLabelFontSize,\n    activeTimestampFontSize,\n    hasShowTimeStampEnabled\n  );\n\n  let timestampLineSpacing = Math.ceil(activeValueFontSize * 0.20);\n  if (activeValueFontSize > activeTimestampFontSize) {\n    timestampLineSpacing = Math.ceil(activeTimestampFontSize * 0.20);\n  }\n  // composites can have their own settings for displaying the value\n  let compositeTimestampLineSpacing = Math.ceil(activeCompositeValueFontSize);\n  if (activeCompositeValueFontSize > activeTimestampFontSize) {\n    // ABOVE\n    compositeTimestampLineSpacing = Math.ceil(activeTimestampFontSize * 0.75);\n    // BELOW\n    if (options.globalShowTimestampPosition === TimestampPositions.BELOW_VALUE) {\n      compositeTimestampLineSpacing = Math.ceil(activeTimestampFontSize);\n    }\n  }\n\n\n  const drawShape = (index: number, shape: PolygonShapes) => {\n    let fillColor = options.processedData![index].color;\n    if (options.globalGradientsEnabled) {\n      // TODO: safari needs the location.href\n      fillColor = `url(#${uniquePanelId}_linear_gradient_state_data_${index})`;\n    }\n    const useRadius = lm.generateRadius(options.globalShape);\n    const coords = getCoords(index);\n\n    switch (shape as any) {\n      case PolygonShapes.HEXAGON_POINTED_TOP:\n        return (\n          <path\n            data-tooltip-id={options.globalTooltipsEnabled ? `polystat-tooltip-${uniquePanelId}` : null}\n            data-tooltip-content={index}\n            data-tooltip-position-strategy='fixed'\n            className={svgPathStyles}\n            key={`polystat-tooltip-${uniquePanelId}`}\n            transform={`translate(${coords.x}, ${coords.y})`}\n            d={customShape}\n            fill={fillColor}\n            stroke={options.globalPolygonBorderColor}\n            strokeWidth={options.globalPolygonBorderSize + 'px'}\n          />\n        );\n      case PolygonShapes.CIRCLE:\n        return (\n          <circle\n            data-tooltip-id={options.globalTooltipsEnabled ? `polystat-tooltip-${uniquePanelId}` : null}\n            data-tooltip-content={index}\n            data-tooltip-position-strategy='fixed'\n            key={`polystat-tooltip-${uniquePanelId}`}\n            className={svgPathStyles}\n            cx={coords.x}\n            cy={coords.y}\n            r={useRadius}\n            fill={fillColor}\n          />\n        );\n      case PolygonShapes.SQUARE:\n        return (\n          <rect\n            data-tooltip-id={options.globalTooltipsEnabled ? `polystat-tooltip-${uniquePanelId}` : null}\n            data-tooltip-content={index}\n            data-tooltip-position-strategy='fixed'\n            key={`polystat-tooltip-${uniquePanelId}`}\n            className={svgPathStyles}\n            x={coords.x}\n            y={coords.y}\n            height={useRadius * 2}\n            width={useRadius * 2}\n            fill={fillColor}\n          />\n        );\n      default:\n        return (\n          <path\n            data-tooltip-id={options.globalTooltipsEnabled ? `polystat-tooltip-${uniquePanelId}` : null}\n            data-tooltip-content={index}\n            data-tooltip-position-strategy='fixed'\n            className={svgPathStyles}\n            key={`polystat-tooltip-${uniquePanelId}`}\n            transform={`translate(${coords.x}, ${coords.y})`}\n            d={customShape}\n            fill={fillColor}\n            stroke={options.globalPolygonBorderColor}\n            strokeWidth={options.globalPolygonBorderSize + 'px'}\n          />\n        );\n    }\n  };\n\n  // allows the polygon to fill the horizontal space if the manually specified number of columns has not been used\n  let marginLeft = margin.left;\n  if ((!options.autoSizeColumns) && (radius) && (lm.maxColumnsUsed < options.layoutNumColumns)) {\n    let difference = options.layoutNumColumns - lm.maxColumnsUsed;\n    marginLeft += radius * difference;\n  }\n  // allows the polygon to fill the vertical space if the manually specified number of rows has not been used\n  let marginTop = margin.top;\n  if ((!options.autoSizeRows) && (radius) && (lm.maxRowsUsed < options.layoutNumRows)) {\n    let difference = options.layoutNumRows - lm.maxRowsUsed;\n    // always starts at zero, skip offset for first row used\n    marginTop += radius * (difference - 1);\n  }\n\n  const getLabelContent = (item: PolystatModel, index: number, coords: { x: number, y: number }) => {\n    let verticalAlignment = alignments.labelWithValueTextAlignment;\n    if (!item.showValue) {\n      verticalAlignment = alignments.labelOnlyTextAlignment;\n    }\n    return (\n      <text\n        className=\"toplabel\"\n        x={coords.x + alignments.labelTextAlignmentX}\n        y={coords.y + verticalAlignment}\n        textAnchor=\"middle\"\n        fontFamily={options.globalTextFontFamily}\n        fontSize={activeLabelFontSize + 'px'}\n        style={{\n          fill: options.globalTextFontAutoColorEnabled\n            ? options.globalTextFontAutoColor\n            : options.globalTextFontColor,\n          pointerEvents: 'none',\n        }}\n      >\n        {\n          item.showName &&\n          getTextToDisplay(\n            options.globalAutoScaleFonts,\n            options.ellipseEnabled,\n            options.ellipseCharacters,\n            showEllipses,\n            numOfChars,\n            item.name,\n            item.displayName\n          )}\n      </text>\n    );\n  };\n\n  const getValueContent = (item: PolystatModel, index: number, coords: { x: number, y: number }) => {\n    // default\n    let verticalAlignment = alignments.valueWithLabelTextAlignment;\n    // check if showTimeStamp is enabled\n    // TODO: the show value should be inside the item also\n    if (options.globalShowTimestampEnabled) {\n      // TODO: the offset should be put inside the item also to handle overrides and composites correctly\n      if (isNaN(options.globalShowTimestampYOffset)) {\n        options.globalShowTimestampYOffset = 0;\n      }\n      switch (options.globalShowTimestampPosition) {\n        case TimestampPositions.ABOVE_VALUE:\n          verticalAlignment = alignments.valueWithLabelTextAlignment;\n          break;\n        case TimestampPositions.BELOW_VALUE:\n          verticalAlignment = alignments.timestampAlignment + timestampLineSpacing;\n          if (item.isComposite && item.showValue) {\n            // compositeTimestampLineSpacing not used for composite here\n            verticalAlignment = alignments.timestampAlignment;\n          }\n          break;\n      }\n    }\n    let valueContent = \"\";\n    if (item.isComposite) {\n      if (item.showValue) {\n        valueContent = formatCompositeValueAndTimestamp(0, item,\n          options.globalDisplayTextTriggeredEmpty)[0];\n      }\n    } else {\n      if (options.globalShowValueEnabled) {\n        valueContent = item.valueFormatted;\n      }\n    }\n    let useFontSize = activeValueFontSize;\n    if (item.isComposite) {\n      useFontSize = activeCompositeValueFontSize;\n    }\n    return (\n      <text\n        ref={animationRefs[index]}\n        className={`valueLabel${index}`}\n        x={coords.x + alignments.labelValueAlignmentX}\n        y={coords.y + verticalAlignment}\n        textAnchor=\"middle\"\n        fontFamily={options.globalTextFontFamily}\n        fontSize={useFontSize + 'px'}\n        style={{\n          fill: options.globalTextFontAutoColorEnabled\n            ? options.globalTextFontAutoColor\n            : options.globalTextFontColor,\n          pointerEvents: 'none',\n        }}\n      >\n        {valueContent}\n      </text>\n    );\n  };\n\n  const getTimestampForValueContent = (item: PolystatModel, index: number, coords: { x: number, y: number }) => {\n    // TODO: the offset should be put inside the item also to handle overrides and composites correctly\n    if (isNaN(options.globalShowTimestampYOffset)) {\n      options.globalShowTimestampYOffset = 0;\n    }\n    let verticalAlignment = alignments.timestampAlignment - timestampLineSpacing + options.globalShowTimestampYOffset;\n    switch (options.globalShowTimestampPosition) {\n      case TimestampPositions.ABOVE_VALUE:\n        if (item.showValue) {\n          verticalAlignment = alignments.timestampAlignment - timestampLineSpacing + options.globalShowTimestampYOffset;\n          if (item.isComposite) {\n            verticalAlignment = alignments.timestampAlignment - compositeTimestampLineSpacing + options.globalShowTimestampYOffset;\n          }\n        } else {\n          // the below calc can be used when value is not displayed\n          verticalAlignment = alignments.valueWithLabelTextAlignment + options.globalShowTimestampYOffset;\n        }\n        break;\n      case TimestampPositions.BELOW_VALUE:\n        verticalAlignment = alignments.valueWithLabelTextAlignment + options.globalShowTimestampYOffset;\n        if (item.isComposite && item.showValue) {\n          verticalAlignment = activeCompositeValueFontSize + compositeTimestampLineSpacing + options.globalShowTimestampYOffset;\n        }\n        break;\n    }\n    return (\n      <text\n        ref={animationTimestampRefs[index]}\n        className={`timestampLabel${index}`}\n        x={coords.x + alignments.labelValueAlignmentX}\n        y={coords.y + verticalAlignment}\n        textAnchor=\"middle\"\n        fontFamily={options.globalTextFontFamily}\n        fontSize={activeTimestampFontSize + 'px'}\n        style={{\n          fill: options.globalTextFontAutoColorEnabled\n            ? options.globalTextFontAutoColor\n            : options.globalTextFontColor,\n          pointerEvents: 'none',\n        }}\n      >\n        {options.globalShowTimestampEnabled &&\n          (item.isComposite\n            ? formatCompositeValueAndTimestamp(0, item, options.globalDisplayTextTriggeredEmpty)[1]\n            : item.timestampFormatted)}\n      </text>\n    )\n  };\n\n  const detectEmptyState = detectNoDataEmptyState();\n  if (detectEmptyState !== null) {\n    return detectEmptyState;\n  }\n\n  const layoutIssueDetected = detectLayoutIssue();\n  if (layoutIssueDetected !== null) {\n    return layoutIssueDetected;\n  }\n\n  return (\n    <div className={divStyles}>\n      <svg\n        className={svgStyles}\n        width={options.panelWidth}\n        height={options.panelHeight}\n        xmlns=\"http://www.w3.org/2000/svg\"\n        xmlnsXlink=\"http://www.w3.org/1999/xlink\"\n        viewBox={`${xoffset},${yoffset},${options.panelWidth},${options.panelHeight}`}\n      >\n\n        <g transform={`translate(${marginLeft},${marginTop})`}>\n          <Gradients gradientId={uniquePanelId} data={options.processedData} />\n\n          {options.processedData!.map((item, index) => {\n            const coords = getCoords(index);\n            const useUrl = item.sanitizeURLEnabled ? item.sanitizedURL : item.clickThrough;\n            // determine if a target is required\n            const resolvedClickthroughTarget = resolveClickThroughTarget(item);\n            let clickableUrl: JSX.Element;\n            // only add target attribute when there is one specified\n            if ((resolvedClickthroughTarget.length > 0) && (useUrl.length > 0)) {\n              clickableUrl = <a target={resolvedClickthroughTarget} href={useUrl}>\n                {drawShape(index, options.globalShape)}\n              </a>;\n            } else {\n              clickableUrl = <a href={useUrl}>\n                {drawShape(index, options.globalShape)}\n              </a>;\n            }\n            return (\n              <>\n                {useUrl.length > 0 && clickableUrl ? (\n                  clickableUrl\n                ) : (\n                  drawShape(index, options.globalShape)\n                )}\n                {getLabelContent(item, index, coords)}\n                {getValueContent(item, index, coords)}\n                {getTimestampForValueContent(item, index, coords)}\n              </>\n            );\n          })}\n        </g>\n      </svg>\n      {options.globalTooltipsEnabled && (\n        <Portal>\n          <ReactTooltip\n            style={{\n              boxShadow: 'rgba(1, 4, 9, 0.75) 0px 4px 8px 0px',\n            }}\n            id={options.globalTooltipsEnabled ? `polystat-tooltip-${uniquePanelId}` : undefined}\n            place={'bottom'} // TODO: make this configurable\n            float={true}\n            variant={tooltipTheme} // TODO: this could be made configurable (auto, or specified)\n            opacity={1} // TODO: make this configurable\n            clickable={false} // TODO: make this configurable, extend with per-line clickthrough\n            render={({ content }) => {\n              // generate tooltip for item\n              if (content) {\n                const contentIndex = parseInt(content, 10);\n                return (\n                  <Tooltip\n                    data={options.processedData![contentIndex]}\n                    renderTime={options.renderTime!}\n                    showTime={options.globalTooltipsShowTimestampEnabled}\n                    valueEnabled={options.globalTooltipsShowValueEnabled}\n                    tooltipColumnHeadersEnabled={options.globalShowTooltipColumnHeadersEnabled}\n                    primarySortByField={options.tooltipPrimarySortByField}\n                    primarySortDirection={options.tooltipPrimarySortDirection}\n                    secondarySortByField={options.tooltipSecondarySortByField}\n                    secondarySortDirection={options.tooltipSecondarySortDirection}\n                    displayMode={options.tooltipDisplayMode}\n                    tooltipDisplayTextTriggeredEmpty={options.tooltipDisplayTextTriggeredEmpty}\n                    tooltipFontFamily={options.globalTooltipsFontFamily}\n                  />\n                )\n              }\n              return (<></>)\n            }} />\n        </Portal>\n\n      )}\n    </div>\n  );\n};\n\nexport const getTextToDisplay = (\n  autoSizeFonts: boolean,\n  ellipseEnabled: boolean,\n  ellipseCharacters: number,\n  showEllipses: boolean,\n  numOfChars: number,\n  text: string,\n  displayName: string\n) => {\n  if (displayName !== '') {\n    text = displayName;\n  }\n  if (showEllipses) {\n    if (text.length > numOfChars) {\n      return text.substring(0, numOfChars) + '...';\n    }\n  }\n  if (!autoSizeFonts && ellipseEnabled && text.length > ellipseCharacters) {\n    return text.substring(0, ellipseCharacters) + '...';\n  }\n  return text;\n};\n\n/*\n              The element #{content} is currently not active.\n              <br />\n              Relevant attribute: {activeAnchor?.getAttribute('data-some-relevant-attr') || 'not set'}\n            </span>\n*/\n\nconst buildTriggerCache = (item: any) => {\n  let triggerCache = [];\n  for (let i = 0; i < item.members.length; i++) {\n    const aMember = item.members[i];\n    if (aMember.thresholdLevel > 0) {\n      // add to list\n      const cachedMemberState = {\n        index: i,\n        name: aMember.name,\n        value: aMember.value,\n        thresholdLevel: aMember.thresholdLevel,\n      };\n      triggerCache.push(cachedMemberState);\n    }\n  }\n  // sort it\n  triggerCache = lodashOrderBy(triggerCache, ['thresholdLevel', 'value', 'name'], ['desc', 'desc', 'asc']);\n  return triggerCache;\n};\n\nconst formatCompositeValueAndTimestamp = (frames: number, item: PolystatModel, globalDisplayTextTriggeredEmpty: string) => {\n  // TODO: if just one value, could speed this up\n  let content = item.valueFormatted;\n  let timestampContent = item.timestampFormatted;\n  const len = item.members.length;\n  if (len > 0) {\n    let triggeredIndex = -1;\n    if (item.displayMode === DisplayModes[0].value) {\n      triggeredIndex = frames % len;\n    } else {\n      if (typeof item.triggerCache === 'undefined') {\n        item.triggerCache = buildTriggerCache(item);\n      }\n      if (item.triggerCache.length > 0) {\n        const z = frames % item.triggerCache.length;\n        triggeredIndex = item.triggerCache[z].index;\n      } else {\n        // nothing triggered        //triggeredIndex = frames % len;\n        return [globalDisplayTextTriggeredEmpty, ''];\n      }\n    }\n    const aMember = Object.assign({}, item.members[triggeredIndex]);\n    content = aMember.name + ': ' + aMember.valueFormatted;\n    timestampContent = aMember.timestampFormatted;\n  }\n  return [textUtil.sanitize(content), timestampContent];\n};\n","import { PolygonShapes } from \"./types\";\n\nexport const GetAlignments = (\n  shape: PolygonShapes,\n  diameterX: number,\n  diameterY: number,\n  textAreaHeight: number,\n  activeValueFontSize: number,\n  activeLabelFontSize: number,\n  activeTimestampFontSize: number,\n  showTimestampEnabled: boolean,\n) => {\n  let valueWithLabelTextAlignment = textAreaHeight / 2 / 2 + activeValueFontSize / 2;\n  let valueOnlyTextAlignment = activeValueFontSize / 2;\n  let labelWithValueTextAlignment = -(textAreaHeight / 2 / 2) + activeLabelFontSize / 2;\n  let labelOnlyTextAlignment = activeLabelFontSize / 2;\n  let labelTextAlignmentX = 0;\n  let labelValueAlignmentX = 0;\n  let valueWithTimestampAlignment = valueWithLabelTextAlignment / 2;\n  let timestampAlignment = textAreaHeight * 0.33 / 2 + activeTimestampFontSize / 2;\n  switch (shape) {\n    case PolygonShapes.HEXAGON_POINTED_TOP:\n      // offset when only showing label\n      labelOnlyTextAlignment = activeLabelFontSize * 0.37;\n      if (showTimestampEnabled && activeTimestampFontSize > 0) {\n        // adjust value down\n        valueWithLabelTextAlignment = textAreaHeight * 0.67 / 2 + activeValueFontSize / 2;\n      }\n      break;\n    case PolygonShapes.CIRCLE:\n      // offset when only showing label\n      labelOnlyTextAlignment = activeLabelFontSize * 0.37;\n      if (showTimestampEnabled && activeTimestampFontSize > 0) {\n        // adjust value down\n        valueWithLabelTextAlignment = textAreaHeight * 0.67 / 2 + activeValueFontSize / 2;\n      }\n      break;\n    case PolygonShapes.SQUARE:\n      // square is \"centered\" at top left, not the center\n\n      // compute alignment for each text element, base coordinate is in the top left corner (text is anchored at its bottom):\n      // - Value text (bottom text) will be aligned (positively i.e. lower) in the middle of the bottom half of the text area\n      // - Label text (top text) will be aligned in the middle of the top half of the text area\n      valueWithLabelTextAlignment = diameterY / 1.5 + activeValueFontSize / 2;\n      valueOnlyTextAlignment = diameterY / 2 + activeLabelFontSize * 0.37;\n      labelWithValueTextAlignment = diameterY / 4 + activeLabelFontSize / 2;\n      // alignment is equal to the half of height plus a fraction of the fontSize\n      labelOnlyTextAlignment = diameterY / 2 + activeLabelFontSize * 0.37;\n      //\n      labelTextAlignmentX = diameterX / 2;\n      labelValueAlignmentX = diameterX / 2;\n      if (showTimestampEnabled && activeTimestampFontSize > 0) {\n        // line spacing offset is needed\n        timestampAlignment = diameterY / 1.5 - (activeTimestampFontSize * 0.67);\n      }\n      break;\n  }\n  return {\n    valueWithLabelTextAlignment,\n    valueOnlyTextAlignment,\n    valueWithTimestampAlignment,\n    labelWithValueTextAlignment,\n    labelOnlyTextAlignment,\n    labelTextAlignmentX,\n    labelValueAlignmentX,\n    timestampAlignment,\n  };\n};\n","import { DataFrame, Field, FieldType, FieldConfig, Vector } from '@grafana/data';\n\n// Inserts a \"Time\" field into each dataframe if it is missing\n// the value of the timestamp is \"now\"\n// any field without a numeric type is considered a label\nexport function InsertTime(data: DataFrame[]): DataFrame[] {\n  // TODO: time to insert can be taken from the first row if there are timeseries already\n  // for now, just insert now\n  const timeToInsert = Date.now();\n  const newData: DataFrame[] = [];\n  for (const frame of data) {\n    const newFrame: DataFrame = {\n      ...frame,\n      meta: {...frame.meta},\n      fields: [], // clear the fields\n    };\n    const hasTimestamp = frameHasTimestamp(frame);\n    // rebuild a new frame with labels on the numerical fields\n    for (const aField of frame.fields) {\n      if (aField.type === FieldType.number) {\n        if (!hasTimestamp) {\n          const copiedField = Object.assign({}, aField);\n          // need to get the number of rows of data for this frame\n          const aFieldValues = copiedField.values.toArray();\n          const rowsOfField = aFieldValues.length;\n          for (let rowNum = 0; rowNum < rowsOfField; rowNum++) {\n            // only create a new field when the rowValue is not null\n            if (aFieldValues[rowNum] !== null) {\n              if (aField.state) {\n                copiedField.state = Object.assign({}, aField.state);\n              }\n              newFrame.fields.push({\n                ...copiedField,\n                labels: flattenLabels(frame, rowNum),\n                values: [getValueOfField(copiedField, rowNum)] as any,\n              });\n            }\n          }\n        } else {\n          // copy the object\n          const copiedField = Object.assign({}, aField);\n          if (aField.state) {\n            copiedField.state = Object.assign({}, aField.state);\n          }\n          newFrame.fields.push(copiedField);\n        }\n      }\n    }\n    if (!hasTimestamp) {\n      const fc: FieldConfig = {};\n      const timeField: Field = {\n        name: 'Time',\n        type: FieldType.time,\n        values: [timeToInsert] as any,\n        config: fc,\n      };\n      // insert it\n      newFrame.fields.push(timeField);\n    } else {\n      // time field already exists\n      // copy all non-number fields from original frame\n      for (const aField of frame.fields) {\n        if (aField.type !== FieldType.number) {\n          const copiedField = Object.assign({}, aField);\n          if (aField.state) {\n            copiedField.state = Object.assign({}, aField.state);\n          }\n          newFrame.fields.push(copiedField);\n        }\n      }\n    }\n    newData.push(newFrame);\n  }\n\n  return newData;\n}\n\nfunction frameHasTimestamp(frame: DataFrame): boolean {\n  for (let j = 0; j < frame.fields.length; j++) {\n    const aField = frame.fields[j];\n    if (aField.type === FieldType.time) {\n      return true;\n    }\n  }\n  return false;\n}\n\nfunction flattenLabels(frame: DataFrame, rowNum: number) {\n  let labelIndexes = [];\n  const numFields = frame.fields.length;\n\n  // first get the fields of type string\n  for (let j = 0; j < numFields; j++) {\n    if (frame.fields[j].type === FieldType.string) {\n      labelIndexes.push(j);\n    }\n  }\n  let labelWithValues = getLabelValues(frame, labelIndexes, rowNum);\n  return labelWithValues;\n}\n\nfunction getValueOfField(field: Field, index: number) {\n  const bufferValue = field.values.toArray()[index];\n  return bufferValue;\n}\n\nfunction getLabelValues(frame: DataFrame, indexes: any[], rowNum: number) {\n  let labelAndValue = {};\n  for (let index = 0; index < indexes.length; index++) {\n    let indexValue = indexes[index];\n    let aField = frame.fields[indexValue];\n    if (aField.type !== FieldType.number) {\n      let value = getValueOfField(aField, rowNum);\n      // TODO: fix this...\n      // @ts-ignore\n      labelAndValue[aField.name] = value;\n    }\n  }\n  return labelAndValue;\n}\n","import { DEFAULT_NO_DATA_COLOR_HEX } from '../components/defaults';\nimport { PolystatThreshold } from '../components/thresholds/types';\nimport { PolystatModel } from '../components/types';\n/*\n\nThis supports ranged states\n\nThresholds are expected to be sorted by ascending value, where\n  T0 = lowest decimal value, any state\n  TN = highest decimal value, any state\n\nInitial state is set to \"ok\"\n\nA comparison is made using \"greater than or equal to\" against the value\n  If value >= thresholdValue state = X\n\nComparisons are made in reverse order, using the range between the Nth (inclusive) threshold and N+1 (exclusive)\n  InclusiveValue = T(n).value\n  ExclusiveValue = T(n+1).value\n\nWhen there is no n+1 threshold, the highest value threshold T(n), a simple inclusive >= comparison is made\n\n  Example 1: (typical linear)\n    T0 - 5, ok\n    T1 - 10, warning\n    T2 - 20, critical\n\n  Value >= 20 (Value >= T2)\n  10 <= Value < 20  (T1 <= Value < T2)\n  5 <= Value < 10   (T0 <= Value < T1)\n\n  Example 2: (reverse linear)\n    T0 - 50, critical\n    T1 - 90, warning\n    T2 - 100, ok\n\n  Value >= 100\n  90 <= value < 100\n  50 <= value < 90\n\n  Example 3: (bounded)\n    T0 - 50, critical\n    T1 - 60, warning\n    T2 - 70, ok\n    T3 - 80, warning\n    T4 - 90, critical\n\n    Value >= 90\n    80 <= Value < 90\n    70 <= Value < 80\n    60 <= Value < 70\n    50 <= Value < 60\n\nThe \"worst\" state is returned after checking every threshold range\n\n*/\nfunction getWorstSeries(series1: PolystatModel, series2: PolystatModel): any {\n  let worstSeries = series1;\n  const series1ThresholdLevel = series1.thresholdLevel;\n  const series2ThresholdLevel = series2.thresholdLevel;\n\n  if (series1ThresholdLevel === undefined || series2ThresholdLevel === undefined) {\n    return worstSeries;\n  }\n\n  // State 3 is Unknown and is not be worse than CRITICAL (state 2)\n  if (series2ThresholdLevel > series1ThresholdLevel) {\n    // series2 has higher threshold violation\n    worstSeries = series2;\n  }\n  if (series1ThresholdLevel === 3) {\n    // series1 is in state unknown, check if series2 is in state 1 or 2\n    switch (series2ThresholdLevel) {\n      case 1:\n        worstSeries = series2;\n        break;\n      case 2:\n        worstSeries = series2;\n        break;\n    }\n  }\n  return worstSeries;\n}\n\nfunction getThresholdLevelForValue(\n  thresholds: PolystatThreshold[] | undefined,\n  value: number | null,\n  defaultColor: string\n): { thresholdLevel: number; color: string } {\n  let currentColor = defaultColor;\n  if (value === null) {\n    return { thresholdLevel: 3, color: DEFAULT_NO_DATA_COLOR_HEX }; // No Data\n  }\n  // assume UNKNOWN state\n  let currentState = -1;\n  // skip evaluation when there are no thresholds\n  if (typeof thresholds === 'undefined') {\n    return { thresholdLevel: currentState, color: defaultColor };\n  }\n  // test \"Nth\" threshold\n  const thresholdCount = thresholds.length;\n  if (thresholdCount === 0) {\n    return { thresholdLevel: currentState, color: defaultColor };\n  }\n  const aThreshold = thresholds[thresholdCount - 1];\n  if (value >= aThreshold.value) {\n    currentState = aThreshold.state;\n    currentColor = aThreshold.color;\n  }\n  // if there's one threshold, just return the result\n  if (thresholds.length === 1) {\n    return { thresholdLevel: currentState, color: currentColor };\n  }\n  // now test in reverse\n  for (let i = thresholdCount - 1; i > 0; i--) {\n    const upperThreshold = thresholds[i];\n    const lowerThreshold = thresholds[i - 1];\n    if (lowerThreshold.value <= value && value < upperThreshold.value) {\n      if (currentState < lowerThreshold.state) {\n        currentState = lowerThreshold.state;\n        currentColor = lowerThreshold.color;\n      }\n    }\n  }\n  // last check, if currentState is not set, and there is a lower threshold, use that value (inclusive range up to T1)\n  if (currentState === -1) {\n    currentState = thresholds[0].state;\n    currentColor = thresholds[0].color;\n  }\n  return { thresholdLevel: currentState, color: currentColor };\n}\n\nexport { getWorstSeries, getThresholdLevelForValue };\n","/**\n * Convert model data to url params\n */\nimport { stringToJsRegex } from '@grafana/data';\nimport { PolystatModel } from '../components/types';\n\nclass ClickThroughTransformer {\n  static cellName = /\\${__cell_name}/;\n  static cellValue = /\\${__cell}/;\n  static cellRawValue = /\\${__cell:raw}/;\n\n  static nthCellName = /\\${__cell_name_(\\d+)}/;\n  static nthCellValue = /\\${__cell_(\\d+)}/;\n  static nthCellRawValue = /\\${__cell_(\\d+):raw}/;\n\n  static compositeNameRegex = /\\${__composite_name}/;\n\n  static transformSingleMetric(index: number, url: string, data: PolystatModel[]): string {\n    if (isNaN(index)) {\n      return url;\n    }\n    const item = data[index];\n    // check if url contains any dereferencing\n    while (url.match(this.cellName)) {\n      // replace with series name\n      url = url.replace(this.cellName, item.name);\n    }\n    while (url.match(this.cellValue)) {\n      // replace with formatted value, and encoded\n      url = url.replace(this.cellValue, encodeURIComponent(item.valueFormatted));\n    }\n    while (url.match(this.cellRawValue)) {\n      // replace with value\n      url = url.replace(this.cellRawValue, item.value.toString());\n    }\n    return url;\n  }\n\n  static transformNthMetric(url: string, data: PolystatModel[]) {\n    while (url.match(this.nthCellName)) {\n      const matched = url.match(this.nthCellName);\n      if (matched && matched.length >= 2) {\n        // get the capture number\n        const captureIndex = matched[1] as unknown as number;\n        const nthName = data[captureIndex].name;\n        // replace with series name\n        url = url.replace(this.nthCellName, nthName);\n      }\n    }\n    while (url.match(this.nthCellValue)) {\n      const matched = url.match(this.nthCellValue);\n      if (matched && matched.length >= 2) {\n        // get the capture number\n        const captureIndex = matched[1] as unknown as number;\n        const nthValue = data[captureIndex].valueFormatted;\n        // replace with formatted value encoded\n        url = url.replace(this.nthCellValue, encodeURIComponent(nthValue));\n      }\n    }\n    while (url.match(this.nthCellRawValue)) {\n      const matched = url.match(this.nthCellRawValue);\n      if (matched && matched.length >= 2) {\n        // get the capture number\n        const captureIndex = matched[1] as unknown as number;\n        const nthValue = data[captureIndex].value;\n        // replace with raw value\n        url = url.replace(this.nthCellRawValue, nthValue.toString());\n      }\n    }\n    return url;\n  }\n\n  static transformComposite(name: string, url: string) {\n    // check if url contains any dereferencing\n    while (url.match(this.compositeNameRegex)) {\n      // replace with series name\n      url = url.replace(this.compositeNameRegex, name);\n    }\n    return url;\n  }\n\n  static transformByRegex(pattern: string, item: PolystatModel, url: string) {\n    // detect regex capture groups from override.metricName and replace any occurrences in the click-through\n    const regex = stringToJsRegex(pattern);\n    const matches = item.name.match(regex);\n    if (matches && matches.length > 0) {\n      matches.forEach((aMatch, index) => {\n        const value = matches[index];\n        // console.log(`a match ${aMatch} index ${index} value ${value}`);\n        const matchType1 = `\\$\\{${index}\\}`;\n        url = url.replace(matchType1, value);\n        const matchType2 = `\\$${index}`;\n        url = url.replace(matchType2, value);\n      });\n    }\n    if (matches && matches.groups) {\n      for (const key in matches.groups) {\n        const value = matches.groups[key];\n        // console.log(`key = ${key} value = ${value}`);\n        // support $CAPTURE and ${CAPTURE}\n        const matchType1 = `\\$\\{${key}\\}`;\n        url = url.replace(matchType1, value);\n        const matchType2 = `\\$${key}`;\n        url = url.replace(matchType2, value);\n      }\n    }\n    return url;\n  }\n}\n\nexport { ClickThroughTransformer };\n","export const CUSTOM_SPLIT_DELIMITER = '#️⃣🔠🆗🆗🔠#️⃣';\n","import { dateTime } from '@grafana/data';\n\nexport const TimeFormatter = (timeZone: string, timestamp: number, timestampFormat: string): string => {\n  const timestampFormatted =\n    timeZone === 'utc'\n      ? dateTime(timestamp)\n        .utc()\n        .format(timestampFormat)\n      : dateTime(timestamp).format(timestampFormat);\n  return timestampFormatted;\n}\n","import { includes as lodashIncludes } from 'lodash';\nimport { PolystatModel } from '../components/types';\nimport { getWorstSeries } from './threshold_processor';\nimport { ClickThroughTransformer } from './clickThroughTransformer';\nimport { stringToJsRegex, escapeStringForRegex, ScopedVars, InterpolateFunction, textUtil } from '@grafana/data';\nimport { getTemplateSrv } from '@grafana/runtime';\nimport { CompositeItemType, CompositeMetric } from '../components/composites/types';\nimport { CUSTOM_SPLIT_DELIMITER } from './types';\nimport { ApplyGlobalRegexPattern } from './processor';\nimport { TimeFormatter } from './time_formatter';\n\nexport const resolveCompositeTemplates = (\n  metricComposites: CompositeItemType[],\n  replaceVariables: InterpolateFunction\n): CompositeItemType[] => {\n  const ret: CompositeItemType[] = [];\n  metricComposites.forEach((item: CompositeItemType) => {\n    const resolved = replaceVariables(item.name, undefined, customFormatter).split(CUSTOM_SPLIT_DELIMITER);\n    // if the composite name has template syntax, mark it as isTemplated true\n    const variableRegex = /\\$(\\w+)|\\[\\[([\\s\\S]+?)(?::(\\w+))?\\]\\]|\\${(\\w+)(?:\\.([^:^\\}]+))?(?::(\\w+))?}/g;\n    const matchResult = item.name.match(variableRegex);\n    if (matchResult && matchResult.length > 0) {\n      item.isTemplated = true;\n    }\n    resolved.forEach((newName: string) => {\n      ret.push({\n        ...item,\n        name: newName,\n        isTemplated: item.isTemplated,\n      });\n    });\n  });\n\n  return ret;\n};\n\nexport const customFormatter = (value: any) => {\n  if (Object.prototype.toString.call(value) === '[object Array]') {\n    return value.join(CUSTOM_SPLIT_DELIMITER);\n  }\n  return value;\n};\n\nexport const resolveMemberTemplates = (\n  compositeName: string,\n  members: CompositeMetric[],\n  replaceVariables: InterpolateFunction\n): CompositeMetric[] => {\n  const ret: CompositeMetric[] = [];\n  const variableRegex = /\\$(\\w+)|\\[\\[([\\s\\S]+?)(?::(\\w+))?\\]\\]|\\${(\\w+)(?:\\.([^:^\\}]+))?(?::(\\w+))?}/g;\n  members.forEach((member) => {\n    // Resolve templates in series names\n    if (member.seriesMatch) {\n      const matchResult = member.seriesMatch.match(variableRegex);\n      if (matchResult && matchResult.length > 0) {\n        matchResult.forEach((aMatch) => {\n          // expand the templatedName (append compositeName to the variables first)\n          const scopedVars: ScopedVars = {\n            compositeName: { text: 'compositeName', value: compositeName },\n          };\n          // template variables can be multi-select, or \"all\", iterate over each match\n          const resolvedSeriesNames = replaceVariables(aMatch, scopedVars, customFormatter).split(CUSTOM_SPLIT_DELIMITER);\n          // iterate over the array of names\n          if (resolvedSeriesNames && resolvedSeriesNames.length) {\n            resolvedSeriesNames.forEach((aName) => {\n              if (aName.includes(compositeName)) {\n                const newName = member.seriesMatch.replace(aMatch, aName);\n                const escapedName = escapeStringForRegex(aName);\n                const newNameEscaped = member.seriesMatch.replace(aMatch, escapedName);\n                ret.push({\n                  ...member,\n                  seriesName: newName,\n                  seriesNameEscaped: newNameEscaped,\n                });\n              }\n            });\n          }\n        });\n      } else {\n        ret.push(member);\n      }\n    }\n  });\n\n  return ret;\n};\n\nconst resolveMemberAliasTemplates = (name: string, matches: any): string => {\n  const scopedVars: ScopedVars = {};\n  matches.forEach((name: string, i: number) => {\n    scopedVars[i] = { text: i, value: name };\n  });\n  if (matches.groups) {\n    Object.keys(matches.groups).forEach((key) => {\n      scopedVars[key.replace(/\\s+/g, '_')] = { text: key, value: matches.groups[key] };\n    });\n  }\n  return getTemplateSrv().replace(name, scopedVars);\n};\n\n/**\n * Copies values, leaves members empty\n */\nconst shallowClone = (item: PolystatModel): PolystatModel => {\n  const clone: PolystatModel = {\n    value: item.value,\n    valueFormatted: item.valueFormatted,\n    valueRounded: item.valueRounded,\n    stats: item.stats,\n    name: item.name,\n    displayName: item.displayName,\n    timestamp: item.timestamp,\n    timestampFormatted: item.timestampFormatted,\n    prefix: item.prefix,\n    suffix: item.suffix,\n    color: item.color,\n    clickThrough: item.clickThrough,\n    operatorName: item.operatorName,\n    newTabEnabled: item.newTabEnabled,\n    sanitizedURL: item.sanitizedURL,\n    sanitizeURLEnabled: item.sanitizeURLEnabled,\n    customClickthroughTargetEnabled: false,\n    customClickthroughTarget: '',\n    showName: item.showName,\n    showValue: item.showValue,\n    showTimestamp: item.showTimestamp,\n    isComposite: item.isComposite,\n    members: []\n  };\n  return clone;\n};\n\nexport const ApplyComposites = (\n  composites: CompositeItemType[],\n  data: PolystatModel[],\n  replaceVariables: InterpolateFunction,\n  compositesGlobalAliasingEnabled: boolean,\n  timeZone: string,\n  globalRegexPattern?: string,\n): PolystatModel[] => {\n  if (!composites) {\n    return data;\n  }\n\n  const filteredMetrics: number[] = [];\n  const keepMetrics: number[] = [];\n  const clonedComposites: PolystatModel[] = [];\n  // the composite Name can be a template variable\n  // the composite should only match specific metrics or expanded templated metrics that use the composite name\n  const resolvedComposites = resolveCompositeTemplates(composites, replaceVariables);\n  for (let i = 0; i < resolvedComposites.length; i++) {\n    const matchedMetrics: number[] = [];\n    const aComposite = resolvedComposites[i];\n    if (!aComposite.showComposite) {\n      continue;\n    }\n    let currentWorstSeries = null;\n    // this should filter the members that are matches for the composite name\n    const templatedMembers = resolveMemberTemplates(aComposite.name, aComposite.metrics, replaceVariables);\n    for (let j = 0; j < templatedMembers.length; j++) {\n      const aMetric = templatedMembers[j];\n      // look for the matches to the pattern in the data\n      for (let index = 0; index < data.length; index++) {\n        // match regex\n        // seriesName may not be defined yet, skip\n        if (typeof aMetric.seriesMatch === 'undefined') {\n          continue;\n        }\n        // name may not be escaped, check both\n        let metricName = aMetric.seriesMatch;\n        if (aMetric.seriesNameEscaped !== undefined) {\n          metricName = aMetric.seriesNameEscaped;\n        }\n        const regex = stringToJsRegex(metricName);\n        const matches = regex.exec(data[index].name);\n        if (matches && matches.length > 0) {\n          const seriesItem = data[index];\n          // Template out the name of the metric using the alias\n          if (aMetric.alias && aMetric.alias.length > 0) {\n            seriesItem.displayName = resolveMemberAliasTemplates(aMetric.alias, matches);\n          }\n\n          // keep index of the matched metric\n          matchedMetrics.push(index);\n          // only hide if requested\n          if (!aComposite.showMembers) {\n            filteredMetrics.push(index);\n          } else {\n            keepMetrics.push(index);\n          }\n          if (aComposite.clickThrough && aComposite.clickThrough.length > 0) {\n            let url = aComposite.clickThrough;\n            // apply both types of transforms, one targeted at the data item index, and secondly the nth variant\n            url = ClickThroughTransformer.transformComposite(aComposite.name, url);\n            url = ClickThroughTransformer.transformSingleMetric(index, url, data);\n            url = ClickThroughTransformer.transformNthMetric(url, data);\n            // lastly apply template variables\n            url = replaceVariables(url);\n            seriesItem.clickThrough = url;\n            seriesItem.sanitizedURL = textUtil.sanitizeUrl(url);\n            seriesItem.customClickthroughTarget = aComposite.clickThroughCustomTarget;\n            seriesItem.customClickthroughTargetEnabled = aComposite.clickThroughCustomTargetEnabled;\n          }\n          // process the timestamp display\n          if (aComposite.showTimestampEnabled) {\n            seriesItem.timestampFormatted = TimeFormatter(timeZone, data[index].timestamp, aComposite.showTimestampFormat);\n            seriesItem.showTimestamp = true;\n          }\n        }\n      }\n    }\n    if (matchedMetrics.length === 0) {\n      continue;\n    }\n    // now determine the most triggered threshold\n\n    for (let k = 0; k < matchedMetrics.length; k++) {\n      const itemIndex = matchedMetrics[k];\n      const seriesItem = data[itemIndex];\n      // check thresholds\n      if (currentWorstSeries === null) {\n        currentWorstSeries = seriesItem;\n      } else {\n        currentWorstSeries = getWorstSeries(currentWorstSeries, seriesItem);\n      }\n    }\n    // Prefix the valueFormatted with the actual metric name\n    if (currentWorstSeries !== null) {\n      const clone = shallowClone(currentWorstSeries);\n      clone.name = aComposite.name;\n      clone.displayName = aComposite.name;\n      // tooltip/legend uses this to expand what values are inside the composite\n      for (let index = 0; index < matchedMetrics.length; index++) {\n        const itemIndex = matchedMetrics[index];\n        clone.members.push({\n          ...data[itemIndex],\n          name: data[itemIndex].displayName || data[itemIndex].name,\n        });\n      }\n      clone.thresholdLevel = currentWorstSeries.thresholdLevel;\n      // currentWorstSeries.valueFormatted = currentWorstSeriesName + ': ' + currentWorstSeries.valueFormatted;\n      // now push the composite into data\n      // add the composite setting for showing the name/value to the new cloned model\n      clone.showName = aComposite.showName;\n      clone.showValue = aComposite.showValue;\n      clone.showTimestamp = aComposite.showTimestampEnabled;\n      clone.displayMode = aComposite.displayMode;\n      clone.newTabEnabled = aComposite.clickThroughOpenNewTab;\n      clone.sanitizeURLEnabled = aComposite.clickThroughSanitize;\n      clone.customClickthroughTarget = aComposite.clickThroughCustomTarget;\n      clone.customClickthroughTargetEnabled = aComposite.clickThroughCustomTargetEnabled;\n      // mark this series as a composite\n      clone.isComposite = true;\n      clonedComposites.push(clone);\n    }\n  }\n  // now merge the clonedComposites into data\n  if(compositesGlobalAliasingEnabled && globalRegexPattern) {\n    Array.prototype.push.apply(data, ApplyGlobalRegexPattern(clonedComposites, globalRegexPattern))\n  } else {\n    Array.prototype.push.apply(data, clonedComposites);\n  }\n  // remove the keepMetrics from the filteredMetrics list\n  // these have been marked by at least one composite to be displayed\n  for (let i = 0; i < keepMetrics.length; i++) {\n    const keptMetric = keepMetrics[i];\n    const location = filteredMetrics.indexOf(keptMetric);\n    if (location >= 0) {\n      filteredMetrics.splice(location, 1);\n    }\n  }\n  // sort by value descending\n  filteredMetrics.sort((a, b) => {\n    return b - a;\n  });\n  // now remove the filtered metrics from final list\n  // remove filtered metrics, use splice in reverse order\n  for (let i = data.length; i >= 0; i--) {\n    if (lodashIncludes(filteredMetrics, i)) {\n      data.splice(i, 1);\n    }\n  }\n  return data;\n};\n","import { FieldCalcs } from '@grafana/data';\nimport { PolystatModel } from '../components/types';\n\nexport function GetValueByOperator(\n  metricName: string,\n  data: PolystatModel | null,\n  operatorName: string,\n  calcs: FieldCalcs\n) {\n  switch (operatorName) {\n    case 'name':\n      return metricName;\n    case 'last_time':\n      if (data) {\n        return data.timestamp;\n      } else {\n        return Date.now();\n      }\n    default:\n      let aValue = calcs[operatorName];\n      return aValue;\n  }\n}\n","export enum MappingType {\n  ValueToText = 1,\n  RangeToText = 2,\n}\n\ninterface BaseMap {\n  id: number; // this could/should just be the array index\n  text: string; // the final display value\n  type: MappingType;\n}\n\nexport type ValueMapping = ValueMap | RangeMap;\n\nexport interface ValueMap extends BaseMap {\n  value: string;\n}\n\nexport interface RangeMap extends BaseMap {\n  from: string;\n  to: string;\n}\ntype TimeSeriesValue = string | number | null;\n\nconst addValueToTextMappingText = (\n  allValueMappings: ValueMapping[],\n  valueToTextMapping: ValueMap,\n  value: TimeSeriesValue\n) => {\n  if (valueToTextMapping.value === undefined) {\n    return allValueMappings;\n  }\n\n  if (value === null && isNullValueMap(valueToTextMapping)) {\n    return allValueMappings.concat(valueToTextMapping);\n  }\n\n  const valueAsNumber = parseFloat(value as string);\n  const valueToTextMappingAsNumber = parseFloat(valueToTextMapping.value as string);\n\n  if (isNaN(valueAsNumber) || isNaN(valueToTextMappingAsNumber)) {\n    if (value === valueToTextMapping.value) {\n      return allValueMappings.concat(valueToTextMapping);\n    }\n  }\n\n  if (valueAsNumber !== valueToTextMappingAsNumber) {\n    return allValueMappings;\n  }\n\n  return allValueMappings.concat(valueToTextMapping);\n};\n\nconst addRangeToTextMappingText = (\n  allValueMappings: ValueMapping[],\n  rangeToTextMapping: RangeMap,\n  value: TimeSeriesValue\n) => {\n  if (rangeToTextMapping.from === undefined || rangeToTextMapping.to === undefined || value === undefined) {\n    return allValueMappings;\n  }\n\n  if (\n    value === null &&\n    rangeToTextMapping.from &&\n    rangeToTextMapping.to &&\n    rangeToTextMapping.from.toLowerCase() === 'null' &&\n    rangeToTextMapping.to.toLowerCase() === 'null'\n  ) {\n    return allValueMappings.concat(rangeToTextMapping);\n  }\n\n  const valueAsNumber = parseFloat(value as string);\n  const fromAsNumber = parseFloat(rangeToTextMapping.from as string);\n  const toAsNumber = parseFloat(rangeToTextMapping.to as string);\n\n  if (isNaN(valueAsNumber) || isNaN(fromAsNumber) || isNaN(toAsNumber)) {\n    return allValueMappings;\n  }\n\n  if (valueAsNumber >= fromAsNumber && valueAsNumber <= toAsNumber) {\n    return allValueMappings.concat(rangeToTextMapping);\n  }\n\n  return allValueMappings;\n};\n\nconst getAllFormattedValueMappings = (valueMappings: ValueMapping[], value: TimeSeriesValue) => {\n  const allFormattedValueMappings = valueMappings.reduce((allValueMappings, valueMapping) => {\n    if (valueMapping.type === MappingType.ValueToText) {\n      allValueMappings = addValueToTextMappingText(allValueMappings, valueMapping as ValueMap, value);\n    } else if (valueMapping.type === MappingType.RangeToText) {\n      allValueMappings = addRangeToTextMappingText(allValueMappings, valueMapping as RangeMap, value);\n    }\n\n    return allValueMappings;\n  }, [] as ValueMapping[]);\n\n  allFormattedValueMappings.sort((t1, t2) => {\n    return t1.id - t2.id;\n  });\n\n  return allFormattedValueMappings;\n};\n\nexport const getMappedValue = (valueMappings: ValueMapping[], value: TimeSeriesValue): ValueMapping => {\n  return getAllFormattedValueMappings(valueMappings, value)[0];\n};\n\nconst isNullValueMap = (mapping: ValueMap): boolean => {\n  if (!mapping || !mapping.value) {\n    return false;\n  }\n  return mapping.value.toLowerCase() === 'null';\n};\n","/**\n * @public\n */\nexport enum FieldColorModeId {\n  Thresholds = 'thresholds',\n  PaletteClassic = 'palette-classic',\n  PaletteSaturated = 'palette-saturated',\n  ContinuousGrYlRd = 'continuous-GrYlRd',\n  Fixed = 'fixed',\n}\n\n/**\n * @public\n */\nexport interface FieldColor {\n  /** The main color scheme mode */\n  mode: FieldColorModeId | string;\n  /** Stores the fixed color value if mode is fixed */\n  fixedColor?: string;\n  /** Some visualizations need to know how to assign a series color from by value color schemes */\n  seriesBy?: FieldColorSeriesByMode;\n}\n\n/**\n * @beta\n */\nexport type FieldColorSeriesByMode = 'min' | 'max' | 'last';\n\nexport const FALLBACK_COLOR = 'gray';\n","export interface Threshold {\n  value: number;\n  color: string;\n  /**\n   *  Warning, Error, LowLow, Low, OK, High, HighHigh etc\n   */\n  state?: string;\n}\n\n/**\n *  Display mode\n */\nexport enum ThresholdsMode {\n  Absolute = 'absolute',\n  /**\n   *  between 0 and 1 (based on min/max)\n   */\n  Percentage = 'percentage',\n}\n\n/**\n *  Config that is passed to the ThresholdsEditor\n */\nexport interface ThresholdsConfig {\n  mode: ThresholdsMode;\n\n  /**\n   *  Must be sorted by 'value', first value is always -Infinity\n   */\n  steps: Threshold[];\n}\n","/**\n * @alpha\n */\nexport enum MappingType {\n  ValueToText = 'value', // was 1\n  RangeToText = 'range', // was 2\n  RegexToText = 'regex',\n  SpecialValue = 'special',\n}\n\n/**\n * @alpha\n */\nexport interface ValueMappingResult {\n  text?: string;\n  color?: string;\n  icon?: string;\n  index?: number;\n}\n\n/**\n * @alpha\n */\ninterface BaseValueMap<T> {\n  type: MappingType;\n  options: T;\n}\n\n/**\n * @alpha\n */\nexport interface ValueMap extends BaseValueMap<Record<string, ValueMappingResult>> {\n  type: MappingType.ValueToText;\n}\n\n/**\n * @alpha\n */\nexport interface RangeMapOptions {\n  from: number | null; // changed from string\n  to: number | null;\n  result: ValueMappingResult;\n}\n\n/**\n * @alpha\n */\nexport interface RangeMap extends BaseValueMap<RangeMapOptions> {\n  type: MappingType.RangeToText;\n}\n\n/**\n * @alpha\n */\nexport interface RegexMapOptions {\n  pattern: string;\n  result: ValueMappingResult;\n}\n\n/**\n * @alpha\n */\nexport interface RegexMap extends BaseValueMap<RegexMapOptions> {\n  type: MappingType.RegexToText;\n}\n\n/**\n * @alpha\n */\nexport interface SpecialValueOptions {\n  match: SpecialValueMatch;\n  result: ValueMappingResult;\n}\n\n/**\n * @alpha\n */\nexport enum SpecialValueMatch {\n  True = 'true',\n  False = 'false',\n  Null = 'null',\n  NaN = 'nan',\n  NullAndNaN = 'null+nan',\n  Empty = 'empty',\n}\n\n/**\n * @alpha\n */\nexport interface SpecialValueMap extends BaseValueMap<SpecialValueOptions> {\n  type: MappingType.SpecialValue;\n}\n\n/**\n * @alpha\n */\nexport type ValueMapping = ValueMap | RangeMap | RegexMap | SpecialValueMap;\n","import { getActiveThreshold } from './thresholds';\nimport { stringToJsRegex } from '@grafana/data';\nimport {\n  MappingType,\n  SpecialValueMatch,\n  ValueMap,\n  ValueMapping,\n  ValueMappingResult,\n  SpecialValueOptions,\n} from './types/valueMappings';\nimport { ThresholdsConfig } from './types/thresholds';\n\nexport function getValueMappingResult(valueMappings: ValueMapping[], value: any): ValueMappingResult | null {\n  for (const vm of valueMappings) {\n    switch (vm.type) {\n      case MappingType.ValueToText:\n        if (value == null) {\n          continue;\n        }\n\n        const result = vm.options[value];\n        if (result) {\n          return result;\n        }\n\n        break;\n\n      case MappingType.RangeToText:\n        if (value == null) {\n          continue;\n        }\n\n        const valueAsNumber = parseFloat(value as string);\n        if (isNaN(valueAsNumber)) {\n          continue;\n        }\n\n        const isNumFrom = !isNaN(vm.options.from!);\n        if (isNumFrom && valueAsNumber < vm.options.from!) {\n          continue;\n        }\n\n        const isNumTo = !isNaN(vm.options.to!);\n        if (isNumTo && valueAsNumber > vm.options.to!) {\n          continue;\n        }\n\n        return vm.options.result;\n\n      case MappingType.RegexToText:\n        if (value == null) {\n          continue;\n        }\n\n        if (typeof value !== 'string') {\n          continue;\n        }\n\n        const regex = stringToJsRegex(vm.options.pattern);\n        if (value.match(regex)) {\n          const res = { ...vm.options.result };\n\n          if (res.text != null) {\n            res.text = value.replace(regex, vm.options.result.text || '');\n          }\n\n          return res;\n        }\n\n      case MappingType.SpecialValue:\n        switch ((vm.options as SpecialValueOptions).match) {\n          case SpecialValueMatch.Null: {\n            if (value == null) {\n              return vm.options.result;\n            }\n            break;\n          }\n          case SpecialValueMatch.NaN: {\n            if (isNaN(value as any)) {\n              return vm.options.result;\n            }\n            break;\n          }\n          case SpecialValueMatch.NullAndNaN: {\n            if (isNaN(value as any) || value == null) {\n              return vm.options.result;\n            }\n            break;\n          }\n          case SpecialValueMatch.True: {\n            if (value === true || value === 'true') {\n              return vm.options.result;\n            }\n            break;\n          }\n          case SpecialValueMatch.False: {\n            if (value === false || value === 'false') {\n              return vm.options.result;\n            }\n            break;\n          }\n          case SpecialValueMatch.Empty: {\n            if (value === '') {\n              return vm.options.result;\n            }\n            break;\n          }\n        }\n    }\n  }\n\n  return null;\n}\n\n// Ref https://stackoverflow.com/a/58550111\nexport function isNumeric(num: any) {\n  return (typeof num === 'number' || (typeof num === 'string' && num.trim() !== '')) && !isNaN(num as number);\n}\n\n/**\n * @deprecated use MappingType instead\n * @internal\n */\nexport enum LegacyMappingType {\n  ValueToText = 1,\n  RangeToText = 2,\n}\n\n/**\n * @deprecated use MappingType instead\n * @internal\n */\nexport interface LegacyBaseMap {\n  id: number; // this could/should just be the array index\n  text: string; // the final display value\n  // intentional use of deprecated function for v8 compat\n  // eslint-disable-next-line deprecation/deprecation\n  type: LegacyMappingType;\n}\n\n/**\n * @deprecated use ValueMapping instead\n * @internal\n */\n// intentional use of deprecated function for v8 compat\n// eslint-disable-next-line deprecation/deprecation\nexport type LegacyValueMapping = LegacyValueMap | LegacyRangeMap;\n\n/**\n * @deprecated use ValueMap instead\n * @internal\n */\n// intentional use of deprecated function for v8 compat\n// eslint-disable-next-line deprecation/deprecation\nexport interface LegacyValueMap extends LegacyBaseMap {\n  value: string;\n}\n\n/**\n * @deprecated use RangeMap instead\n * @internal\n */\n// intentional use of deprecated function for v8 compat\n// eslint-disable-next-line deprecation/deprecation\nexport interface LegacyRangeMap extends LegacyBaseMap {\n  from: string;\n  to: string;\n}\n\n/**\n * @deprecated use getValueMappingResult instead\n * @internal\n */\n// intentional use of deprecated function for v8 compat\n// eslint-disable-next-line deprecation/deprecation\nexport function getMappedValue(valueMappings: LegacyValueMapping[], value: any): LegacyValueMapping {\n  // intentional use of deprecated function for v8 compat\n  // eslint-disable-next-line deprecation/deprecation\n  const emptyResult = { type: LegacyMappingType.ValueToText, value: '', text: '', from: '', to: '', id: 0 };\n  if (!valueMappings?.length) {\n    return emptyResult;\n  }\n\n  const upgraded: ValueMapping[] = [];\n  for (const vm of valueMappings) {\n    if (isValueMapping(vm)) {\n      upgraded.push(vm);\n      continue;\n    }\n    upgraded.push(upgradeOldAngularValueMapping(vm));\n  }\n\n  if (!upgraded?.length) {\n    return emptyResult;\n  }\n\n  const result = getValueMappingResult(upgraded, value);\n  if (!result) {\n    return emptyResult;\n  }\n\n  return {\n    // intentional use of deprecated function for v8 compat\n    // eslint-disable-next-line deprecation/deprecation\n    type: LegacyMappingType.ValueToText,\n    value: result.text,\n    text: result.text ?? '',\n    from: '',\n    to: '',\n    id: result.index ?? 0,\n  };\n}\n\n/**\n * @alpha\n * Converts the old Angular value mappings to new react style\n */\nexport function convertOldAngularValueMappings(panel: any, migratedThresholds?: ThresholdsConfig): ValueMapping[] {\n  const mappings: ValueMapping[] = [];\n\n  // Guess the right type based on options\n  let mappingType = panel.mappingType;\n  if (!panel.mappingType) {\n    if (panel.valueMaps && panel.valueMaps.length) {\n      mappingType = 1;\n    } else if (panel.rangeMaps && panel.rangeMaps.length) {\n      mappingType = 2;\n    }\n  }\n  if (mappingType === 1) {\n    for (let i = 0; i < panel.valueMaps.length; i++) {\n      const map = panel.valueMaps[i];\n      mappings.push(\n        upgradeOldAngularValueMapping(\n          {\n            ...map,\n            id: i, // used for order\n            type: MappingType.ValueToText,\n          },\n          panel.fieldConfig?.defaults?.thresholds || migratedThresholds\n        )\n      );\n    }\n  } else if (mappingType === 2) {\n    for (let i = 0; i < panel.rangeMaps.length; i++) {\n      const map = panel.rangeMaps[i];\n      mappings.push(\n        upgradeOldAngularValueMapping(\n          {\n            ...map,\n            id: i, // used for order\n            type: MappingType.RangeToText,\n          },\n          panel.fieldConfig?.defaults?.thresholds || migratedThresholds\n        )\n      );\n    }\n  }\n\n  return mappings;\n}\n\nfunction upgradeOldAngularValueMapping(old: any, thresholds?: ThresholdsConfig): ValueMapping {\n  const valueMaps: ValueMap = { type: MappingType.ValueToText, options: {} };\n  const newMappings: ValueMapping[] = [];\n\n  // Use the color we would have picked from thresholds\n  let color: string | undefined = undefined;\n  const numeric = parseFloat(old.text);\n  if (thresholds && !isNaN(numeric)) {\n    const level = getActiveThreshold(numeric, thresholds.steps);\n    if (level && level.color) {\n      color = level.color;\n    }\n  }\n\n  switch (old.type) {\n    // intentional use of deprecated function for v8 compat\n    // eslint-disable-next-line deprecation/deprecation\n    case LegacyMappingType.ValueToText:\n    case MappingType.ValueToText:\n      if (old.value != null) {\n        if (old.value === 'null') {\n          newMappings.push({\n            type: MappingType.SpecialValue,\n            options: {\n              match: SpecialValueMatch.Null,\n              result: { text: old.text, color },\n            },\n          });\n        } else {\n          valueMaps.options[String(old.value)] = {\n            text: old.text,\n            color,\n          };\n        }\n      }\n      break;\n    // intentional use of deprecated function for v8 compat\n    // eslint-disable-next-line deprecation/deprecation\n    case LegacyMappingType.RangeToText:\n    case MappingType.RangeToText:\n      if (old.from === 'null' || old.to === 'null') {\n        newMappings.push({\n          type: MappingType.SpecialValue,\n          options: {\n            match: SpecialValueMatch.Null,\n            result: { text: old.text, color },\n          },\n        });\n      } else {\n        newMappings.push({\n          type: MappingType.RangeToText,\n          options: {\n            from: +old.from,\n            to: +old.to,\n            result: { text: old.text, color },\n          },\n        });\n      }\n      break;\n  }\n\n  if (Object.keys(valueMaps.options).length > 0) {\n    newMappings.unshift(valueMaps);\n  }\n\n  return newMappings[0];\n}\n\nfunction isValueMapping(map: any): map is ValueMapping {\n  if (!map) {\n    return false;\n  }\n\n  return map.hasOwnProperty('options') && typeof map.options === 'object';\n}\n","import { getMappedValue } from './v7/valueMappings';\nimport { getValueMappingResult } from './v8/valueMappings';\n\n//\n// To maintain compatibility back to Grafana >=v7.3, this wrapper is needed\n// to process the value mappings based on the object passed in.\n//\n// the method `getMappedValue()` function was removed in v9\n// the replacement `getValueMappingResult()` only appears in v8.1.0+\n//\n// At runtime, this cannot be determined so the legacy function and the new function are both provided\n// here, to allow this to work work across all versions (7.3 > 9.x)\n//\nexport const GetMappedValue = (valueMappings: any[], value: any): any => {\n  let mappedValue = getMappedValue(valueMappings, value);\n  if (typeof mappedValue === 'undefined') {\n    return getValueMappingResult(valueMappings, value);\n  }\n  return mappedValue;\n};\n","import {\n  getValueFormat,\n  stringToJsRegex,\n  ScopedVars,\n  InterpolateFunction,\n  textUtil,\n  getColorForTheme,\n  FieldConfigSource,\n  GrafanaTheme2,\n  GrafanaTheme,\n} from '@grafana/data';\nimport { getThresholdLevelForValue } from './threshold_processor';\nimport { GetValueByOperator } from './stats';\nimport { ClickThroughTransformer } from './clickThroughTransformer';\nimport { PolystatModel } from '../components/types';\nimport { CUSTOM_SPLIT_DELIMITER } from './types';\nimport { OverrideItemType } from '../components/overrides/types';\nimport { PolystatThreshold } from 'components/thresholds/types';\nimport { GetMappedValue } from './valueMappingsWrapper';\nimport { roundValue } from 'utils';\nimport { TimeFormatter } from './time_formatter';\n\nconst customFormatter = (value: any): string => {\n  if (Object.prototype.toString.call(value) === '[object Array]') {\n    return value.join(CUSTOM_SPLIT_DELIMITER);\n  }\n  return value;\n};\n\nconst resolveOverrideTemplates = (overrides: OverrideItemType[], replaceVariables: InterpolateFunction): OverrideItemType[] => {\n  const ret: OverrideItemType[] = [];\n  const variableRegex = /\\$(\\w+)|\\[\\[([\\s\\S]+?)(?::(\\w+))?\\]\\]|\\${(\\w+)(?:\\.([^:^\\}]+))?(?::(\\w+))?}/g;\n  overrides.forEach((override) => {\n    // Resolve templates in series names\n    if (override.metricName) {\n      const matchResult = override.metricName.match(variableRegex);\n      if (matchResult && matchResult.length > 0) {\n        matchResult.forEach((template: any) => {\n          const scopedVars: ScopedVars = {};\n          const resolvedSeriesNames = replaceVariables(\n            template, scopedVars, customFormatter)\n            .split(CUSTOM_SPLIT_DELIMITER);\n\n          resolvedSeriesNames.forEach((seriesName) => {\n            const newName = override.metricName.replace(template, seriesName);\n            ret.push({\n              ...override,\n              metricName: newName,\n            });\n          });\n        });\n      } else {\n        // does not match template, but can match a simple regex\n        ret.push(override);\n      }\n    }\n  });\n\n  return ret;\n};\n\nexport const MatchOverride = (pattern: string, overrides: OverrideItemType[], replaceVariables: InterpolateFunction): OverrideItemType | null => {\n  const resolvedOverrides = resolveOverrideTemplates(overrides, replaceVariables);\n  for (let index = 0; index < resolvedOverrides.length; index++) {\n    const anOverride = resolvedOverrides[index];\n    const regex = stringToJsRegex(anOverride.metricName);\n    const matches = pattern.match(regex);\n    if (matches && matches.length > 0 && anOverride.enabled) {\n      return resolvedOverrides[index];\n    }\n  }\n  return null;\n};\n\nexport const ApplyOverrides = (\n  overrides: OverrideItemType[],\n  data: PolystatModel[],\n  fieldConfig: FieldConfigSource<any>,\n  globalFillColor: string,\n  globalThresholds: PolystatThreshold[],\n  replaceVariables: InterpolateFunction,\n  timeZone: string,\n  themeV1: GrafanaTheme, // V8\n  themeV2: GrafanaTheme2 // V9+\n) => {\n  // determine real color\n  let realGlobalFillColor = '';\n  if (typeof themeV2.visualization !== 'undefined') {\n    realGlobalFillColor = themeV2.visualization.getColorByName(globalFillColor);\n  } else {\n    // intentional use of deprecated function for v8 compat\n    // eslint-disable-next-line deprecation/deprecation\n    realGlobalFillColor = getColorForTheme(globalFillColor, themeV1);\n  }\n\n  if (!overrides) {\n    return data;\n  }\n\n  for (let index = 0; index < data.length; index++) {\n    const anOverride = MatchOverride(data[index].name, overrides, replaceVariables);\n    if (anOverride) {\n      const aSeries = data[index];\n      // set the operators\n      aSeries.operatorName = anOverride.operatorName;\n      const dataValue = GetValueByOperator(aSeries.name, aSeries, aSeries.operatorName, aSeries.stats);\n      // Use defaults or the specific threshold\n      const thresholds =\n        anOverride.thresholds && anOverride.thresholds.length ? anOverride.thresholds : globalThresholds;\n      const result = getThresholdLevelForValue(thresholds, dataValue, globalFillColor);\n      let useColor = result.color;\n      if (typeof themeV2.visualization !== 'undefined') {\n        useColor = themeV2.visualization.getColorByName(result.color);\n      } else {\n        // intentional use of deprecated function for v8 compat\n        // eslint-disable-next-line deprecation/deprecation\n        useColor = getColorForTheme(result.color, themeV1);\n      }\n      // set value to what was returned\n      data[index].value = dataValue;\n      data[index].color = useColor;\n      data[index].thresholdLevel = result.thresholdLevel;\n      // format it\n      // TODO: fix me!\n      const mappedValue = GetMappedValue(fieldConfig.defaults.mappings!, data[index].value);\n      if (mappedValue && mappedValue.text !== '') {\n        data[index].valueFormatted = mappedValue.text;\n        // set color also\n        if (mappedValue.color) {\n          let realColor = themeV2.visualization.getColorByName(mappedValue.color);\n          data[index].color = realColor;\n        } else {\n          data[index].color = realGlobalFillColor;\n        }\n        // override the timestamp format also\n        if (anOverride.showTimestampEnabled) {\n          data[index].timestampFormatted = TimeFormatter(timeZone, data[index].timestamp, anOverride.showTimestampFormat);\n          data[index].showTimestamp = true;\n        }\n      } else {\n        const formatFunc = getValueFormat(anOverride.unitFormat);\n        if (formatFunc) {\n          // put the value in quotes to escape \"most\" special characters\n          const decimals: number = +anOverride.decimals;\n          const formatted = formatFunc(data[index].value, decimals, anOverride.scaledDecimals);\n          data[index].valueFormatted = formatted.text;\n          // spaces are included with the formatFunc\n          if (formatted.suffix) {\n            data[index].valueFormatted += formatted.suffix;\n          }\n          if (formatted.prefix) {\n            data[index].valueFormatted = formatted.prefix + data[index].valueFormatted;\n          }\n          data[index].valueRounded = roundValue(data[index].value, decimals) || data[index].value;\n        }\n        // process the timestamp display\n        if (anOverride.showTimestampEnabled) {\n          data[index].timestampFormatted = TimeFormatter(timeZone, data[index].timestamp, anOverride.showTimestampFormat);\n          data[index].showTimestamp = true;\n        }\n\n      }\n      // add prefix/suffix to formatted value\n      if (anOverride.prefix !== '') {\n        data[index].valueFormatted = anOverride.prefix + ' ' + data[index].valueFormatted;\n      }\n      if (anOverride.suffix !== '') {\n        data[index].valueFormatted = data[index].valueFormatted + ' ' + anOverride.suffix;\n      }\n      if (anOverride.alias !== '') {\n        data[index].displayName = anOverride.alias;\n      }\n      data[index].prefix = anOverride.prefix;\n      data[index].suffix = anOverride.suffix;\n      // set the url, replace template vars\n      if (anOverride.clickThrough && anOverride.clickThrough.length > 0) {\n        let url = anOverride.clickThrough;\n        // apply both types of transforms, one targeted at the data item index, and secondly the nth variant\n        url = ClickThroughTransformer.transformSingleMetric(index, url, data);\n        url = ClickThroughTransformer.transformNthMetric(url, data);\n        url = ClickThroughTransformer.transformByRegex(anOverride.metricName, data[index], url);\n        if (replaceVariables) {\n          url = replaceVariables(url);\n        }\n        data[index].clickThrough = url;\n        data[index].newTabEnabled = anOverride.clickThroughOpenNewTab;\n        data[index].sanitizeURLEnabled = anOverride.clickThroughSanitize;\n        // provide both versions, what is displayed is determined later\n        data[index].sanitizedURL = textUtil.sanitize(data[index].clickThrough);\n        data[index].customClickthroughTargetEnabled = anOverride.clickThroughCustomTargetEnabled;\n        data[index].customClickthroughTarget = anOverride.clickThroughCustomTarget;\n      }\n    } else if (globalThresholds && globalThresholds.length) {\n      const result = getThresholdLevelForValue(globalThresholds, data[index].value, globalFillColor);\n      // set value to what was returned\n      data[index].color = result.color;\n      data[index].thresholdLevel = result.thresholdLevel;\n    }\n  }\n  return data;\n};\n","import { InsertTime } from './deframer';\nimport {\n  Field,\n  FieldType,\n  reduceField,\n  textUtil,\n  DataFrame,\n  PanelData,\n  getFieldDisplayName,\n  dateTime,\n  formattedValueToString,\n  getValueFormat,\n  stringToJsRegex,\n  InterpolateFunction,\n  FieldConfigSource,\n  GrafanaTheme2,\n  GrafanaTheme,\n} from '@grafana/data';\nimport { includes as lodashIncludes } from 'lodash';\nimport { DisplayModes, OperatorOptions, PolystatModel } from '../components/types';\nimport { GLOBAL_FILL_COLOR_RGBA } from '../components/defaults';\nimport { GetDecimalsForValue, SortVariableValuesByField, roundValue } from '../utils';\nimport { ApplyComposites } from './composite_processor';\nimport { CompositeItemType } from 'components/composites/types';\nimport { ApplyOverrides } from './override_processor';\nimport { OverrideItemType } from '../components/overrides/types';\nimport { PolystatThreshold } from '../components/thresholds/types';\nimport { ClickThroughTransformer } from './clickThroughTransformer';\nimport { GetMappedValue } from './valueMappingsWrapper';\nimport { GetValueByOperator } from './stats';\nimport { TimeFormatter } from './time_formatter';\n\n/**\n * Converts dataframes to internal model\n *\n * @param   {DataFrame[]}    data                [data description]\n * @param   {string[]}     globalRegexPattern  [globalRegexPattern description]\n *\n * @return  {DataFrame[]}                      [return description]\n */\nexport function ProcessDataFrames(\n  compositesEnabled: boolean,\n  composites: CompositeItemType[],\n  overrides: OverrideItemType[],\n  data: PanelData,\n  replaceVariables: InterpolateFunction,\n  fieldConfig: FieldConfigSource<any>,\n  globalClickthrough: string,\n  globalClickthroughTabEnabled: boolean,\n  globalClickthroughSanitizedEnabled: boolean,\n  globalClickthroughCustomTargetEnabled: boolean,\n  globalClickthroughCustomTarget: string,\n  globalOperator: string,\n  globalDecimals: number,\n  globalDisplayMode: string,\n  globalRegexPattern: string,\n  globalFillColor: string,\n  globalThresholds: PolystatThreshold[],\n  globalUnitFormat: string,\n  globalShowLabel: boolean,\n  globalShowValue: boolean,\n  globalShowTimestamp: boolean,\n  globalShowTimestampFormat: string,\n  sortByDirection: number,\n  sortByField: string,\n  compositesGlobalAliasingEnabled: boolean,\n  timeZone: string,\n  themeV1: GrafanaTheme,\n  themeV2: GrafanaTheme2,\n): PolystatModel[] {\n\n  // check if data contains a field called Time of type time\n  let processedData = InsertTime(data.series);\n  let internalData = [] as PolystatModel[];\n\n  processedData.map((item) => {\n    const models = DataFrameToPolystat(item, globalOperator);\n    for (const aModel of models) {\n      internalData.push(aModel);\n    }\n  });\n  internalData = ApplyGlobalRegexPattern(internalData, globalRegexPattern);\n  // formatting can change colors due to value maps\n  internalData = ApplyGlobalFormatting(\n    internalData,\n    fieldConfig,\n    globalUnitFormat,\n    globalDecimals,\n    globalFillColor,\n    globalShowLabel,\n    globalShowValue,\n    globalShowTimestamp,\n    globalShowTimestampFormat,\n    timeZone,\n    themeV2);\n  // applies overrides and global thresholds (and mappings)\n  internalData = ApplyOverrides(\n    overrides,\n    internalData,\n    fieldConfig,\n    globalFillColor,\n    globalThresholds,\n    replaceVariables,\n    timeZone,\n    themeV1,\n    themeV2\n  );\n  // composites\n  if (compositesEnabled) {\n    internalData = ApplyComposites(\n      composites,\n      internalData,\n      replaceVariables,\n      compositesGlobalAliasingEnabled,\n      timeZone,\n      globalRegexPattern);\n  }\n  // clickthroughs\n  internalData = ApplyGlobalClickThrough(\n    internalData,\n    globalClickthrough,\n    globalClickthroughTabEnabled,\n    globalClickthroughSanitizedEnabled,\n    globalClickthroughCustomTargetEnabled,\n    globalClickthroughCustomTarget,\n    replaceVariables\n  );\n  // filter by global display mode\n  internalData = FilterByGlobalDisplayMode(internalData, globalDisplayMode);\n  // final step sorting\n  internalData = SortVariableValuesByField(internalData, sortByField, sortByDirection);\n  return internalData;\n}\n\n/**\n * renames according to a global regex pattern\n * @param {PolystatModel[]} data [series description]\n * @param {string[]} regexPattern [regexPattern description]\n * @return {PolystatModel[]} [return description]\n */\nexport const ApplyGlobalRegexPattern = (data: PolystatModel[], regexPattern: string): PolystatModel[] => {\n  for (let i = 0; i < data.length; i++) {\n    if (regexPattern !== '') {\n      const regexVal = stringToJsRegex(regexPattern);\n      if (data[i].name && regexVal.test(data[i].name.toString())) {\n        const temp = regexVal.exec(data[i].name.toString());\n        if (!temp) {\n          continue;\n        }\n        let extractedTxt = '';\n        if (temp.length > 1) {\n          temp.slice(1).forEach((value, i) => {\n            if (value) {\n              extractedTxt += extractedTxt.length > 0 ? ' ' + value.toString() : value.toString();\n            }\n          });\n          data[i].displayName = extractedTxt;\n        }\n      }\n    }\n  }\n  return data;\n};\n\nexport const ApplyGlobalClickThrough = (\n  data: PolystatModel[],\n  globalClickthrough: string,\n  globalClickthroughNewTabEnabled: boolean,\n  globalClickthroughSanitizedEnabled: boolean,\n  globalClickthroughCustomTargetEnabled: boolean,\n  globalClickthroughCustomTarget: string,\n  replaceVariables: InterpolateFunction\n): PolystatModel[] => {\n  for (let index = 0; index < data.length; index++) {\n    if (data[index].clickThrough.length === 0) {\n      data[index].clickThrough = processDefaultClickThrough(index, globalClickthrough, data, replaceVariables);\n      data[index].newTabEnabled = globalClickthroughNewTabEnabled;\n      data[index].sanitizeURLEnabled = globalClickthroughSanitizedEnabled;\n      // always provide both versions and overrides and composites can specify which one to use\n      data[index].sanitizedURL = textUtil.sanitize(data[index].clickThrough);\n      data[index].customClickthroughTargetEnabled = globalClickthroughCustomTargetEnabled;\n      data[index].customClickthroughTarget = globalClickthroughCustomTarget;\n    }\n  }\n  return data;\n};\n\n/**\n * Only called for dataframes that do not have a clickthrough specified via overrides or composites.\n * @param {number}              index\n * @param {string}              globalClickthrough string containing the GlobalClickthrough text\n * @param {PolystatModel[]}     data array of data\n * @param {InterpolateFunction} replaceVariables function from template server\n * @return {string} New URL with default clickthrough processed replacements and template variables\n */\nexport const processDefaultClickThrough = (\n  index: number,\n  globalClickthrough: string,\n  data: PolystatModel[],\n  replaceVariables: InterpolateFunction): string => {\n  let url = globalClickthrough;\n  // apply both types of transforms, one targeted at the data item index, and secondly the nth variant\n  url = ClickThroughTransformer.transformSingleMetric(index, url, data);\n  url = ClickThroughTransformer.transformNthMetric(url, data);\n  // process template variables inside clickthrough\n  url = replaceVariables(url);\n  return url;\n};\n\nexport const ApplyGlobalFormatting = (\n  data: PolystatModel[],\n  fieldConfig: FieldConfigSource<any>,\n  globalUnitFormat: string,\n  globalDecimals: number,\n  globalFillColor: string,\n  globalShowLabel: boolean,\n  globalShowValue: boolean,\n  globalShowTimestampEnabled: boolean,\n  globalShowTimestampFormat: string,\n  timeZone: string,\n  theme: GrafanaTheme2\n): PolystatModel[] => {\n  let realGlobalFillColor = theme.visualization.getColorByName(globalFillColor);\n  const formatFunc = getValueFormat(globalUnitFormat);\n  for (let index = 0; index < data.length; index++) {\n    // Check for mapped value, if nothing set, format value\n    if (data[index].value !== null) {\n      data[index].showName = globalShowLabel;\n      data[index].showValue = globalShowValue;\n      const mappedValue = GetMappedValue(fieldConfig.defaults.mappings!, data[index].value);\n      if (mappedValue && mappedValue.text !== '') {\n        data[index].valueFormatted = mappedValue.text;\n        if (globalShowTimestampEnabled) {\n          data[index].timestampFormatted = TimeFormatter(timeZone, data[index].timestamp, globalShowTimestampFormat);\n          data[index].showTimestamp = true;\n        }\n        // set color also\n        if (mappedValue.color) {\n          let realColor = theme.visualization.getColorByName(mappedValue.color);\n          data[index].color = realColor;\n        } else {\n          data[index].color = realGlobalFillColor;\n        }\n      } else {\n        if (formatFunc) {\n          const result = GetDecimalsForValue(data[index].value, globalDecimals);\n          const formatted = formatFunc(data[index].value, result.decimals, result.scaledDecimals);\n          data[index].valueFormatted = formatted.text;\n          if (formatted.suffix) {\n            data[index].valueFormatted += ` ${formatted.suffix}`;\n          }\n          if (formatted.prefix) {\n            data[index].valueFormatted = `{$formatted.prefix} ${data[index].valueFormatted}`;\n          }\n          const valueRounded = roundValue(data[index].value, result.decimals);\n          if (valueRounded !== null) {\n            data[index].valueRounded = valueRounded;\n          }\n          if (globalShowTimestampEnabled) {\n            data[index].timestampFormatted = TimeFormatter(timeZone, data[index].timestamp, globalShowTimestampFormat);\n            data[index].showTimestamp = true;\n          }\n        }\n        data[index].color = realGlobalFillColor;\n      }\n    }\n  }\n  return data;\n};\n\nconst FilterByGlobalDisplayMode = (data: any, globalDisplayMode: string): PolystatModel[] => {\n  const filteredMetrics: number[] = [];\n  const compositeMetrics: PolystatModel[] = [];\n  if (globalDisplayMode !== 'all') {\n    const dataLen = data.length;\n    for (let i = 0; i < dataLen; i++) {\n      const item = data[i];\n      // keep if composite\n      if (item.isComposite) {\n        compositeMetrics.push(item);\n      }\n      if (item.thresholdLevel < 1) {\n        // push the index number\n        filteredMetrics.push(i);\n      }\n    }\n    // remove filtered metrics, use splice in reverse order\n    for (let i = data.length; i >= 0; i--) {\n      if (lodashIncludes(filteredMetrics, i)) {\n        data.splice(i, 1);\n      }\n    }\n    if (data.length === 0) {\n      if (compositeMetrics.length > 0) {\n        // set data to be all of the composites\n        data = compositeMetrics;\n      }\n    }\n  }\n  return data;\n};\n\nexport const DataFrameToPolystat = (frame: DataFrame, globalOperator: string): PolystatModel[] => {\n\n  const valueFields: Field[] = [];\n  let newestTimestamp = 0;\n\n  for (const aField of frame.fields) {\n    if (aField.type === FieldType.number) {\n      valueFields.push(aField);\n    }\n    else if (aField.type === FieldType.time) {\n      // get the \"newest\" timestamp from data\n      // check if timestamp is 0\n      let aTimestamp = 0;\n      let timestampIndex = aField.values.length - 1;\n      try {\n        aTimestamp = aField.values.get(timestampIndex);\n      } catch {\n        // @ts-ignore, workaround for 9.5+ removal of VectorArray\n        aTimestamp = aField.values[timestampIndex];\n      }\n      if (newestTimestamp === 0) {\n        newestTimestamp = aTimestamp;\n      }\n      // check if data timestamp is newer\n      if (aTimestamp > newestTimestamp) {\n        newestTimestamp = aTimestamp;\n      }\n    }\n  }\n  if (newestTimestamp === 0) {\n    // use current time if none is found\n    newestTimestamp = new Date().getTime()\n  }\n  const models: PolystatModel[] = [];\n\n  for (const valueField of valueFields) {\n    const valueFieldName = getFieldDisplayName(valueField!, frame);\n    const standardCalcs = reduceField({ field: valueField!, reducers: ['bogus'] });\n    //\n    // side effect of getFieldDisplayName: it modifies content of valueField.state by adding a displayName\n    // file a bug? deframer has been fixed to clone the the field.state to work around the issue\n    //\n    //if (valueField.state?.displayName !== undefined) {\n    //  delete valueField.state?.displayName;\n    //}\n    const operatorValue = GetValueByOperator(valueFieldName, null, globalOperator, standardCalcs);\n\n    let maxDecimals = 4;\n    if (valueField!.config.decimals !== undefined && valueField!.config.decimals !== null) {\n      maxDecimals = valueField!.config.decimals;\n    }\n    const result = getValueFormat(valueField!.config.unit)(operatorValue, maxDecimals, undefined, undefined);\n    const valueFormatted = formattedValueToString(result);\n    const model: PolystatModel = {\n      displayMode: DisplayModes[0].value,\n      thresholdLevel: 0,\n      value: operatorValue,\n      valueFormatted: valueFormatted,\n      valueRounded: roundValue(operatorValue, maxDecimals) || operatorValue,\n      stats: standardCalcs,\n      name: valueFieldName,\n      displayName: valueFieldName,\n      timestamp: newestTimestamp,\n      timestampFormatted: '',\n      prefix: '',\n      suffix: '',\n      color: GLOBAL_FILL_COLOR_RGBA,\n      clickThrough: '',\n      operatorName: OperatorOptions[0].value,\n      newTabEnabled: true,\n      sanitizedURL: '',\n      sanitizeURLEnabled: true,\n      showName: true,\n      showValue: true,\n      showTimestamp: false,\n      isComposite: false,\n      members: [],\n      customClickthroughTargetEnabled: false,\n      customClickthroughTarget: ''\n    };\n    models.push(model);\n  }\n  return models;\n}\n","import React, { useEffect, useState } from 'react';\n\nimport { PanelProps, GrafanaTheme2, LoadingState } from '@grafana/data';\nimport { PolystatOptions, PolystatModel } from './types';\nimport { Polystat } from './Polystat';\nimport { css, cx } from '@emotion/css';\nimport { useStyles2, useTheme, useTheme2 } from '@grafana/ui';\nimport { ProcessDataFrames } from '../data/processor';\n\ninterface Props extends PanelProps<PolystatOptions> {}\n\nconst getComponentStyles = (theme: GrafanaTheme2) => {\n  return {\n    wrapper: css`\n      position: relative;\n    `,\n    container: css`\n      align-items: center;\n      justify-content: center;\n      display: flex;\n      height: 100%;\n      width: 100%;\n      & svg > g > polygon {\n        fill: transparent;\n      }\n    `,\n  };\n};\n\n\nexport const PolystatPanel: React.FC<Props> = ({ options, data, id, width, height, replaceVariables, fieldConfig, timeZone }) => {\n  const styles = useStyles2(getComponentStyles);\n  const currentThemeV1 = useTheme(); // V8\n  const currentThemeV2 = useTheme2(); // V9+\n  let [cachedProcessedData, setCachedProcessedData] = useState<PolystatModel[]>();\n  useEffect(() => {\n    if (data.state === LoadingState.Done) {\n      // each series is a converted to a model we can use\n      const processedData = ProcessDataFrames(\n        options.compositeConfig.enabled,\n        options.compositeConfig.composites,\n        options.overrideConfig.overrides,\n        data,\n        replaceVariables,\n        fieldConfig,\n        options.globalClickthrough,\n        options.globalClickthroughNewTabEnabled,\n        options.globalClickthroughSanitizedEnabled,\n        options.globalClickthroughCustomTargetEnabled,\n        options.globalClickthroughCustomTarget,\n        options.globalOperator,\n        options.globalDecimals,\n        options.globalDisplayMode,\n        options.globalRegexPattern,\n        options.globalFillColor,\n        options.globalThresholdsConfig,\n        options.globalUnitFormat,\n        true, // TODO: future configurable global option to not display label\n        options.globalShowValueEnabled,\n        options.globalShowTimestampEnabled,\n        options.globalShowTimestampFormat,\n        options.sortByDirection,\n        options.sortByField,\n        options.compositeGlobalAliasingEnabled,\n        timeZone,\n        currentThemeV1,\n        currentThemeV2,\n      );\n      setCachedProcessedData(processedData);\n\n    }\n  }, [data, fieldConfig, options, replaceVariables, currentThemeV1, currentThemeV2, timeZone]);\n\n  if (cachedProcessedData === undefined) {\n    return (\n      <>Loading... please wait</>\n    )\n  }\n\n  return (\n    <div\n      className={cx(\n        styles.wrapper,\n        css`\n          width: ${width}px;\n          height: ${height}px;\n        `\n      )}\n    >\n      <div className={cx(styles.container)}>\n        <Polystat\n          compositeConfig={options.compositeConfig}\n          overrideConfig={options.overrideConfig}\n          autoSizePolygons={options.autoSizePolygons}\n          globalAutoScaleFonts={options.globalAutoScaleFonts}\n          globalClickthrough={options.globalClickthrough}\n          globalClickthroughNewTabEnabled={options.globalClickthroughNewTabEnabled}\n          globalClickthroughSanitizedEnabled={options.globalClickthroughSanitizedEnabled}\n          globalClickthroughCustomTargetEnabled={options.globalClickthroughCustomTargetEnabled}\n          globalClickthroughCustomTarget={options.globalClickthroughCustomTarget}\n          globalOperator={options.globalOperator}\n          globalDecimals={options.globalDecimals}\n          globalDisplayMode={options.globalDisplayMode}\n          globalDisplayTextTriggeredEmpty={options.globalDisplayTextTriggeredEmpty}\n          globalFontSize={options.globalFontSize}\n          globalPolygonSize={options.globalPolygonSize}\n          ellipseCharacters={options.ellipseCharacters}\n          ellipseEnabled={options.ellipseEnabled}\n          globalFillColor={options.globalFillColor}\n          globalRegexPattern={options.globalRegexPattern}\n          globalGradientsEnabled={options.globalGradientsEnabled}\n          globalShowTimestampEnabled={options.globalShowTimestampEnabled}\n          globalShowTimestampFormat={options.globalShowTimestampFormat}\n          globalShowTimestampPosition={options.globalShowTimestampPosition}\n          globalShowTimestampFontSize={options.globalShowTimestampFontSize}\n          globalShowTimestampYOffset={options.globalShowTimestampYOffset}\n          globalTextFontAutoColor={options.globalTextFontAutoColorEnabled ? currentThemeV2.colors.text.primary : '#000000'}\n          globalTextFontAutoColorEnabled={options.globalTextFontAutoColorEnabled}\n          globalTextFontColor={options.globalTextFontColor}\n          globalTextFontFamily={options.globalTextFontFamily}\n          globalThresholdsConfig={options.globalThresholdsConfig}\n          globalTooltipsEnabled={options.globalTooltipsEnabled}\n          globalTooltipsShowTimestampEnabled={options.globalTooltipsShowTimestampEnabled}\n          globalTooltipsShowValueEnabled={options.globalTooltipsShowValueEnabled}\n          globalTooltipsFontFamily={options.globalTooltipsFontFamily}\n          globalUnitFormat={options.globalUnitFormat}\n          autoSizeColumns={options.autoSizeColumns}\n          autoSizeRows={options.autoSizeRows}\n          layoutDisplayLimit={options.layoutDisplayLimit}\n          layoutNumColumns={options.layoutNumColumns}\n          layoutNumRows={options.layoutNumRows}\n          processedData={cachedProcessedData}\n          panelId={id}\n          panelWidth={width}\n          panelHeight={height}\n          radius={options.radius}\n          renderTime={new Date()}\n          globalShape={options.globalShape}\n          sortByDirection={options.sortByDirection}\n          sortByField={options.sortByField}\n          globalPolygonBorderColor={options.globalPolygonBorderColor}\n          globalPolygonBorderSize={options.globalPolygonBorderSize}\n          globalShowValueEnabled={options.globalShowValueEnabled}\n          globalShowTooltipColumnHeadersEnabled={options.globalShowTooltipColumnHeadersEnabled}\n          tooltipPrimarySortDirection={options.tooltipPrimarySortDirection}\n          tooltipPrimarySortByField={options.tooltipPrimarySortByField}\n          tooltipSecondarySortDirection={options.tooltipSecondarySortDirection}\n          tooltipSecondarySortByField={options.tooltipSecondarySortByField}\n          tooltipDisplayMode={options.tooltipDisplayMode}\n          tooltipDisplayTextTriggeredEmpty={options.tooltipDisplayTextTriggeredEmpty}\n          compositeGlobalAliasingEnabled={options.compositeGlobalAliasingEnabled}\n        />\n      </div>\n    </div>\n  );\n};\n","import { SelectableValue } from '@grafana/data';\n\nexport const DisplayModes: SelectableValue[] = [\n  { value: 'all', label: 'Show All' },\n  { value: 'triggered', label: 'Show Triggered' },\n];\n\nexport interface CompositeMetric {\n  seriesMatch: string;\n  compositeMatch?: CompositeItemType[];\n  alias?: string;\n  ID?: string;\n  order: number;\n  seriesName?: string;\n  seriesNameEscaped?: string;\n}\n\nexport interface CompositeItemType {\n  name: string;\n  label: string;\n  order: number;\n  isTemplated: boolean;\n  displayMode: string;\n  enabled: boolean;\n  showName: boolean;\n  showValue: boolean;\n  showComposite: boolean;\n  showMembers: boolean;\n  showTimestampEnabled: boolean;\n  showTimestampFormat: string;\n  showTimestampYOffset: number;\n  metrics: CompositeMetric[];\n  clickThrough: string | '';\n  clickThroughSanitize: boolean;\n  clickThroughOpenNewTab: boolean;\n  clickThroughCustomTargetEnabled: boolean;\n  clickThroughCustomTarget: string;\n}\n\nexport interface CompositeItemTracker {\n  composite: CompositeItemType;\n  order: number;\n  ID: string;\n}\n\nexport interface CompositeItemProps {\n  composite: CompositeItemType;\n  ID: string;\n  enabled: boolean;\n  setter: any;\n  remover: any;\n  moveUp: any;\n  moveDown: any;\n  createDuplicate: any;\n  context: any;\n}\n\nexport interface CompositeMetricItemProps {\n  metric: CompositeMetric;\n  index: number;\n  disabled: boolean;\n  removeMetric: any;\n  updateMetric: any;\n  updateMetricAlias: any;\n  context: any;\n}\n","import React, { useEffect, useState } from 'react';\n\nimport { Input, Field, IconButton, HorizontalGroup, Cascader, CascaderOption, FieldSet } from '@grafana/ui';\nimport { CompositeMetricItemProps } from './types';\nimport { getMetricHints } from '../metric_hints';\n\nexport const CompositeMetricItem: React.FC<CompositeMetricItemProps> = (props) => {\n  const [metricHints, setMetricHints] = useState<CascaderOption[]>([]);\n\n  async function copySelectedMetricToClipboard(index: number) {\n    if (props.metric.seriesMatch) {\n      const aValue = props.metric.seriesMatch;\n      if ('clipboard' in navigator) {\n        if (aValue) {\n          return await navigator.clipboard.writeText(aValue);\n        }\n      } else {\n        if (aValue) {\n          // use the old method if clipboard is not available\n          // eslint-disable-next-line deprecation/deprecation\n          return document.execCommand('copy', true, aValue);\n        }\n      }\n    }\n  }\n\n  const updateMetric = (v: string) => {\n    props.updateMetric(props.index, v);\n  };\n  const updateMetricAlias = (alias: string) => {\n    props.updateMetricAlias(props.index, alias);\n  };\n\n  useEffect(() => {\n    if (props.context.data) {\n      const frames = props.context.data;\n      let hints: CascaderOption[] = [];\n      let metricHints = getMetricHints(frames);\n      for (const metricName of metricHints) {\n        hints.push({\n          label: metricName,\n          value: metricName,\n        });\n      }\n      setMetricHints(hints);\n    }\n  }, [props.context.data]);\n\n  return (\n    <FieldSet>\n      <HorizontalGroup>\n        <IconButton\n          key=\"deleteMetric\"\n          variant=\"destructive\"\n          name=\"trash-alt\"\n          tooltip=\"Delete this metric\"\n          onClick={() => props.removeMetric(props.index)}\n        />\n        <IconButton\n          key=\"copyMetric\"\n          variant=\"secondary\"\n          name=\"copy\"\n          tooltip=\"Copy Metric/Regex\"\n          onClick={() => copySelectedMetricToClipboard(props.index)}\n        />\n        <Field label=\"Metric/RegEx\" id={`cmi-field-index-${props.index}`} style={{ minWidth: '175px' }} disabled={props.disabled}>\n          <Cascader\n            key={`cmi-cascader-index-${props.index}`}\n            initialValue={props.metric.seriesMatch}\n            allowCustomValue\n            placeholder=\"\"\n            options={metricHints}\n            onSelect={(val: string) => updateMetric(val)}\n          />\n        </Field>\n        <Field label=\"Alias\" disabled={props.disabled}>\n          <Input value={props.metric.alias}\n            id={`cmi-alias-index-${props.index}`}\n            placeholder=\"\" onChange={(e) => updateMetricAlias(e.currentTarget.value)} />\n        </Field>\n      </HorizontalGroup>\n    </FieldSet>\n  );\n};\n","import React, { useState } from 'react';\n\nimport { IconName, Button, Input, Select, Field, FieldSet, Switch, Card, IconButton, Cascader } from '@grafana/ui';\nimport { DisplayModes, CompositeItemProps, CompositeMetric, CompositeItemType } from './types';\nimport { CompositeMetricItem } from './CompositeMetricItem';\nimport { v4 as UUIDv4 } from 'uuid';\nimport { SelectableValue } from '@grafana/data';\nimport { ShowTimestampFormats } from 'components/types';\n\nexport const CompositeItem: React.FC<CompositeItemProps> = (props: CompositeItemProps) => {\n  const [composite, _setComposite] = useState(props.composite);\n  const getDisplayMode = (displayMode: string) => {\n    const keys = DisplayModes.keys();\n    for (const aKey of keys) {\n      if (DisplayModes[aKey].value === displayMode) {\n        return DisplayModes[aKey];\n      }\n    }\n    // no match, return all by default\n    return DisplayModes[0];\n  };\n  const [displayMode, setDisplayMode] = useState<SelectableValue>(getDisplayMode(props.composite.displayMode));\n  const setComposite = (value: CompositeItemType) => {\n    _setComposite(value);\n    props.setter(composite.order, value);\n  };\n  const [visibleIcon] = useState<IconName>('eye');\n  const [hiddenIcon] = useState<IconName>('eye-slash');\n  const removeItem = () => {\n    //alert('high');\n    props.remover(composite.order);\n    // call parent remove function\n  };\n\n  const toggleShowName = () => {\n    const currentState = composite.showName;\n    //setShowName(!currentState);\n    setComposite({ ...composite, showName: !currentState });\n  };\n\n  const removeMetric = (index: number) => {\n    let allMetrics = [...props.composite.metrics];\n    allMetrics.splice(index, 1);\n    setComposite({ ...props.composite, metrics: allMetrics });\n  };\n  const moveUp = () => {\n    props.moveUp(composite.order);\n  };\n  const moveDown = () => {\n    props.moveDown(composite.order);\n  };\n  const createDuplicate = () => {\n    props.createDuplicate(composite.order);\n  };\n\n  const updateMetric = (index: number, value: string) => {\n    const allMetrics = props.composite.metrics;\n    allMetrics[index].seriesMatch = value;\n    setComposite({ ...props.composite, metrics: allMetrics });\n  };\n\n  const updateMetricAlias = (index: number, alias: string) => {\n    const allMetrics = props.composite.metrics;\n    allMetrics[index].alias = alias;\n    setComposite({ ...props.composite, metrics: allMetrics });\n  };\n\n  const addMetric = () => {\n    const newMetric: CompositeMetric = {\n      seriesMatch: '',\n      ID: UUIDv4(),\n      order: 0,\n    };\n    if (!composite.metrics) {\n      const currentMetrics: CompositeMetric[] = [];\n      currentMetrics.push(newMetric);\n      setComposite({ ...composite, metrics: currentMetrics });\n    } else {\n      const currentMetrics: CompositeMetric[] = composite.metrics;\n      newMetric.order = currentMetrics.length;\n      currentMetrics.push(newMetric);\n      setComposite({ ...composite, metrics: currentMetrics });\n    }\n  };\n\n  return (\n    <Card key={`composite-card-${props.ID}`}>\n      <Card.Meta>\n        <FieldSet>\n          <Field label=\"Composite Name\" description=\"Name or Regular Expression\" disabled={!composite.showComposite}>\n            <Input\n              value={composite.name}\n              placeholder=\"\"\n              onChange={(e) => setComposite({ ...composite, name: e.currentTarget.value })}\n            />\n          </Field>\n          <Field label=\"Show Name\" description=\"Toggle Display of composite name\" disabled={!composite.showComposite}>\n            <Switch\n              transparent={true}\n              value={composite.showName}\n              disabled={!composite.showComposite}\n              onChange={toggleShowName}\n            ></Switch>\n          </Field>\n          <Field label=\"Show Value\" description=\"Toggle Display of composite value\" disabled={!composite.showComposite}>\n            <Switch\n              transparent={true}\n              value={composite.showValue}\n              disabled={!composite.showComposite}\n              onChange={() => setComposite({ ...composite, showValue: !composite.showValue })}\n            />\n          </Field>\n          {/*\n          <Field label=\"Show Timestamp\" description=\"Toggle Display of Timestamp for each value\" disabled={!composite.showComposite}>\n            <Switch\n              transparent={true}\n              value={composite.showTimestampEnabled}\n              disabled={!composite.showComposite}\n              onChange={() => setComposite({ ...composite, showTimestampEnabled: !composite.showTimestampEnabled })}\n            />\n          </Field>\n          <Field label=\"Timestamp Format\" description=\"Format of timestamp to display\" disabled={!composite.showComposite} hidden={!composite.showTimestampEnabled}>\n            <Cascader\n              initialValue={composite.showTimestampFormat}\n              allowCustomValue\n              placeholder=\"\"\n              options={ShowTimestampFormats}\n              onSelect={(val: string) => setComposite({ ...composite, showTimestampFormat: val })}\n            />\n          </Field>\n          <Field label=\"Timestamp Y Offset\" description=\"Adjust the displayed timestamp up or down the Y-Axis, use negative value to move up, positive for down\" disabled={!composite.showComposite} hidden={!composite.showTimestampEnabled}>\n            <Input\n              value={composite.showTimestampYOffset}\n              type=\"number\"\n              step={1}\n              placeholder=\"0\"\n              onChange={(v) => setComposite({ ...composite, showTimestampYOffset: v.currentTarget.valueAsNumber })}\n            />\n          </Field>\n          */}\n          <Field\n            label=\"Show Members\"\n            description=\"Toggle Display of composite members\"\n            disabled={!composite.showComposite}\n          >\n            <Switch\n              transparent={true}\n              value={composite.showMembers}\n              disabled={!composite.showComposite}\n              onChange={() => setComposite({ ...composite, showMembers: !composite.showMembers })}\n            />\n          </Field>\n          <Field\n            label=\"Display Mode\"\n            description=\"All will display all members, Triggered will only display those meeting threshold settings\"\n            disabled={!composite.showComposite}\n          >\n            <Select\n              menuShouldPortal={true}\n              value={displayMode}\n              onChange={(v) => {\n                setDisplayMode(v);\n                setComposite({ ...composite, displayMode: v.value });\n              }}\n              options={DisplayModes}\n            />\n          </Field>\n          <Field label=\"Clickthrough URL\" description=\"URL to Open on Click\" disabled={!composite.showComposite}>\n            <Input\n              value={composite.clickThrough}\n              placeholder=\"https://\"\n              onChange={(e) => setComposite({ ...composite, clickThrough: e.currentTarget.value })}\n            />\n          </Field>\n          <Field label=\"Sanitize URL\" description=\"Sanitize URL before evaluating\" disabled={!composite.showComposite}>\n            <Switch\n              transparent={false}\n              disabled={!composite.showComposite}\n              value={composite.clickThroughSanitize}\n              onChange={() => setComposite({ ...composite, clickThroughSanitize: !composite.clickThroughSanitize })}\n            />\n          </Field>\n          <Field label=\"Open URL in New Tab\" description=\"Open link in new tab\" disabled={!composite.showComposite}>\n            <Switch\n              transparent={false}\n              value={composite.clickThroughOpenNewTab}\n              disabled={!composite.showComposite}\n              onChange={() => setComposite({ ...composite, clickThroughOpenNewTab: !composite.clickThroughOpenNewTab })}\n            />\n          </Field>\n          <Field label=\"Enable Custom URL Target\" description=\"Enable custom target\" disabled={!composite.showComposite} hidden={composite.clickThroughOpenNewTab}>\n            <Switch\n              transparent={false}\n              value={composite.clickThroughCustomTargetEnabled}\n              disabled={!composite.showComposite}\n              onChange={() => setComposite({ ...composite,\n                clickThroughCustomTargetEnabled: !composite.clickThroughCustomTargetEnabled,\n                clickThroughCustomTarget: composite.clickThroughCustomTarget || ''\n              })}\n            />\n          </Field>\n          <Field label=\"Custom URL Target\" description=\"Specify a custom target, typical values are: _blank|_self|_parent|_top|framename\" disabled={!composite.showComposite} hidden={!composite.clickThroughCustomTargetEnabled}>\n            <Input\n              value={composite.clickThroughCustomTarget}\n              placeholder=\"_self\"\n              disabled={!composite.showComposite}\n              onChange={(e) => setComposite({ ...composite, clickThroughCustomTarget: e.currentTarget.value })}\n            />\n          </Field>\n          <Field disabled={!composite.showComposite}>\n            <Button\n              key=\"addMetric\"\n              variant=\"primary\"\n              icon=\"plus\"\n              disabled={!composite.showComposite}\n              onClick={addMetric}\n            >\n              Add Metric\n            </Button>\n          </Field>\n          {composite.metrics &&\n            composite.metrics.map((item: CompositeMetric, index: number) => {\n              // generate ID if it doesn't exist\n              if (!item.ID) {\n                item.ID = UUIDv4();\n              }\n              return (\n                <CompositeMetricItem\n                  key={`composite-metric-id-${item.ID}`}\n                  metric={item}\n                  index={index}\n                  disabled={!composite.showComposite}\n                  updateMetric={updateMetric}\n                  updateMetricAlias={updateMetricAlias}\n                  removeMetric={removeMetric}\n                  context={props.context}\n                />\n              );\n            })}\n        </FieldSet>\n      </Card.Meta>\n      <Card.Actions>\n        <IconButton key=\"moveUp\" name=\"arrow-up\" tooltip=\"Move Up\" onClick={moveUp} />\n        <IconButton key=\"moveDown\" name=\"arrow-down\" tooltip=\"Move Down\" onClick={moveDown} />\n        <IconButton\n          key=\"showComposite\"\n          name={composite.showComposite ? visibleIcon : hiddenIcon}\n          tooltip=\"Hide/Show Composite\"\n          onClick={() => setComposite({ ...composite, showComposite: !composite.showComposite })}\n        />\n        <IconButton key=\"copyComposite\" name=\"copy\" tooltip=\"Duplicate\" onClick={createDuplicate} />\n        <IconButton\n          key=\"deleteComposite\"\n          variant=\"destructive\"\n          name=\"trash-alt\"\n          tooltip=\"Delete Composite\"\n          onClick={removeItem}\n        />\n      </Card.Actions>\n    </Card>\n  );\n};\n","import React, {useState} from 'react';\nimport {StandardEditorProps} from '@grafana/data';\nimport {Button, Collapse, Field, FieldSet, Input, Switch} from '@grafana/ui';\n\nimport {CompositeItem} from './CompositeItem';\nimport {CompositeItemTracker, CompositeItemType, CompositeMetric, DisplayModes} from './types';\nimport {v4 as UUIdv4} from 'uuid';\nimport { ShowTimestampFormats } from 'components/types';\n\nexport interface CompositeEditorSettings {\n  composites: CompositeItemType[];\n  enabled: boolean;\n  animationSpeed: string;\n}\n\ninterface Props extends StandardEditorProps<string | string[] | null, CompositeEditorSettings> {}\n\nexport const CompositeEditor: React.FC<Props> = ({ context, onChange }) => {\n  const [settings] = useState(context.options.compositeConfig);\n  const [animationSpeed, _setAnimationSpeed] = useState(context.options.compositeConfig.animationSpeed);\n  const [compositesEnabled, _setCompositesEnabled] = useState(context.options.compositeConfig.enabled);\n  const [tracker, _setTracker] = useState((): CompositeItemTracker[] => {\n    if (settings.composites) {\n      const items: CompositeItemTracker[] = [];\n      settings.composites.forEach((value: CompositeItemType, index: number) => {\n        items[index] = {\n          composite: value,\n          order: index,\n          ID: UUIdv4(),\n        };\n      });\n      return items;\n    } else {\n      return [] as CompositeItemTracker[];\n    }\n  });\n\n  const setAnimationSpeed = (val: any) => {\n    _setAnimationSpeed(val);\n    settings.animationSpeed = val;\n    onChange(settings);\n  };\n  const setCompositesEnabled = (val: any) => {\n    _setCompositesEnabled(val);\n    settings.enabled = val;\n    onChange(settings);\n  };\n  const setTracker = (v: CompositeItemTracker[]) => {\n    _setTracker(v);\n    // update the panel config (only the composites themselves, not the tracker)\n    const allComposites: CompositeItemType[] = [];\n    v.forEach((element) => {\n      allComposites.push(element.composite);\n    });\n    const compositeConfig = {\n      composites: allComposites,\n      animationSpeed: settings.animationSpeed,\n      enabled: settings.enabled,\n    };\n    onChange(compositeConfig as any);\n  };\n\n  // tracks composite card collapse state\n  const [isOpen, setIsOpen] = useState((): boolean[] => {\n    if (!tracker) {\n      return [];\n    }\n    let size = tracker.length;\n    const openStates: boolean[] = [];\n    while (size--) {\n      openStates[size] = false;\n    }\n    return openStates;\n  });\n\n  // generic move\n  const arrayMove = (arr: any, oldIndex: number, newIndex: number) => {\n    if (newIndex >= arr.length) {\n      let k = newIndex - arr.length + 1;\n      while (k--) {\n        arr.push(undefined);\n      }\n    }\n    arr.splice(newIndex, 0, arr.splice(oldIndex, 1)[0]);\n  };\n\n  const moveDown = (index: number) => {\n    if (index !== tracker.length - 1) {\n      arrayMove(tracker, index, index + 1);\n      // reorder\n      for (let i = 0; i < tracker.length; i++) {\n        tracker[i].order = i;\n        tracker[i].composite.order = i;\n      }\n      setTracker([...tracker]);\n    }\n  };\n\n  const moveUp = (index: number) => {\n    if (index > 0) {\n      arrayMove(tracker, index, index - 1);\n      // reorder\n      for (let i = 0; i < tracker.length; i++) {\n        tracker[i].order = i;\n        tracker[i].composite.order = i;\n      }\n      setTracker([...tracker]);\n    }\n  };\n\n  const createDuplicate = (index: number) => {\n    const original = tracker[index].composite;\n    const order = tracker.length;\n    const aComposite: CompositeItemType = {\n      name: `${original.name} Copy`,\n      label: `${original.name} Copy`,\n      order: order,\n      isTemplated: original.isTemplated,\n      displayMode: original.displayMode,\n      enabled: original.enabled,\n      showName: original.showName,\n      showValue: original.showValue,\n      showComposite: original.showComposite,\n      showMembers: original.showMembers,\n      showTimestampEnabled: false,\n      showTimestampFormat: ShowTimestampFormats[0].value,\n      showTimestampYOffset: 0,\n      metrics: original.metrics,\n      clickThrough: original.clickThrough,\n      clickThroughOpenNewTab: original.clickThroughOpenNewTab,\n      clickThroughSanitize: original.clickThroughSanitize,\n      clickThroughCustomTargetEnabled: original.clickThroughCustomTargetEnabled,\n      clickThroughCustomTarget: original.clickThroughCustomTarget\n    };\n    const aTracker: CompositeItemTracker = {\n      composite: aComposite,\n      order: order,\n      ID: UUIdv4(),\n    };\n    setTracker([...tracker, aTracker]);\n    setIsOpen([...isOpen, true]);\n  };\n\n  const updateComposite = (index: number, value: CompositeItemType) => {\n    tracker[index].composite = value;\n    setTracker([...tracker]);\n  };\n\n  const removeComposite = (compositeIndex: number) => {\n    // find the composite by the compositeIndex\n    const allComposites = [...tracker];\n    let removeIndex = 0;\n    for (let i = 0; i < allComposites.length; i++) {\n      if (allComposites[i].order === compositeIndex) {\n        removeIndex = i;\n        break;\n      }\n    }\n    allComposites.splice(removeIndex, 1);\n    // reorder\n    for (let i = 0; i < allComposites.length; i++) {\n      allComposites[i].order = i;\n    }\n    setTracker([...allComposites]);\n  };\n\n  const toggleOpener = (index: number) => {\n    const toggleState = [...isOpen];\n    toggleState[index] = !toggleState[index];\n    setIsOpen([...toggleState]);\n  };\n\n  const addItem = () => {\n    const order = tracker.length;\n    const aComposite: CompositeItemType = {\n      name: `Composite-${order}`,\n      label: `Composite-${order}`,\n      showName: true,\n      showValue: true,\n      showMembers: false,\n      showComposite: true,\n      showTimestampEnabled: false,\n      showTimestampFormat: ShowTimestampFormats[0].value,\n      showTimestampYOffset: 0,\n      isTemplated: false,\n      enabled: true,\n      metrics: [] as CompositeMetric[],\n      displayMode: DisplayModes[0].value,\n      clickThrough: '',\n      clickThroughOpenNewTab: true,\n      clickThroughSanitize: true,\n      clickThroughCustomTargetEnabled: false,\n      clickThroughCustomTarget: '',\n      order: order\n    };\n    const aTracker: CompositeItemTracker = {\n      composite: aComposite,\n      order: order,\n      ID: UUIdv4(),\n    };\n    setTracker([...tracker, aTracker]);\n    // add an opener also\n    setIsOpen([...isOpen, true]);\n  };\n\n  return (\n    <>\n      <FieldSet>\n        <Field label=\"Enable Composites\" description=\"Enable/Disable Composites Globally\">\n          <Switch\n            transparent={true}\n            value={compositesEnabled}\n            onChange={() => setCompositesEnabled(!compositesEnabled)}\n          />\n        </Field>\n        <Field label=\"Animation Speed (ms)\" description=\"Animation Speed in milliseconds\" disabled={!settings.enabled}>\n          <Input\n            value={animationSpeed}\n            placeholder=\"500\"\n            onChange={(e: any) => setAnimationSpeed(e.currentTarget.value)}\n          />\n        </Field>\n      </FieldSet>\n      <Button fill=\"solid\" variant=\"primary\" icon=\"plus\" disabled={!settings.enabled} onClick={addItem}>\n        Add Composite\n      </Button>\n      {tracker &&\n        tracker.map((item: CompositeItemTracker, index: number) => {\n          return (\n            <Collapse\n              key={`collapse-item-index-${item.ID}`}\n              label={item.composite.name}\n              isOpen={isOpen[index]}\n              onToggle={() => toggleOpener(index)}\n              collapsible\n            >\n              <CompositeItem\n                key={`composite-item-index-${item.ID}`}\n                ID={item.ID}\n                composite={item.composite}\n                enabled={item.composite.enabled}\n                setter={updateComposite}\n                remover={removeComposite}\n                moveUp={moveUp}\n                moveDown={moveDown}\n                createDuplicate={createDuplicate}\n                context={context}\n              />\n            </Collapse>\n          );\n        })}\n    </>\n  );\n};\n","import React, { useState } from 'react';\nimport { StandardEditorProps } from '@grafana/data';\nimport { Field } from '@grafana/ui';\n\nimport { PolystatThreshold } from './types';\nimport { ThresholdsEditor } from './ThresholdsEditor';\n\nexport interface GlobalThresholdEditorSettings {}\n\ninterface Props extends StandardEditorProps<string | string[] | null, GlobalThresholdEditorSettings> {}\n\nexport const GlobalThresholdEditor: React.FC<Props> = ({ context, onChange }) => {\n  const [globalThresholds, setGlobalThresholds] = useState(context.options.globalThresholdsConfig);\n  const setThresholds = (val: PolystatThreshold[]) => {\n    setGlobalThresholds(val);\n    onChange(val as any);\n  };\n\n  return (\n    <>\n      <Field>\n        <ThresholdsEditor thresholds={globalThresholds} setter={setThresholds} />\n      </Field>\n    </>\n  );\n};\n","import { PanelModel, convertOldAngularValueMappings, ValueMapping } from '@grafana/data';\nimport { config } from \"@grafana/runtime\";\nimport { satisfies, coerce } from \"semver\";\nimport { CompositeItemType, CompositeMetric } from 'components/composites/types';\nimport { OverrideItemType } from './components/overrides/types';\nimport { PolystatThreshold } from './components/thresholds/types';\n\nimport { DisplayModes, FontFamilies, PolygonShapes, PolystatOptions, ShowTimestampFormats, ShowTimestampPositions } from './components/types';\ninterface AngularPolystatOptions {\n  animationSpeed: number;\n  columnAutoSize: boolean;\n  columns: string;\n  defaultClickThrough: string;\n  defaultClickThroughNewTab: boolean;\n  defaultClickThroughSanitize: boolean;\n  displayLimit: number;\n  ellipseCharacters: number;\n  ellipseEnabled: boolean;\n  fontAutoColor: boolean;\n  fontAutoScale: boolean;\n  fontSize: number;\n  fontType: string,\n  globalDecimals: number;\n  globalDisplayMode: string;\n  globalDisplayTextTriggeredEmpty: string;\n  globalOperatorName: string;\n  globalThresholds: AngularThreshold[];\n  globalUnitFormat: string;\n  gradientEnabled: boolean;\n  hexagonSortByDirection: number;\n  hexagonSortByField: string;\n  maxMetrics: number;\n  polygonBorderColor: string;\n  polygonBorderSize: number;\n  polygonGlobalFillColor: string;\n  radius: string;\n  radiusAutoSize: boolean;\n  regexPattern: string;\n  rowAutoSize: boolean;\n  rows: string;\n  shape: string;\n  tooltipDisplayMode: string;\n  tooltipDisplayTextTriggeredEmpty: string;\n  tooltipEnabled: boolean;\n  tooltipFontSize: number;\n  tooltipFontType: string,\n  tooltipPrimarySortDirection: number;\n  tooltipPrimarySortField: string;\n  tooltipSecondarySortDirection: number;\n  tooltipSecondarySortField: string;\n  tooltipTimestampEnabled: boolean;\n  valueEnabled: boolean;\n}\n\nexport interface AngularThreshold {\n  color: string;\n  state: number;\n  value: number;\n}\n\nexport interface AngularOverride {\n  clickThrough: string;\n  colors: string[];\n  decimals: number;\n  enabled: true;\n  label: string;\n  metricName: string;\n  newTabEnabled: boolean;\n  operatorName: string;\n  prefix: string;\n  sanitizeURLEnabled: boolean;\n  suffix: string;\n  unitFormat: string;\n  thresholds: AngularThreshold[];\n}\nexport interface AngularSavedOverrides {\n  savedOverrides: AngularOverride[];\n}\n\nexport interface CompositeMembers {\n  seriesName: string;\n}\nexport interface CompositeItem {\n  animateMode: string;\n  clickThrough: string;\n  compositeName: string;\n  displayName: string;\n  enabled: boolean;\n  hideMembers: boolean;\n  label: string;\n  members: CompositeMembers[];\n  newTabEnabled: boolean;\n  sanitizeURLEnabled: boolean;\n  sanitizedURL: string;\n  showName: boolean;\n  showValue: boolean;\n  thresholdLevel: number;\n}\n\nexport interface AngularSavedComposites {\n  savedComposites: CompositeItem[];\n}\n\n/**\n * This is called when the panel is imported or reloaded\n */\nexport const PolystatPanelMigrationHandler = (panel: PanelModel<PolystatOptions>): Partial<PolystatOptions> => {\n  //@ts-ignore\n  if (!panel.polystat) {\n    // not angular, just return the options if currently set\n    if (!panel.options) {\n      // This happens on the first load or when migrating from angular\n      return {} as any;\n    }\n    // have settings, return them unchanged\n    return panel.options;\n  }\n  //@ts-ignore\n  const newDefaults = migrateDefaults(panel.polystat);\n  let options = newDefaults;\n  //@ts-ignore\n  delete panel.polystat;\n  //@ts-ignore\n  const migratedOverrides = migrateOverrides(panel);\n  //@ts-ignore\n  const migratedComposites = migrateComposites(panel, newDefaults.compositeConfig.animationSpeed);\n  //console.log(JSON.stringify(newDefaults, null, 2));\n  options.compositeConfig = migratedComposites.compositeConfig;\n  options.overrideConfig = migratedOverrides.overrideConfig;\n  // convert range and value maps\n  const newMaps = migrateValueAndRangeMaps(panel);\n  panel.fieldConfig = {\n    defaults: {\n      mappings: newMaps,\n    },\n    overrides: [],\n  };\n  //@ts-ignore\n  delete panel.mappingType;\n  //@ts-ignore\n  delete panel.rangeMaps;\n  //@ts-ignore\n  delete panel.valueMaps;\n  // merge defaults\n  //@ts-ignore\n  delete panel.savedComposites;\n  //@ts-ignore\n  delete panel.savedOverrides;\n  //@ts-ignore\n  delete panel.colors;\n\n  // clean up undefined\n  // @ts-ignore\n  Object.keys(panel).forEach((key) => (panel[key] === undefined ? delete panel[key] : {}));\n  // @ts-ignore\n  Object.keys(options).forEach((key) => (options[key] === undefined ? delete options[key] : {}));\n\n  return options;\n};\n\n// split into three parts\n// config normally found in \"polystat\" section\n// then \"savedOverrides\" and \"savedComposites\"\n// a \"good\" react config just has an \"options\" section\nexport const migrateDefaults = (angular: AngularPolystatOptions) => {\n  let options: PolystatOptions = {\n    autoSizeColumns: true,\n    autoSizeRows: true,\n    autoSizePolygons: true,\n    ellipseCharacters: 18,\n    ellipseEnabled: false,\n    globalAutoScaleFonts: true,\n    globalClickthrough: '',\n    globalClickthroughNewTabEnabled: false,\n    globalClickthroughSanitizedEnabled: false,\n    globalClickthroughCustomTargetEnabled: false,\n    globalClickthroughCustomTarget: '',\n    globalDecimals: 2,\n    globalDisplayMode: 'all',\n    globalDisplayTextTriggeredEmpty: '',\n    globalFillColor: '',\n    globalFontSize: 8,\n    globalGradientsEnabled: false,\n    globalOperator: 'mean',\n    globalPolygonBorderSize: 1,\n    globalPolygonBorderColor: '',\n    globalPolygonSize: 50,\n    globalRegexPattern: '',\n    globalShape: PolygonShapes.HEXAGON_POINTED_TOP,\n    globalShowValueEnabled: true,\n    globalShowTooltipColumnHeadersEnabled: true,\n    globalShowTimestampEnabled: false,\n    globalShowTimestampFormat: ShowTimestampFormats[0].value,\n    globalShowTimestampPosition: ShowTimestampPositions[0].value,\n    globalShowTimestampFontSize: 12,\n    globalShowTimestampYOffset: 0,\n    globalTextFontColor: '#000000',\n    globalTextFontAutoColor: '#000000',\n    globalTextFontAutoColorEnabled: false,\n    globalTextFontFamily: FontFamilies.INTER,\n    globalThresholdsConfig: [],\n    globalTooltipsEnabled: true,\n    globalTooltipsShowTimestampEnabled: true,\n    globalTooltipsShowValueEnabled: true,\n    globalTooltipsFontFamily: FontFamilies.INTER,\n    globalUnitFormat: '',\n    layoutDisplayLimit: 100,\n    layoutNumColumns: 8,\n    layoutNumRows: 8,\n    panelHeight: undefined,\n    panelWidth: undefined,\n    panelId: 0,\n    radius: 100,\n    renderTime: undefined,\n    sortByField: '',\n    sortByDirection: 0,\n    overrideConfig: {\n      overrides: [],\n    },\n    compositeGlobalAliasingEnabled: false,\n    compositeConfig: {\n      animationSpeed: '',\n      composites: [],\n      enabled: false,\n    },\n    tooltipPrimarySortDirection: 0,\n    tooltipPrimarySortByField: '',\n    tooltipSecondarySortDirection: 0,\n    tooltipSecondarySortByField: '',\n    tooltipDisplayMode: 'all',\n    tooltipDisplayTextTriggeredEmpty: '',\n  };\n\n  if (angular.animationSpeed) {\n    if (options.compositeConfig) {\n      options.compositeConfig.animationSpeed = angular.animationSpeed.toString();\n    }\n  }\n  if (angular.columnAutoSize) {\n    options.autoSizeColumns = angular.columnAutoSize;\n  }\n  if (angular.columns) {\n    let numColumns = parseInt(angular.columns, 10);\n    if (isNaN(numColumns) || numColumns < 1) {\n      numColumns = 8;\n    }\n    options.layoutNumColumns = numColumns;\n  }\n  if (angular.defaultClickThrough) {\n    options.globalClickthrough = angular.defaultClickThrough;\n  }\n  if (angular.defaultClickThroughNewTab) {\n    options.globalClickthroughNewTabEnabled = angular.defaultClickThroughNewTab;\n  }\n  if (angular.defaultClickThroughSanitize) {\n    options.globalClickthroughSanitizedEnabled = angular.defaultClickThroughSanitize;\n  }\n  if (angular.displayLimit) {\n    options.layoutDisplayLimit = angular.displayLimit;\n  }\n  if (angular.ellipseCharacters) {\n    options.ellipseCharacters = angular.ellipseCharacters;\n  }\n  if (angular.ellipseEnabled) {\n    options.ellipseEnabled = angular.ellipseEnabled;\n  }\n  if (angular.fontAutoColor) {\n    options.globalTextFontAutoColorEnabled = angular.fontAutoColor;\n  }\n  if (angular.fontAutoScale) {\n    options.globalAutoScaleFonts = angular.fontAutoScale;\n  }\n  if (angular.fontSize) {\n    options.globalFontSize = angular.fontSize;\n  }\n  options.globalTextFontFamily = FontFamilies.INTER;\n  if (hasRobotoFont()) {\n    options.globalTextFontFamily = FontFamilies.ROBOTO;\n  }\n  if (angular.globalDecimals) {\n    options.globalDecimals = angular.globalDecimals;\n  }\n  if (angular.globalDisplayMode) {\n    options.globalDisplayMode = angular.globalDisplayMode;\n  }\n  if (angular.globalDisplayTextTriggeredEmpty) {\n    options.globalDisplayTextTriggeredEmpty = angular.globalDisplayTextTriggeredEmpty;\n  }\n  if (angular.globalOperatorName) {\n    options.globalOperator = convertOperators(angular.globalOperatorName);\n  }\n  if (angular.globalThresholds) {\n    options.globalThresholdsConfig = [];\n    for (const threshold of angular.globalThresholds) {\n      const migratedThreshold: PolystatThreshold = {\n        value: threshold.value,\n        state: threshold.state,\n        color: threshold.color,\n      };\n      options.globalThresholdsConfig.push(migratedThreshold);\n    }\n  }\n\n  if (angular.globalUnitFormat) {\n    options.globalUnitFormat = angular.globalUnitFormat;\n  }\n  if (angular.gradientEnabled) {\n    options.globalGradientsEnabled = angular.gradientEnabled;\n  }\n  if (angular.hexagonSortByDirection) {\n    options.sortByDirection = angular.hexagonSortByDirection;\n  }\n  if (angular.hexagonSortByField) {\n    options.sortByField = angular.hexagonSortByField;\n  }\n  if (angular.polygonBorderColor) {\n    options.globalPolygonBorderColor = angular.polygonBorderColor;\n  }\n  if (angular.polygonBorderSize) {\n    options.globalPolygonBorderSize = angular.polygonBorderSize;\n  }\n  if (angular.polygonGlobalFillColor) {\n    options.globalFillColor = angular.polygonGlobalFillColor;\n  }\n  if (angular.radius) {\n    let radius = parseFloat(angular.radius);\n    if (isNaN(radius) || radius < 0) {\n      radius = 0;\n    }\n    options.radius = radius;\n  }\n  if (angular.radiusAutoSize) {\n    options.autoSizePolygons = angular.radiusAutoSize;\n  }\n  if (angular.regexPattern) {\n    options.globalRegexPattern = angular.regexPattern;\n  }\n  if (angular.rowAutoSize) {\n    options.autoSizeRows = angular.rowAutoSize;\n  }\n  if (angular.rows) {\n    let numRows = parseInt(angular.rows, 10);\n    if (isNaN(numRows) || numRows < 1) {\n      numRows = 8;\n    }\n    options.layoutNumRows = numRows;\n  }\n\n  if (angular.shape) {\n    switch (angular.shape) {\n      case 'circle':\n        options.globalShape = PolygonShapes.CIRCLE;\n        break;\n      case 'square':\n        options.globalShape = PolygonShapes.SQUARE;\n        break;\n      case 'hexagon_pointed_top':\n      default:\n        options.globalShape = PolygonShapes.HEXAGON_POINTED_TOP;\n    }\n  }\n  if (angular.tooltipDisplayMode) {\n    options.tooltipDisplayMode = angular.tooltipDisplayMode;\n  }\n  if (angular.tooltipDisplayTextTriggeredEmpty) {\n    options.tooltipDisplayTextTriggeredEmpty = angular.tooltipDisplayTextTriggeredEmpty;\n  }\n  if (angular.tooltipEnabled) {\n    options.globalTooltipsEnabled = angular.tooltipEnabled;\n  }\n  if (angular.tooltipPrimarySortDirection) {\n    options.tooltipPrimarySortDirection = angular.tooltipPrimarySortDirection;\n  }\n  if (angular.tooltipPrimarySortField) {\n    options.tooltipPrimarySortByField = angular.tooltipPrimarySortField;\n  }\n  if (angular.tooltipSecondarySortDirection) {\n    options.tooltipSecondarySortDirection = angular.tooltipSecondarySortDirection;\n  }\n  if (angular.tooltipSecondarySortField) {\n    options.tooltipSecondarySortByField = angular.tooltipSecondarySortField;\n  }\n  if (angular.tooltipTimestampEnabled) {\n    options.globalTooltipsShowTimestampEnabled = angular.tooltipTimestampEnabled;\n  }\n  options.globalTooltipsFontFamily = FontFamilies.INTER;\n  if (hasRobotoFont()) {\n    options.globalTooltipsFontFamily = FontFamilies.ROBOTO;\n  }\n  if (angular.valueEnabled) {\n    options.globalShowValueEnabled = angular.valueEnabled;\n  }\n\n  return options;\n};\n\nexport const migrateOverrides = (angular: AngularSavedOverrides) => {\n  let options = {} as any;\n\n  options.overrideConfig = {\n    overrides: [],\n  };\n  // Overrides\n  if (angular.savedOverrides?.length) {\n    let order = 0;\n    for (const seriesOverride of angular.savedOverrides) {\n      let anOverride: OverrideItemType = {\n        label: '',\n        metricName: '',\n        alias: '',\n        thresholds: [],\n        colors: [],\n        unitFormat: '',\n        decimals: '',\n        scaledDecimals: 0,\n        enabled: true,\n        operatorName: 'avg',\n        prefix: '',\n        suffix: '',\n        clickThrough: '',\n        clickThroughSanitize: true,\n        clickThroughOpenNewTab: true,\n        clickThroughCustomTargetEnabled: false,\n        clickThroughCustomTarget: '',\n        order: order,\n        showTimestampEnabled: false,\n        showTimestampFormat: ShowTimestampFormats[0].value,\n        showTimestampYOffset: 0,\n      };\n      for (const p of Object.keys(seriesOverride)) {\n        // @ts-ignore\n        const v = seriesOverride[p];\n        switch (p) {\n          // Ignore\n          case '$$hashKey':\n            break;\n          case 'clickThrough':\n            anOverride.clickThrough = v;\n            break;\n          case 'colors':\n            anOverride.colors = v;\n            break;\n          case 'decimals':\n            anOverride.decimals = v;\n            break;\n          case 'enabled':\n            anOverride.enabled = v;\n            break;\n          case 'label':\n            anOverride.label = v;\n            break;\n          case 'metricName':\n            anOverride.metricName = v;\n            break;\n          case 'newTabEnabled':\n            anOverride.clickThroughOpenNewTab = v;\n            break;\n          case 'operatorName':\n            anOverride.operatorName = convertOperators(v);\n            break;\n          case 'prefix':\n            anOverride.prefix = v;\n            break;\n          case 'sanitizeURLEnabled':\n            anOverride.clickThroughSanitize = v;\n            break;\n          case 'suffix':\n            anOverride.suffix = v;\n            break;\n          case 'thresholds':\n            /*\n              \"color\": \"#e5ac0e\",\n              \"state\": 1,\n              \"value\": 78\n              */\n            anOverride.thresholds = [];\n            for (const threshold of v) {\n              const migratedThreshold: PolystatThreshold = {\n                value: threshold.value,\n                state: threshold.state,\n                color: threshold.color,\n              };\n              anOverride.thresholds.push(migratedThreshold);\n            }\n            break;\n          case 'unitFormat':\n            anOverride.unitFormat = v;\n            break;\n          default:\n            console.log('Ignore override migration:', p, v);\n        }\n      }\n      options.overrideConfig.overrides.push(anOverride);\n      order++;\n    }\n  }\n  return options;\n};\n\nexport const convertOperators = (operator: string) => {\n  switch (operator) {\n    case 'avg':\n      return 'mean';\n    case 'current':\n      return 'last'; // lastNotNull?\n    case 'time_step':\n      return 'step';\n    case 'total':\n      return 'sum';\n    default:\n      return operator;\n  }\n};\n\nexport const migrateValueAndRangeMaps = (panel: any) => {\n  // value maps first\n  panel.mappingType = 1;\n  let newValueMappings: ValueMapping[] = [];\n  if (panel.valueMaps !== undefined) {\n    newValueMappings = convertOldAngularValueMappings(panel);\n  }\n  // range maps second\n  panel.mappingType = 2;\n  let newRangeMappings: ValueMapping[] = [];\n  if (panel.rangeMaps !== undefined) {\n    newRangeMappings = convertOldAngularValueMappings(panel);\n  }\n  // append together\n  const newMappings = newValueMappings.concat(newRangeMappings);\n  // get uniques only\n  return [...new Map(newMappings.map((v) => [JSON.stringify(v), v])).values()];\n};\n\nexport const migrateComposites = (angular: AngularSavedComposites, animationSpeed: string) => {\n  let options = {} as any;\n  // Composites\n  options.compositeConfig = {\n    composites: [],\n    enabled: true,\n    animationSpeed: animationSpeed,\n  };\n\n  if (angular.savedComposites?.length) {\n    let index = 0;\n    for (const composite of angular.savedComposites) {\n      let aComposite: CompositeItemType = {\n        name: `COMPOSITE-${index}`,\n        label: `COMPOSITE-${index}`,\n        order: index,\n        isTemplated: false,\n        displayMode: DisplayModes[0].value,\n        enabled: true,\n        showName: true,\n        showValue: true,\n        showComposite: true,\n        showMembers: false,\n        showTimestampEnabled: false,\n        showTimestampFormat: ShowTimestampFormats[0].value,\n        showTimestampYOffset: 0,\n        metrics: [],\n        clickThrough: '',\n        clickThroughSanitize: true,\n        clickThroughOpenNewTab: true,\n        clickThroughCustomTargetEnabled: false,\n        clickThroughCustomTarget: ''\n      };\n      index++;\n      for (const p of Object.keys(composite)) {\n        // @ts-ignore\n        const v = composite[p];\n        switch (p) {\n          // Ignore\n          case '$$hashKey':\n            break;\n          case 'animateMode':\n            if (v !== 'all') {\n              aComposite.displayMode = DisplayModes[1].value;\n            }\n            break;\n          case 'clickThrough':\n            aComposite.clickThrough = v;\n            break;\n          case 'compositeName':\n            aComposite.name = v;\n            break;\n          // Ignore\n          case 'displayName':\n            break;\n          case 'enabled':\n            // this is now .showComposite\n            aComposite.showComposite = v;\n            break;\n          case 'hideMembers':\n            aComposite.showMembers = !v;\n            break;\n          case 'label':\n            aComposite.label = v;\n            break;\n          case 'members':\n            /*\n              {\n                \"$$hashKey\": \"object:150\",\n                \"seriesName\": \"/P2/\"\n              }\n              */\n            let memberIndex = 0;\n            let members: CompositeMetric[] = [];\n            // not sure about this...\n            for (const aMember of Object.keys(v)) {\n              const x = v[aMember];\n              let member: CompositeMetric = {\n                seriesMatch: x.seriesName,\n                order: memberIndex,\n              };\n              members.push(member);\n              memberIndex++;\n            }\n            aComposite.metrics = members;\n            break;\n          case 'newTabEnabled':\n            aComposite.clickThroughOpenNewTab = v;\n            break;\n          case 'sanitizeURLEnabled':\n            aComposite.clickThroughSanitize = v;\n            break;\n          // Ignore\n          case 'sanitizedURL':\n            break;\n          case 'showName':\n            aComposite.showName = v;\n            break;\n          case 'showValue':\n            aComposite.showValue = v;\n            break;\n          default:\n            console.log('Ignore composite migration:', p, v);\n        }\n      }\n      options.compositeConfig.composites.push(aComposite);\n    }\n  }\n  return options;\n};\n\n/**\n * This is called when the panel changes from another panel\n *\n * not currently used\n */\nexport const PolystatPanelChangedHandler = (\n  panel: PanelModel<Partial<PolystatOptions>> | any,\n  prevPluginId: string,\n  prevOptions: any\n) => {\n  // Changing from angular polystat panel\n  if (prevPluginId === 'polystat' && prevOptions.angular) {\n    console.log('detected old panel');\n    const oldOpts = prevOptions.angular;\n    console.log(JSON.stringify(oldOpts));\n  }\n\n  return {};\n};\n\n// Roboto font was removed Dec 1, 2022, and releases after that date should not attempt to use it\nexport const hasRobotoFont = () => {\n  const version = coerce(config.buildInfo.version);\n  if (version !== null) {\n    if (satisfies(version, \"<9.4.0\")) {\n      return true;\n    }\n  }\n  return false;\n};\n","import { FieldConfigProperty, PanelPlugin } from '@grafana/data';\n\nimport {\n  DisplayModes,\n  FontFamilyOptions,\n  FontFamilyOptionsLegacy,\n  OperatorOptions,\n  PolygonNamedShapes,\n  PolystatOptions,\n  ShowTimestampFormats,\n  ShowTimestampPositions,\n  SortByFieldOptions,\n  SortOptions,\n} from './components/types';\nimport { CompositeItemType } from './components/composites/types';\nimport { OverrideEditor } from './components/overrides/OverrideEditor';\nimport { OverrideItemType } from './components/overrides/types';\nimport { PolystatPanel } from './components/PolystatPanel';\nimport {\n  GLOBAL_FILL_COLOR_RGBA,\n  GLOBAL_BORDER_COLOR_RGBA,\n  GLOBAL_DISPLAY_TEXT_TRIGGERED_EMPTY,\n  GLOBAL_TEXT_FONT_FAMILY,\n  GLOBAL_TOOLTIP_FONT_FAMILY,\n  GLOBAL_TEXT_FONT_FAMILY_LEGACY,\n  GLOBAL_TOOLTIP_FONT_FAMILY_LEGACY,\n} from './components/defaults';\nimport { CompositeEditor } from './components/composites/CompositeEditor';\nimport { PolystatThreshold } from './components/thresholds/types';\nimport { GlobalThresholdEditor } from './components/thresholds/GlobalThresholdEditor';\nimport { PolystatDataSuggestionsSupplier } from './components/suggestions';\nimport { hasRobotoFont, PolystatPanelMigrationHandler } from './migrations';\n\n\nexport const plugin = new PanelPlugin<PolystatOptions>(PolystatPanel)\n  .setMigrationHandler(PolystatPanelMigrationHandler)\n  .useFieldConfig({\n    disableStandardOptions: [\n      FieldConfigProperty.Thresholds,\n      FieldConfigProperty.Color,\n      FieldConfigProperty.Decimals,\n      FieldConfigProperty.DisplayName,\n      FieldConfigProperty.Max,\n      FieldConfigProperty.Min,\n      FieldConfigProperty.Links,\n      FieldConfigProperty.NoValue,\n      FieldConfigProperty.Unit,\n    ],\n    standardOptions: {\n      [FieldConfigProperty.Mappings]: {},\n    },\n  })\n  .setPanelOptions((builder) => {\n    builder\n      .addBooleanSwitch({\n        name: 'Auto Size Columns',\n        path: 'autoSizeColumns',\n        defaultValue: true,\n        category: ['Layout'],\n        description: 'Automatically set columns based on panel size',\n      })\n      .addNumberInput({\n        path: 'layoutNumColumns',\n        name: 'Columns',\n        description: 'Use specific number of columns',\n        defaultValue: 8,\n        settings: {\n          placeHolder: '8',\n          min: 1,\n          integer: true,\n        },\n        category: ['Layout'],\n        showIf: (c) => !c.autoSizeColumns,\n      })\n      .addBooleanSwitch({\n        name: 'Auto Size Rows',\n        path: 'autoSizeRows',\n        defaultValue: true,\n        category: ['Layout'],\n        description: 'Automatically set rows based on panel size',\n      })\n      .addNumberInput({\n        path: 'layoutNumRows',\n        name: 'Rows',\n        description: 'Use specific number of rows',\n        defaultValue: 8,\n        settings: {\n          placeHolder: '8',\n          min: 1,\n          integer: true,\n        },\n        category: ['Layout'],\n        showIf: (c) => !c.autoSizeRows,\n      })\n      .addNumberInput({\n        path: 'layoutDisplayLimit',\n        name: 'Display Limit',\n        description: 'Maximum number of polygons to display (0 for unlimited)',\n        defaultValue: 100,\n        settings: {\n          min: 0,\n          integer: true,\n        },\n        category: ['Layout'],\n      })\n\n      .addBooleanSwitch({\n        name: 'Auto Size Polygons',\n        path: 'autoSizePolygons',\n        defaultValue: true,\n        category: ['Sizing'],\n        description: 'Automatically sets size of polygon for best fit',\n      })\n      .addNumberInput({\n        name: 'Polygon Size in pixels',\n        path: 'globalPolygonSize',\n        description: 'Use specific size for polygons',\n        defaultValue: 25,\n        settings: {\n          placeHolder: 'Auto',\n          min: 1,\n        },\n        category: ['Sizing'],\n        showIf: (c) => !c.autoSizePolygons,\n      })\n      .addNumberInput({\n        name: 'Border Size',\n        path: 'globalPolygonBorderSize',\n        description: 'Border size for each polygon',\n        defaultValue: 2,\n        settings: {\n          min: 0,\n        },\n        category: ['Sizing'],\n      })\n      // font selection\n      .addSelect({\n        path: 'globalTextFontFamily',\n        name: 'Font Family',\n        description: 'Font used for rendered text',\n        category: ['Text'],\n        defaultValue: GLOBAL_TEXT_FONT_FAMILY,\n        settings: {\n          options: FontFamilyOptions,\n        },\n        showIf: () => !hasRobotoFont(),\n      })\n      .addSelect({\n        path: 'globalTextFontFamily',\n        name: 'Font Family',\n        description: 'Font used for rendered text',\n        category: ['Text'],\n        defaultValue: GLOBAL_TEXT_FONT_FAMILY_LEGACY,\n        settings: {\n          options: FontFamilyOptionsLegacy,\n        },\n        showIf: () => hasRobotoFont(),\n      })\n      .addBooleanSwitch({\n        name: 'Auto Scale Fonts',\n        path: 'globalAutoScaleFonts',\n        defaultValue: true,\n        category: ['Text'],\n        description: 'Automatically sets label and value font size based on size of polygon',\n      })\n      .addNumberInput({\n        name: 'Font Size',\n        path: 'globalFontSize',\n        defaultValue: 12,\n        settings: {\n          min: 0,\n        },\n        category: ['Text'],\n        description: 'Default font size to use when Auto is disabled',\n        showIf: (c) => !c.globalAutoScaleFonts,\n      })\n      // font color\n      // auto set font color\n      .addBooleanSwitch({\n        name: 'Automate Font Color',\n        path: 'globalTextFontAutoColorEnabled',\n        defaultValue: true,\n        category: ['Text'],\n        description: 'Sets font color to match theme',\n      })\n      .addColorPicker({\n        name: 'Font Color',\n        path: 'globalTextFontColor',\n        category: ['Text'],\n        defaultValue: '#000000',\n        description: 'Font color to use for all text on polygon',\n        showIf: (c) => !c.globalTextFontAutoColorEnabled,\n      })\n\n      // ellipse enabled\n      .addBooleanSwitch({\n        name: 'Use Ellipses',\n        path: 'ellipseEnabled',\n        defaultValue: false,\n        category: ['Text'],\n        description: 'Use Ellipses when character count is exceeded',\n        showIf: (c) => !c.globalAutoScaleFonts,\n      })\n      // ellipse num chars\n      .addNumberInput({\n        name: 'Ellipse Characters',\n        path: 'ellipseCharacters',\n        defaultValue: 18,\n        settings: {\n          min: 0,\n          integer: true,\n        },\n        category: ['Text'],\n        description: 'Default number of characters to display before showing ellipses',\n        showIf: (c) => c.ellipseEnabled && !c.globalAutoScaleFonts,\n      })\n\n      // Sorting\n      .addSelect({\n        path: 'sortByDirection',\n        name: 'Sort By Direction',\n        description: 'Direction of sorting by the specified field',\n        category: ['Sorting'],\n        defaultValue: 1,\n        settings: {\n          options: SortOptions,\n        },\n      })\n      .addSelect({\n        path: 'sortByField',\n        name: 'Sort By Field',\n        description: 'Which field should be used for sorting',\n        defaultValue: 'name',\n        category: ['Sorting'],\n        settings: {\n          options: SortByFieldOptions,\n        },\n      })\n\n      // tooltips\n      .addBooleanSwitch({\n        name: 'Enable Tooltips',\n        path: 'globalTooltipsEnabled',\n        defaultValue: true,\n        category: ['Tooltips'],\n        description: 'Provides tooltips for each polygon',\n      })\n      .addSelect({\n        path: 'globalTooltipsFontFamily',\n        name: 'Font Family',\n        description: 'Font used for tooltip text',\n        category: ['Tooltips'],\n        defaultValue: GLOBAL_TOOLTIP_FONT_FAMILY,\n        settings: {\n          options: FontFamilyOptions,\n        },\n        showIf: () => !hasRobotoFont(),\n      })\n      .addSelect({\n        path: 'globalTooltipsFontFamily',\n        name: 'Font Family',\n        description: 'Font used for tooltip text',\n        category: ['Tooltips'],\n        defaultValue: GLOBAL_TOOLTIP_FONT_FAMILY_LEGACY,\n        settings: {\n          options: FontFamilyOptionsLegacy,\n        },\n        showIf: () => hasRobotoFont(),\n      })\n      .addBooleanSwitch({\n        name: 'Show Timestamp',\n        path: 'globalTooltipsShowTimestampEnabled',\n        defaultValue: true,\n        category: ['Tooltips'],\n        description: 'Show timestamp at bottom of tooltip',\n      })\n      .addBooleanSwitch({\n        name: 'Show Value',\n        path: 'globalTooltipsShowValueEnabled',\n        defaultValue: true,\n        category: ['Tooltips'],\n        description: 'Show values in tooltip',\n      })\n      // show tooltip column headers\n      .addBooleanSwitch({\n        name: 'Show Column Headers',\n        path: 'globalShowTooltipColumnHeadersEnabled',\n        defaultValue: true,\n        category: ['Tooltips'],\n        description: 'Show Column headers on tooltip'\n      })\n      // display modes\n      .addSelect({\n        path: 'tooltipDisplayMode',\n        name: 'Display Mode',\n        description: 'Show either all metrics/composites or only triggered',\n        defaultValue: 'all',\n        category: ['Tooltips'],\n        settings: {\n          options: DisplayModes,\n        },\n      })\n      .addTextInput({\n        path: 'tooltipDisplayTextTriggeredEmpty',\n        name: 'Non Triggered State Text',\n        description:\n          'Text to be displayed by tooltip when there are no triggered thresholds and tooltip display mode is set to triggered',\n        defaultValue: GLOBAL_DISPLAY_TEXT_TRIGGERED_EMPTY,\n        category: ['Tooltips'],\n      })\n      // primary sort direction\n      .addSelect({\n        path: 'tooltipPrimarySortDirection',\n        name: 'Primary Sort Direction',\n        description: 'Direction of sorting by the specified field',\n        category: ['Tooltips'],\n        defaultValue: SortOptions[1].value,\n        settings: {\n          options: SortOptions,\n        },\n      })\n      .addSelect({\n        path: 'tooltipPrimarySortByField',\n        name: 'Primary Sort By Field',\n        description: 'Which field should be used for sorting',\n        defaultValue: 'thresholdLevel',\n        category: ['Tooltips'],\n        settings: {\n          options: SortByFieldOptions,\n        },\n      })\n\n      // secondary sort direction\n      .addSelect({\n        path: 'tooltipSecondarySortDirection',\n        name: 'Secondary Sort Direction',\n        description: 'Direction of sorting by the specified field',\n        category: ['Tooltips'],\n        defaultValue: SortOptions[1].value,\n        settings: {\n          options: SortOptions,\n        },\n      })\n      .addSelect({\n        path: 'tooltipSecondarySortByField',\n        name: 'Secondary Sort By Field',\n        description: 'Which field should be used for sorting',\n        defaultValue: 'value',\n        category: ['Tooltips'],\n        settings: {\n          options: SortByFieldOptions,\n        },\n      })\n\n      // globals generic\n      //\n      // display mode\n      .addSelect({\n        path: 'globalDisplayMode',\n        name: 'Display Mode',\n        description: 'Show either all metrics/composites or only triggered',\n        defaultValue: 'all',\n        category: ['Global'],\n        settings: {\n          options: DisplayModes,\n        },\n      })\n      .addTextInput({\n        path: 'globalDisplayTextTriggeredEmpty',\n        name: 'Non Triggered State Text',\n        description:\n          'Text to be displayed in polygon when there are no triggered thresholds and global display mode is set to triggered',\n        defaultValue: GLOBAL_DISPLAY_TEXT_TRIGGERED_EMPTY,\n        category: ['Global'],\n      })\n\n      // show value\n      .addBooleanSwitch({\n        name: 'Show Value',\n        path: 'globalShowValueEnabled',\n        defaultValue: true,\n        category: ['Global'],\n        description: 'Show value on the polygon',\n      })\n\n      // displays timestamp on polygons\n      .addBooleanSwitch({\n        name: 'Show Timestamp',\n        path: 'globalShowTimestampEnabled',\n        defaultValue: false,\n        category: ['Global'],\n        description: 'Show timestamp of metric on the polygon',\n      })\n      .addSelect({\n        name: 'Timestamp Format',\n        path: 'globalShowTimestampFormat',\n        description: 'Format of timestamp to display',\n        category: ['Global'],\n        defaultValue: ShowTimestampFormats[2].value,\n        settings: {\n          options: ShowTimestampFormats,\n          allowCustomValue: true,\n        },\n        showIf: (c) => c.globalShowTimestampEnabled,\n      })\n      .addNumberInput({\n        name: 'Font Size',\n        path: 'globalShowTimestampFontSize',\n        defaultValue: 12,\n        settings: {\n          min: 0,\n        },\n        category: ['Global'],\n        description: 'Default font size to use when Global Auto Scale Fonts is disabled',\n        showIf: (c) => !c.globalAutoScaleFonts,\n      })\n      .addSelect({\n        name: 'Timestamp Position',\n        path: 'globalShowTimestampPosition',\n        description: 'Position of Timestamp',\n        category: ['Global'],\n        defaultValue: ShowTimestampPositions[1].value,\n        settings: {\n          options: ShowTimestampPositions,\n          allowCustomValue: false,\n        },\n        showIf: (c) => c.globalShowTimestampEnabled,\n      })\n      .addNumberInput({\n        name: 'Timestamp Y-Offset',\n        path: 'globalShowTimestampYOffset',\n        description: 'Adjust the displayed timestamp up or down the Y-Axis, use negative value to move up, positive for down',\n        defaultValue: 0,\n        settings: {\n          integer: true,\n        },\n        category: ['Global'],\n        showIf: (c) => c.globalShowTimestampEnabled,\n      })\n\n      // shape\n      .addSelect({\n        name: 'Shape',\n        path: 'globalShape',\n        description: 'Shape of polygon',\n        category: ['Global'],\n        defaultValue: PolygonNamedShapes[0].value,\n        settings: {\n          options: PolygonNamedShapes,\n        },\n      })\n\n      // gradient colors enabled\n      .addBooleanSwitch({\n        name: 'Use Color Gradients',\n        path: 'globalGradientsEnabled',\n        defaultValue: true,\n        category: ['Global'],\n        description: 'Applies gradient color effect to all polygons',\n      })\n      .addColorPicker({\n        name: 'Global Fill Color',\n        path: 'globalFillColor',\n        category: ['Global'],\n        defaultValue: GLOBAL_FILL_COLOR_RGBA,\n        description: 'Color to use when no overrides or thresholds apply to polygon',\n      })\n\n      // border color\n      .addColorPicker({\n        name: 'Global Border Color',\n        path: 'globalPolygonBorderColor',\n        category: ['Global'],\n        defaultValue: GLOBAL_BORDER_COLOR_RGBA,\n        description: 'Color of polygon border',\n      })\n      // unit\n      .addUnitPicker({\n        name: 'Unit',\n        path: 'globalUnitFormat',\n        defaultValue: 'short',\n        category: ['Global'],\n        description: 'Use this unit format when it is not specified in overrides or detected in data',\n      })\n      // stat (global operator)\n      .addSelect({\n        name: 'Stat',\n        path: 'globalOperator',\n        description: 'Statistic to display',\n        category: ['Global'],\n        defaultValue: OperatorOptions[0].value,\n        settings: {\n          options: OperatorOptions,\n        },\n      })\n      // decimals\n      .addNumberInput({\n        name: 'Decimals',\n        path: 'globalDecimals',\n        description: 'Display specified number of decimals',\n        defaultValue: 2,\n        settings: {\n          min: 0,\n          integer: true,\n        },\n        category: ['Global'],\n      })\n      .addCustomEditor({\n        name: 'Global Thresholds',\n        id: 'globalThresholdsConfig',\n        path: 'globalThresholdsConfig',\n        description: 'Default thresholds to be applied to all metrics that do not have an override',\n        editor: GlobalThresholdEditor,\n        defaultValue: [] as PolystatThreshold[],\n        category: ['Global'],\n      })\n      // default clickthrough\n      .addTextInput({\n        name: 'Default Clickthrough',\n        path: 'globalClickthrough',\n        description: 'URL to use when none are defined by overrides or composites',\n        category: ['Global'],\n        defaultValue: '',\n      })\n      // sanitize clickthrough\n      .addBooleanSwitch({\n        name: 'Sanitize URL',\n        path: 'globalClickthroughSanitizedEnabled',\n        defaultValue: true,\n        category: ['Global'],\n        description: 'Sanitizes clickthrough url',\n      })\n      // open in new tab\n      .addBooleanSwitch({\n        name: 'Open URL In New Tab',\n        path: 'globalClickthroughNewTabEnabled',\n        defaultValue: true,\n        category: ['Global'],\n        description: 'Opens clickthrough in a new tab',\n      })\n      .addBooleanSwitch({\n        name: 'Enable Custom URL Target',\n        path: 'globalClickthroughCustomTargetEnabled',\n        defaultValue: false,\n        category: ['Global'],\n        description: 'Use custom target for global clickthrough (this overrides the new tab setting above). Typical values are: _blank|_self|_parent|_top|framename',\n        showIf: (c) => !c.globalClickthroughNewTabEnabled,\n      })\n      .addTextInput({\n        name: 'Custom URL Target',\n        path: 'globalClickthroughCustomTarget',\n        description:\n          'Provide a different target to be set in the target attribute of the clickthrough. Typical values are: _blank|_self|_parent|_top|framename',\n        category: ['Global'],\n        defaultValue: '',\n        showIf: (c) => c.globalClickthroughCustomTargetEnabled,\n      })\n\n      // aliasing\n      .addTextInput({\n        name: 'Global Regex',\n        path: 'globalRegexPattern',\n        description:\n          'The values in the specified column are filtered and displayed according to this regular expression. Ex: String: Url|broadcom.com|mirror|location-1 regex: /Url&#92;|(.*?)&#92;|/ Output: broadcom.com',\n        category: ['Global Aliasing'],\n        defaultValue: '',\n      })\n      .addCustomEditor({\n        name: 'Overrides',\n        id: 'overrideConfig',\n        path: 'overrideConfig',\n        description: 'Overrides for multiple metrics',\n        editor: OverrideEditor,\n        defaultValue: {\n          overrides: [] as OverrideItemType[],\n        },\n        category: ['Overrides'],\n      })\n      // allow enabling / disabling global aliasing for composite hexagon names\n      .addBooleanSwitch({\n        name: 'Composite Global Aliasing',\n        path: 'compositeGlobalAliasingEnabled',\n        defaultValue: false,\n        description: 'Enable / Disable composite global aliasing',\n        category: ['Composites'],\n      })\n      .addCustomEditor({\n        name: 'Composites',\n        id: 'compositeConfig',\n        path: 'compositeConfig',\n        description: 'Composites allow you to roll up multiple metrics into a single polygon',\n        editor: CompositeEditor,\n        defaultValue: {\n          composites: [] as CompositeItemType[],\n          enabled: true,\n          animationSpeed: '1500',\n        },\n        category: ['Composites'],\n      });\n  })\n  .setSuggestionsSupplier(new PolystatDataSuggestionsSupplier());\n","import { VisualizationSuggestionsBuilder } from '@grafana/data';\nimport { PolystatOptions } from './types';\n\nexport class PolystatDataSuggestionsSupplier {\n  getSuggestionsForData(builder: VisualizationSuggestionsBuilder) {\n    const { dataSummary: ds } = builder;\n\n    if (!ds.hasData) {\n      return;\n    }\n    if (!ds.hasNumberField) {\n      return;\n    }\n\n    const list = builder.getListAppender<PolystatOptions, {}>({\n      name: 'Polystat',\n      pluginId: 'grafana-polystat-panel',\n      options: {},\n    });\n\n    list.append({\n      name: 'Polystat',\n    });\n  }\n}\n"],"names":["ANY","Symbol","Comparator","constructor","comp","options","parseOptions","loose","value","trim","split","join","debug","this","parse","semver","operator","version","r","re","t","COMPARATORLOOSE","COMPARATOR","m","match","TypeError","undefined","SemVer","toString","test","er","cmp","intersects","Range","includePrerelease","startsWith","includes","module","exports","safeRe","range","raw","set","format","map","parseRange","filter","c","length","first","isNullSet","isAny","comps","memoKey","FLAG_INCLUDE_PRERELEASE","FLAG_LOOSE","cached","cache","get","hr","HYPHENRANGELOOSE","HYPHENRANGE","replace","hyphenReplace","COMPARATORTRIM","comparatorTrimReplace","TILDETRIM","tildeTrimReplace","CARETTRIM","caretTrimReplace","rangeList","parseComparator","replaceGTE0","rangeMap","Map","comparators","size","has","delete","result","values","some","thisComparators","isSatisfiable","rangeComparators","every","thisComparator","rangeComparator","i","testSet","remainingComparators","slice","testComparator","pop","otherComparator","replaceCarets","replaceTildes","replaceXRanges","replaceStars","isX","id","toLowerCase","replaceTilde","TILDELOOSE","TILDE","_","M","p","pr","ret","replaceCaret","CARETLOOSE","CARET","z","replaceXRange","XRANGELOOSE","XRANGE","gtlt","xM","xm","xp","anyX","STAR","GTE0PRE","GTE0","incPr","$0","from","fM","fm","fp","fpr","fb","to","tM","tm","tp","tpr","prerelease","allowed","major","minor","patch","MAX_LENGTH","MAX_SAFE_INTEGER","compareIdentifiers","LOOSE","FULL","num","build","compare","other","compareMain","comparePre","a","b","compareBuild","inc","release","identifier","identifierBase","base","Number","Error","push","isNaN","s","eq","neq","gt","gte","lt","lte","op","String","rtl","coerceRtlRegex","COERCERTLFULL","COERCERTL","next","exec","index","lastIndex","COERCEFULL","COERCE","versionA","versionB","version1","version2","v1","v2","comparison","v1Higher","highVersion","lowVersion","highHasPre","prefix","throwErrors","parsed","list","sort","v","internalRe","constants","identifiers","valid","clean","diff","rcompare","compareLoose","rsort","coerce","satisfies","toComparators","maxSatisfying","minSatisfying","minVersion","validRange","outside","gtr","ltr","simplifyRange","subset","src","tokens","SEMVER_SPEC_VERSION","RELEASE_TYPES","rcompareIdentifiers","MAX_SAFE_COMPONENT_LENGTH","MAX_SAFE_BUILD_LENGTH","process","env","NODE_DEBUG","args","console","error","numeric","anum","bnum","max","key","firstKey","keys","looseOption","Object","freeze","emptyOpts","R","LETTERDASHNUMBER","safeRegexReplacements","createToken","name","isGlobal","safe","token","makeSafeRegex","RegExp","NUMERICIDENTIFIER","NUMERICIDENTIFIERLOOSE","NONNUMERICIDENTIFIER","PRERELEASEIDENTIFIER","PRERELEASEIDENTIFIERLOOSE","BUILDIDENTIFIER","MAINVERSION","PRERELEASE","BUILD","FULLPLAIN","MAINVERSIONLOOSE","PRERELEASELOOSE","LOOSEPLAIN","XRANGEIDENTIFIER","XRANGEIDENTIFIERLOOSE","GTLT","XRANGEPLAIN","XRANGEPLAINLOOSE","COERCEPLAIN","LONETILDE","LONECARET","r1","r2","versions","maxSV","rangeObj","forEach","min","minSV","minver","setMin","comparator","compver","hilo","gtfn","ltefn","ltfn","ecomp","high","low","prev","ranges","simplified","original","minimumVersionWithPreRelease","minimumVersion","simpleSubset","sub","dom","eqSet","Set","gtltComp","higher","lower","hasDomLT","hasDomGT","higherGT","lowerLT","add","needDomLTPre","needDomGTPre","sawNonNull","OUTER","simpleSub","simpleDom","isSub","__WEBPACK_EXTERNAL_MODULE__6089__","__WEBPACK_EXTERNAL_MODULE__7781__","__WEBPACK_EXTERNAL_MODULE__8531__","__WEBPACK_EXTERNAL_MODULE__2007__","__WEBPACK_EXTERNAL_MODULE__4201__","__WEBPACK_EXTERNAL_MODULE__3241__","__WEBPACK_EXTERNAL_MODULE__5959__","hasOwn","hasOwnProperty","classNames","classes","arguments","arg","appendClass","parseValue","Array","isArray","apply","prototype","call","newClass","default","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","__webpack_modules__","n","getter","__esModule","d","definition","o","defineProperty","enumerable","obj","prop","toStringTag","PolygonShapes","PolygonNamedShapes","label","OperatorOptions","SortOptions","SortByFieldOptions","DisplayModes","FontFamilies","FontFamilyOptions","FontFamilyOptionsLegacy","ShowTimestampFormats","TimestampPositions","ShowTimestampPositions","getRandomValues","rnds8","Uint8Array","rng","crypto","bind","msCrypto","byteToHex","substr","arr","offset","uuid","buf","rnds","random","ThresholdStates","ThresholdItem","styles","useStyles2","getThresholdStyles","threshold","setThreshold","useState","thresholdId","aKey","getThreshold","state","Input","disabled","type","step","ID","onChange","e","valueSetter","currentTarget","div","className","inputPrefix","colorPicker","ColorPicker","color","colorSetter","enableNamedColors","suffix","Select","menuShouldPortal","stateSetter","IconButton","variant","tooltip","onClick","remover","theme","css","spacing","Color","asHex","g","asRGB","blendWith","col","Math","round","Mul","RGBToHex","rgb","sep","indexOf","RGBAToHex","orig","alpha","hex","parseInt","parseFloat","fromHex","substring","bigint","GLOBAL_FILL_COLOR_RGBA","DEFAULT_OK_COLOR_HEX","DEFAULT_OK_COLOR","DEFAULT_WARNING_COLOR_HEX","DEFAULT_WARNING_COLOR","DEFAULT_CRITICAL_COLOR_HEX","DEFAULT_CRITICAL_COLOR","GLOBAL_TEXT_FONT_FAMILY","INTER","GLOBAL_TOOLTIP_FONT_FAMILY","GLOBAL_TEXT_FONT_FAMILY_LEGACY","ROBOTO","GLOBAL_TOOLTIP_FONT_FAMILY_LEGACY","ThresholdsEditor","tracker","_setTracker","thresholds","items","order","UUIdv4","theme2","useTheme2","oldTheme","useTheme","setTracker","allThresholds","element","setter","updateThresholdValue","orderedThresholds","orderBy","updateThresholdColor","useColor","visualization","getColorByName","getColorForTheme","updateThresholdState","colorForThresholdState","removeThreshold","removeIndex","splice","Button","fill","icon","aTracker","getMetricHints","frames","metricHints","hintValue","aField","fields","FieldType","number","labels","appendLabels","aLabel","config","displayNameFromDS","OverrideItem","props","setMetricHints","override","_setOverride","setOverride","visibleIcon","hiddenIcon","operatorName","setOperatorName","getOperator","useEffect","context","data","hints","metricName","Card","Meta","FieldSet","Field","description","enabled","placeholder","Cascader","initialValue","allowCustomValue","onSelect","val","hidden","alias","decimals","UnitPicker","unitFormat","span","clickThrough","Switch","transparent","clickThroughSanitize","clickThroughOpenNewTab","clickThroughCustomTargetEnabled","clickThroughCustomTarget","Actions","moveUp","moveDown","createDuplicate","OverrideEditor","item","settings","overrideConfig","overrides","allOverrides","isOpen","setIsOpen","openStates","updateOverride","showTimestampEnabled","showTimestampFormat","showTimestampYOffset","scaledDecimals","colors","arrayMove","oldIndex","newIndex","k","removeOverride","Collapse","onToggle","currentState","toggleOpener","collapsible","thirdPi","PI","angles","pointX","pointY","floor","createCoords","x","y","oppositeSideMap","left","right","bottom","top","oppositeAlignmentMap","start","end","clamp","param","placement","axis","getAxisLength","getAlignmentAxis","alignment","getOppositePlacement","side","padding","expandPaddingObject","rect","width","height","computeCoordsFromPlacement","_ref","reference","floating","sideAxis","alignmentAxis","alignLength","isVertical","commonX","commonY","commonAlign","coords","async","detectOverflow","_await$platform$isEle","platform","rects","elements","strategy","boundary","rootBoundary","elementContext","altBoundary","paddingObject","clippingClientRect","getClippingRect","isElement","contextElement","getDocumentElement","offsetParent","getOffsetParent","offsetScale","getScale","elementClientRect","convertOffsetParentRelativeRectToViewportRelativeRect","getNodeName","node","isNode","nodeName","getWindow","_node$ownerDocument","ownerDocument","defaultView","window","document","documentElement","Node","Element","isHTMLElement","HTMLElement","isShadowRoot","ShadowRoot","isOverflowElement","overflow","overflowX","overflowY","display","isTableElement","isContainingBlock","webkit","isWebKit","transform","perspective","containerType","backdropFilter","willChange","contain","CSS","supports","isLastTraversableNode","getComputedStyle","getNodeScroll","scrollLeft","scrollTop","pageXOffset","pageYOffset","getParentNode","assignedSlot","parentNode","host","getNearestOverflowAncestor","body","getOverflowAncestors","traverseIframes","_node$ownerDocument2","scrollableAncestor","isBody","win","concat","visualViewport","frameElement","getCssDimensions","hasOffset","offsetWidth","offsetHeight","shouldFallback","$","unwrapElement","domElement","getBoundingClientRect","isFinite","noOffsets","getVisualOffsets","offsetLeft","offsetTop","includeScale","isFixedStrategy","clientRect","scale","visualOffsets","isFixed","floatingOffsetParent","shouldAddVisualOffsets","offsetWin","currentWin","currentIFrame","iframeScale","iframeRect","clientLeft","paddingLeft","clientTop","paddingTop","topLayerSelectors","isTopLayer","selector","matches","getWindowScrollBarX","getClientRectFromClippingAncestor","clippingAncestor","html","clientWidth","clientHeight","visualViewportBased","getViewportRect","scroll","scrollWidth","scrollHeight","direction","getDocumentRect","getInnerBoundingClientRect","hasFixedPositionAncestor","stopNode","position","getRectRelativeToOffsetParent","isOffsetParentAnElement","offsets","offsetRect","isStaticPositioned","getTrueOffsetParent","polyfill","svgOffsetParent","currentNode","getContainingBlock","topLayer","clippingAncestors","cachedResult","el","currentContainingBlockComputedStyle","elementIsFixed","computedStyle","currentNodeIsContaining","ancestor","getClippingElementAncestors","_c","firstClippingAncestor","clippingRect","reduce","accRect","getElementRects","getOffsetParentFn","getDimensionsFn","getDimensions","floatingDimensions","getClientRects","isRTL","fn","_middlewareData$offse","_middlewareData$arrow","middlewareData","diffCoords","mainAxisMulti","crossAxisMulti","rawValue","mainAxis","crossAxis","convertValueToCoords","arrow","alignmentOffset","checkMainAxis","checkCrossAxis","limiter","detectOverflowOptions","mainAxisCoord","crossAxisCoord","maxSide","limitedCoords","_middlewareData$flip","initialPlacement","fallbackPlacements","specifiedFallbackPlacements","fallbackStrategy","fallbackAxisSideDirection","flipAlignment","isBasePlacement","oppositePlacement","getExpandedPlacements","isStart","lr","rl","tb","bt","getSideList","getOppositeAxisPlacements","placements","overflows","overflowsData","flip","sides","mainAlignmentSide","_middlewareData$flip2","_overflowsData$filter","nextIndex","nextPlacement","reset","resetPlacement","_overflowsData$map$so","acc","mergedOptions","platformWithCache","middleware","validMiddleware","Boolean","statefulPlacement","resetCount","nextX","nextY","computePosition","core","S","ref","l","REACT_TOOLTIP_DISABLE_CORE_STYLES","REACT_TOOLTIP_DISABLE_BASE_STYLES","insertAt","getElementById","warn","head","getElementsByTagName","createElement","firstChild","insertBefore","appendChild","styleSheet","cssText","createTextNode","E","elementReference","tooltipReference","tooltipArrowReference","place","middlewares","border","tooltipStyles","tooltipArrowStyles","arrowDimensions","isYAxis","minProp","maxProp","clientProp","endDiff","startDiff","arrowOffsetParent","clientSize","centerToReference","largestPossiblePadding","minPadding","maxPadding","min$1","center","shouldAddOffset","centerOffset","then","u","borderBottom","borderRight","A","setTimeout","clearTimeout","cancel","O","T","SVGElement","getPropertyValue","C","parentElement","scrollingElement","L","anchorRefs","activeAnchor","current","attach","detach","setActiveAnchor","N","getTooltipData","I","B","fixed","noArrow","clickable","show","closing","dark","light","success","warning","info","D","forwardRef","classNameArrow","anchorId","anchorSelect","events","h","openOnClick","w","positionStrategy","wrapper","delayShow","delayHide","float","closeOnEsc","closeOnScroll","j","closeOnResize","openEvents","q","closeEvents","H","globalCloseEvents","imperativeModeOnly","W","style","P","V","afterShow","F","afterHide","K","content","U","contentWrapperRef","X","Y","defaultIsOpen","G","Z","J","Q","ee","opacity","te","arrowColor","oe","role","le","ne","ce","ie","se","ae","ue","de","pe","ve","me","fe","ye","he","we","be","Se","ge","Ee","Ae","_e","Oe","Te","ke","click","dblclick","mousedown","Ce","mouseenter","focus","assign","Le","mouseleave","blur","mouseup","Re","escape","resize","clickOutsideAnchor","xe","Ne","$e","Ie","je","target","isConnected","Be","ze","De","clientX","clientY","qe","contains","querySelector","He","Me","We","Pe","Ve","addEventListener","update","ancestorScroll","ancestorResize","elementResize","ResizeObserver","layoutShift","IntersectionObserver","animationFrame","referenceEl","ancestors","passive","cleanupIo","onMove","timeoutId","io","root","cleanup","_io","disconnect","refresh","skip","rootMargin","isFirstUpdate","handleObserve","entries","ratio","intersectionRatio","observe","observeMove","frameId","reobserveFrame","resizeObserver","firstEntry","unobserve","cancelAnimationFrame","requestAnimationFrame","_resizeObserver","prevRefRect","frameLoop","nextRefRect","_resizeObserver2","removeEventListener","event","listener","MutationObserver","attributeName","getAttribute","oldValue","removedNodes","nodeType","flatMap","querySelectorAll","addedNodes","childList","subtree","attributes","attributeFilter","attributeOldValue","Fe","Ke","open","delay","close","onTransitionEnd","propertyName","background","dangerouslySetInnerHTML","__html","render","f","children","disableStyleInjection","getAttributeNames","dispatchEvent","CustomEvent","detail","disableCore","disableBase","Gradients","pureLight","colorGradients","gradients","aColorStart","aColorEnd","createGradients","okColorStart","okColorEnd","warningColorStart","warningColorEnd","criticalColorStart","criticalColorEnd","gradientId","defs","aGradient","linearGradient","x1","y1","x2","y2","stop","stopColor","LayoutManager","setRadius","radius","setHeight","setWidth","generateHexagonPointedTopLayout","getHexFlatTopRadius","generateUniformLayout","getUniformRadius","hexRadius","d3","numColumns","SQRT3","numRows","truncateFloat","getHexFlatTopDiameters","diameterX","diameterY","getUniformDiameters","horizontalMax","maxColumnsUsed","verticalMax","maxRowsUsed","uniformRadius","generatePossibleColumnAndRowsSizes","columnAutoSize","rowAutoSize","dataSize","squared","sqrt","ceil","generateActualColumnAndRowUsage","displayLimit","polygonsUsed","columnsUsed","shapeToCoordinates","shape","column","row","HEXAGON_POINTED_TOP","CIRCLE","SQUARE","generatePoints","points","Infinity","aPoint","generateUniformPoints","xPos","yPos","generateRadius","autoSize","getOffsets","getOffsetsHexagonPointedTop","getOffsetsSquare","getOffsetsUniform","shapeWidth","shapeHeight","offsetToViewY","oddCount","evenCount","getOddEvenCountForRange","actualHeightUsed","yoffset","offsetToViewX","widthOffset","actualWidthUsed","xoffset","getDiameters","getErrorMessageStyles","typography","h1","fontSize","shade","getNoTriggerTextStyles","getWrapperStyles","getSVGStyles","getSVGPathStyles","Tooltip","renderTime","showTime","valueEnabled","tooltipColumnHeadersEnabled","primarySortByField","primarySortDirection","secondarySortByField","secondarySortDirection","displayMode","tooltipDisplayTextTriggeredEmpty","tooltipFontFamily","getTooltipStyles","timestamp","Date","table","fontFamily","tooltipTable","thead","isComposite","members","tr","th","tooltipCompositeHeading","colSpan","displayName","getCompositeHeader","tooltipNameHeading","tooltipValueHeading","tfoot","td","tooltipTime","dateTimeFormatWithAbbrevation","tbody","dataToSort","triggerCount","triggered","thresholdLevel","getTriggeredCount","compositeWithTriggeredItemsOnly","filterTriggered","sortedMembers","sortSettings","getSortDirection","pUseLowercase","lowerCase","pDirection","sDirection","sUseLowercase","pSortFunction","sSortFunction","lodashOrderBy","multiSort","tooltipName","tooltipValue","valueFormatted","getCompositeMetrics","borderRadius","primary","shadows","z2","text","GetDecimalsForValue","panelDecimals","lodashIsNumber","delta","dec","log","LN10","magn","pow","norm","getTextWidth","font","getContext","measureText","roundValue","formatted","toFixed","computeTextFontSize","minFont","maxFont","linesToDisplay","textAreaWidth","textAreaHeight","minFontPx","maxFontPx","getTextSizeForWidthAndHeight","Polystat","divStyles","svgStyles","svgPathStyles","noTriggerTextStyles","errorMessageStyles","tooltipTheme","isDark","animationRefs","setAnimationRefs","React","animationTimestampRefs","setAnimationTimestampRefs","animationMetricIndexes","setAnimationMetricIndexes","animatedItems","setAnimatedItems","uniquePanelId","panelId","animateComposite","useCallback","metricIndex","isValueAnimated","globalShowValueEnabled","processedData","showValue","formatCompositeValueAndTimestamp","globalDisplayTextTriggeredEmpty","innerHTML","globalShowTimestampEnabled","ts","shouldAnimate","animate","tick","JSON","stringify","newAnimationRefs","newAnimationTimestampRefs","newAnimationMetricIndexes","createRef","updateAnimation","speed","compositeConfig","animationSpeed","setInterval","clearInterval","lm","panelWidth","panelHeight","layoutNumColumns","layoutNumRows","layoutDisplayLimit","autoSizePolygons","globalShape","autoSizeColumns","autoSizeRows","globalPolygonSize","calculatedPoints","aHexbin","dx","dy","x0","y0","hexbin","binsById","bins","px","point","py","pj","pi","py1","abs","px1","pi2","pj2","px2","py2","bin","hexagon","angle","sin","cos","centers","mesh","fragment","extent","innerArea","symbol","d3symbol","customShape","symbolCircle","symbolSquare","getCoords","activeLabelFontSize","globalFontSize","activeValueFontSize","activeCompositeValueFontSize","activeTimestampFontSize","globalShowTimestampFontSize","showEllipses","numOfChars","ellipseCharacters","hasShowTimeStampEnabled","hasShowValueEnabled","globalAutoScaleFonts","showTimestamp","maxLabel","nameToCheck","getMaxLabel","maxValue","maxTimestamp","timestampFormatted","subMetricCount","counter","checkContent","checkCompositeTimestamp","getMaxValueAndTimestamp","haveCompositeValueEnabled","AutoFontScalar","globalTextFontFamily","alignments","valueWithLabelTextAlignment","valueOnlyTextAlignment","labelWithValueTextAlignment","labelOnlyTextAlignment","labelTextAlignmentX","labelValueAlignmentX","valueWithTimestampAlignment","timestampAlignment","GetAlignments","timestampLineSpacing","compositeTimestampLineSpacing","globalShowTimestampPosition","BELOW_VALUE","drawShape","fillColor","globalGradientsEnabled","useRadius","path","data-tooltip-id","globalTooltipsEnabled","data-tooltip-content","data-tooltip-position-strategy","stroke","globalPolygonBorderColor","strokeWidth","globalPolygonBorderSize","circle","cx","cy","marginLeft","marginTop","detectEmptyState","layoutIssueDetected","limit","detectLayoutIssue","svg","xmlns","xmlnsXlink","viewBox","useUrl","sanitizeURLEnabled","sanitizedURL","resolvedClickthroughTarget","clickThroughTarget","newTabEnabled","customClickthroughTargetEnabled","customClickthroughTarget","resolveClickThroughTarget","clickableUrl","href","verticalAlignment","textAnchor","globalTextFontAutoColorEnabled","globalTextFontAutoColor","globalTextFontColor","pointerEvents","showName","getTextToDisplay","ellipseEnabled","getLabelContent","globalShowTimestampYOffset","ABOVE_VALUE","valueContent","useFontSize","getValueContent","getTimestampForValueContent","Portal","ReactTooltip","boxShadow","contentIndex","globalTooltipsShowTimestampEnabled","globalTooltipsShowValueEnabled","globalShowTooltipColumnHeadersEnabled","tooltipPrimarySortByField","tooltipPrimarySortDirection","tooltipSecondarySortByField","tooltipSecondarySortDirection","tooltipDisplayMode","globalTooltipsFontFamily","autoSizeFonts","timestampContent","len","triggeredIndex","triggerCache","aMember","cachedMemberState","buildTriggerCache","textUtil","sanitize","frameHasTimestamp","frame","time","flattenLabels","rowNum","labelIndexes","numFields","string","labelWithValues","indexes","labelAndValue","indexValue","getValueOfField","getLabelValues","field","toArray","getWorstSeries","series1","series2","worstSeries","series1ThresholdLevel","series2ThresholdLevel","getThresholdLevelForValue","defaultColor","currentColor","thresholdCount","aThreshold","upperThreshold","lowerThreshold","ClickThroughTransformer","transformSingleMetric","url","cellName","cellValue","encodeURIComponent","cellRawValue","transformNthMetric","nthCellName","matched","nthName","nthCellValue","nthValue","nthCellRawValue","transformComposite","compositeNameRegex","transformByRegex","pattern","regex","stringToJsRegex","aMatch","matchType1","matchType2","groups","CUSTOM_SPLIT_DELIMITER","TimeFormatter","timeZone","timestampFormat","dateTime","utc","customFormatter","resolveMemberTemplates","compositeName","replaceVariables","variableRegex","member","seriesMatch","matchResult","resolvedSeriesNames","aName","newName","escapedName","escapeStringForRegex","newNameEscaped","seriesName","seriesNameEscaped","resolveMemberAliasTemplates","scopedVars","getTemplateSrv","GetValueByOperator","calcs","now","MappingType","isNullValueMap","mapping","ThresholdsMode","SpecialValueMatch","FieldColorModeId","LegacyMappingType","GetMappedValue","valueMappings","mappedValue","allFormattedValueMappings","allValueMappings","valueMapping","valueToTextMapping","valueAsNumber","valueToTextMappingAsNumber","addValueToTextMappingText","rangeToTextMapping","fromAsNumber","toAsNumber","addRangeToTextMappingText","t1","t2","getAllFormattedValueMappings","getMappedValue","vm","ValueToText","RangeToText","RegexToText","res","SpecialValue","Null","NaN","NullAndNaN","True","False","Empty","getValueMappingResult","resolveOverrideTemplates","template","MatchOverride","resolvedOverrides","anOverride","ProcessDataFrames","compositesEnabled","composites","fieldConfig","globalClickthrough","globalClickthroughTabEnabled","globalClickthroughSanitizedEnabled","globalClickthroughCustomTargetEnabled","globalClickthroughCustomTarget","globalOperator","globalDecimals","globalDisplayMode","globalRegexPattern","globalFillColor","globalThresholds","globalUnitFormat","globalShowLabel","globalShowValue","globalShowTimestamp","globalShowTimestampFormat","sortByDirection","sortByField","compositesGlobalAliasingEnabled","themeV1","themeV2","timeToInsert","newData","newFrame","meta","hasTimestamp","copiedField","aFieldValues","rowsOfField","fc","timeField","InsertTime","series","internalData","models","DataFrameToPolystat","aModel","ApplyGlobalRegexPattern","ApplyGlobalFormatting","realGlobalFillColor","aSeries","dataValue","stats","defaults","mappings","realColor","formatFunc","getValueFormat","valueRounded","ApplyOverrides","filteredMetrics","keepMetrics","clonedComposites","resolvedComposites","metricComposites","resolved","isTemplated","resolveCompositeTemplates","matchedMetrics","aComposite","showComposite","currentWorstSeries","templatedMembers","metrics","aMetric","seriesItem","showMembers","sanitizeUrl","clone","itemIndex","keptMetric","location","lodashIncludes","ApplyComposites","ApplyGlobalClickThrough","FilterByGlobalDisplayMode","sortField","sortOrder","reverseSort","lodashSortBy","itemContent","lodashToLower","collator","Intl","Collator","sensitivity","reverse","SortVariableValuesByField","regexPattern","regexVal","temp","extractedTxt","globalClickthroughNewTabEnabled","processDefaultClickThrough","compositeMetrics","dataLen","valueFields","newestTimestamp","aTimestamp","timestampIndex","getTime","valueField","valueFieldName","getFieldDisplayName","standardCalcs","reduceField","reducers","operatorValue","maxDecimals","unit","formattedValueToString","model","getComponentStyles","container","CompositeMetricItem","copySelectedMetricToClipboard","metric","aValue","navigator","clipboard","writeText","execCommand","HorizontalGroup","removeMetric","minWidth","updateMetric","updateMetricAlias","CompositeItem","composite","_setComposite","setDisplayMode","getDisplayMode","setComposite","allMetrics","newMetric","UUIDv4","currentMetrics","CompositeEditor","_setAnimationSpeed","_setCompositesEnabled","allComposites","updateComposite","removeComposite","compositeIndex","setCompositesEnabled","setAnimationSpeed","toggleState","GlobalThresholdEditor","setGlobalThresholds","globalThresholdsConfig","convertOperators","hasRobotoFont","buildInfo","plugin","PanelPlugin","currentThemeV1","currentThemeV2","cachedProcessedData","setCachedProcessedData","LoadingState","Done","compositeGlobalAliasingEnabled","setMigrationHandler","panel","polystat","newDefaults","angular","columns","defaultClickThrough","defaultClickThroughNewTab","defaultClickThroughSanitize","fontAutoColor","fontAutoScale","globalOperatorName","migratedThreshold","gradientEnabled","hexagonSortByDirection","hexagonSortByField","polygonBorderColor","polygonBorderSize","polygonGlobalFillColor","radiusAutoSize","rows","tooltipEnabled","tooltipPrimarySortField","tooltipSecondarySortField","tooltipTimestampEnabled","migrateDefaults","migratedOverrides","savedOverrides","seriesOverride","migrateOverrides","migratedComposites","savedComposites","memberIndex","migrateComposites","newMaps","mappingType","newValueMappings","valueMaps","convertOldAngularValueMappings","newRangeMappings","rangeMaps","newMappings","migrateValueAndRangeMaps","useFieldConfig","disableStandardOptions","FieldConfigProperty","Thresholds","Decimals","DisplayName","Max","Min","Links","NoValue","Unit","standardOptions","Mappings","setPanelOptions","builder","addBooleanSwitch","defaultValue","category","addNumberInput","placeHolder","integer","showIf","addSelect","addColorPicker","addTextInput","addUnitPicker","addCustomEditor","editor","setSuggestionsSupplier","getSuggestionsForData","dataSummary","ds","hasData","hasNumberField","getListAppender","pluginId","append"],"sourceRoot":""}